{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SINCRONE-ASINCRONE-FETCH-WEBSOCKET","text":""},{"location":"#1-introduccio","title":"1. Introducci\u00f3","text":"<ul> <li>Introducci\u00f3n</li> <li>\u00bfCallback?</li> </ul>"},{"location":"#2-xmlhttprequest","title":"2. xmlhttprequest","text":"<ul> <li>xmlhttprequest: Obsolet pero actiu a molts codis</li> </ul>"},{"location":"#3-fetch","title":"3. Fetch","text":"<ul> <li>fetch i promises</li> <li>await</li> <li>CodeTour</li> <li>exercicis</li> <li>Solucions</li> </ul>"},{"location":"#4-websocket","title":"4. WebSocket","text":"<ul> <li>WebSocket: comunicaci\u00f3 constant</li> <li>CodeTour</li> </ul>"},{"location":"#5-recursos-videos","title":"5. Recursos videos","text":"<ul> <li>Ejempplo xmlHttp y Ajax</li> <li>Instalaccion NodeJS</li> <li>Instalaccion  y ejemplo WebSocket</li> <li>Axios</li> </ul>"},{"location":"#requisitos-previos","title":"Requisitos Previos","text":"<p>Para seguir este curso, se recomienda tener conocimientos b\u00e1sicos de:</p> <ul> <li>HTML, CSS y JavaScript.</li> <li>Programaci\u00f3n en TypeScript.</li> <li>Uso de la terminal y manejo de npm.</li> <li>REACT</li> </ul>"},{"location":"ajax_fetch/","title":"3. AJAX amb Fetch","text":"<p>La funci\u00f3 <code>fetch()</code> \u00e9s una alternativa moderna a <code>XMLHttpRequest</code> per fer peticions HTTP. \u00c9s m\u00e9s neta i senzilla d\u2019utilitzar, basada en promeses (<code>Promise</code>) i compatible amb async/await.</p>"},{"location":"ajax_fetch/#comparativa-xmlhttprequest-vs-fetch","title":"\u2696\ufe0f Comparativa: XMLHttpRequest vs Fetch","text":"Caracter\u00edstica <code>XMLHttpRequest</code> <code>fetch()</code> API basada en Esdeveniments (<code>onreadystatechange</code>) Promeses (<code>.then()</code>, <code>.catch()</code>) Sintaxi Verbosa i complexa Clara i moderna Tractament d'errors S\u2019ha de gestionar amb estats i codis manualment Es pot gestionar amb <code>catch()</code> Suport per JSON Manual (<code>JSON.parse()</code>, <code>JSON.stringify()</code>) Integrat (<code>response.json()</code>) C\u00e0rrega de fitxers Mitjan\u00e7ant <code>FormData</code> + <code>send()</code> Mitjan\u00e7ant <code>FormData</code> + <code>body</code> Cancel\u00b7laci\u00f3 de peticions No suportada per defecte Amb <code>AbortController</code> Suport en navegadors antics Molt compatible Millor en navegadors moderns <p>Una promesa (Promise) representa una operaci\u00f3 as\u00edncrona que encara no ha finalitzat, per\u00f2 que ho far\u00e0 en el futur. Pot estar en un d\u2019aquests tres estats:</p> <ul> <li>Pending: en espera (pendent)</li> <li>Fulfilled: resolta amb \u00e8xit</li> <li>Rejected: rebutjada per un error</li> </ul>"},{"location":"ajax_fetch/#flux-de-vida-duna-promise","title":"\ud83d\udd04  Flux de vida d\u2019una Promise","text":"<pre><code>graph TD\n    A[\"Promise creada (pending)\"] --&gt;|Operaci\u00f3 completada| B[\"resolve() \u2192 fulfilled\"]\n    A --&gt;|Error o fallada| C[\"reject() \u2192 rejected\"]\n    B --&gt; D[\"then() \u2192 gestiona \u00e8xit\"]\n    C --&gt; E[\"catch() \u2192 gestiona error\"]</code></pre>"},{"location":"ajax_fetch/#flux-de-peticio-amb-fetch","title":"\ud83d\udcca Flux de petici\u00f3 amb Fetch","text":"<pre><code>sequenceDiagram\n    participant JS\n    participant Server\n\n    JS-&gt;&gt;Server: fetch(url, config)\n    Server--&gt;&gt;JS: Retorna resposta (JSON/XML/Text)\n    JS-&gt;&gt;JS: then() \u2192 processar resposta</code></pre> <p>Les promeses permeten escriure codi m\u00e9s net i estructurat per gestionar operacions as\u00edncrones com peticions a servidors, temporitzadors, lectura de fitxers, etc.</p>"},{"location":"ajax_fetch/#exemple-de-peticio-get-amb-fetch","title":"\ud83d\ude80 Exemple de petici\u00f3 GET amb Fetch","text":"<pre><code>let configFetch = {\n  method: \"GET\",\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n};\n\nfetch(\"ejemplo.php?n1=2&amp;n2=3\", configFetch)\n  .then(response =&gt; response.json())\n  .then(objetoJSON =&gt; {\n    console.log(objetoJSON);\n  })\n  .catch(err =&gt; console.log(\"Error en la petici\u00f3\", err));\n</code></pre>"},{"location":"ajax_fetch/#exemple-de-peticio-post-amb-fetch","title":"\ud83d\udce4 Exemple de petici\u00f3 POST amb Fetch","text":"<pre><code>let configFetch = {\n  method: \"POST\",\n  body: \"n1=2&amp;n2=3\",\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n};\n\nfetch(\"ejemplo.php\", configFetch)\n  .then(response =&gt; response.json())\n  .then(objetoJSON =&gt; {\n    console.log(objetoJSON);\n  });\n</code></pre>"},{"location":"ajax_fetch/#funcions-utils-de-la-resposta","title":"\ud83e\uddf0 Funcions \u00fatils de la resposta","text":"<p>Aqu\u00ed tens la taula ampliada amb m\u00e9s funcions i propietats \u00fatils de la resposta (<code>Response</code>) en <code>fetch</code>:</p> Funci\u00f3 / Propietat Descripci\u00f3 <code>response.ok</code> Indica si la resposta t\u00e9 un codi d'estat entre 200 i 299 (\u00e8xit). <code>response.status</code> Retorna el codi d'estat HTTP (ex: 200, 404, 500...). <code>response.statusText</code> Missatge de l'estat HTTP (ex: \"OK\", \"Not Found\"). <code>response.url</code> Retorna la URL final de la resposta (pot ser diferent si hi ha redirecci\u00f3). <code>response.headers</code> Objecte amb totes les cap\u00e7aleres de la resposta (<code>Headers</code>). <code>response.json()</code> Converteix el cos de la resposta a un objecte JSON (promesa). <code>response.text()</code> Retorna el cos de la resposta com a text (promesa). <code>response.blob()</code> Retorna el cos com a <code>Blob</code>, \u00fatil per descarregar arxius. <code>response.formData()</code> Retorna el cos com a <code>FormData</code>, habitual en formularis. <code>response.arrayBuffer()</code> Retorna el cos com a dades bin\u00e0ries (<code>ArrayBuffer</code>). <code>response.redirected</code> Indica si la resposta \u00e9s resultat d'una redirecci\u00f3 autom\u00e0tica (<code>true/false</code>). <code>response.type</code> Tipus de resposta (<code>basic</code>, <code>cors</code>, <code>opaque</code>, etc.). <code>response.bodyUsed</code> Indica si el cos de la resposta ja s'ha llegit (<code>true/false</code>). <p>\ud83d\udccc Nota: Les funcions com <code>.json()</code>, <code>.text()</code> i <code>.blob()</code> retornen promeses, perqu\u00e8 l'acc\u00e9s al cos pot ser as\u00edncron.</p>"},{"location":"ajax_fetch/#enviament-de-fitxers-amb-fetch-i-formdata","title":"\ud83d\udce6 Enviament de fitxers amb Fetch i FormData","text":"<pre><code>&lt;input type=\"file\" id=\"arxiu\"&gt;\n&lt;input type=\"button\" onclick=\"enviarFitxer()\"&gt;\n</code></pre> <pre><code>function enviarFitxer() {\n  let control = document.getElementById(\"arxiu\");\n  let form = new FormData();\n  form.append(\"arxiu\", control.files[0]);\n  form.append(\"param1\", \"valor1\");\n  form.append(\"param2\", \"valor2\");\n\n  fetch(\"http://localhost:8089/endpoint\", {\n    method: \"POST\",\n    body: form\n  })\n  .then(resp =&gt; resp.json())\n  .then(respJSON =&gt; {\n    console.log(respJSON);\n  });\n}\n</code></pre>"},{"location":"ajax_fetch/#tractament-derrors-amb-fetch","title":"\u2757\ufe0fTractament d\u2019errors amb Fetch","text":"<p><code>fetch()</code> no llen\u00e7a errors autom\u00e0ticament si el servidor retorna un codi com 404 o 500. Cal verificar-ho manualment:</p> <pre><code>fetch(\"endpoint.php\")\n  .then(response =&gt; {\n    if (!response.ok) {\n      throw new Error(\"Error HTTP: \" + response.status);\n    }\n    return response.json();\n  })\n  .then(data =&gt; console.log(data))\n  .catch(error =&gt; console.error(\"S'ha produ\u00eft un error:\", error));\n</code></pre> <p>Altres errors habituals: - \u274c Error de sintaxi a <code>fetch</code> (oblit de <code>{}</code> o cometes) - \u274c <code>body</code> mal format (ex. no usar <code>JSON.stringify()</code> per a JSON) - \u274c Cap\u00e7alera <code>Content-Type</code> no coincident amb el cos - \u274c Servidor sense suport per CORS (error de seguretat en cross-domain)</p>"},{"location":"ajax_fetch/#casos-dus-habituals-amb-fetch","title":"\ud83d\udca1 Casos d\u2019\u00fas habituals amb Fetch","text":"<ul> <li>Consultes d\u2019API REST: recuperaci\u00f3 de dades des de serveis externs.</li> <li>\u270f\ufe0f Formularis de contacte: enviament din\u00e0mic de dades sense reload.</li> <li>\ud83d\uddbc\ufe0f Carrega d\u2019imatges i fitxers: gesti\u00f3 de fitxers mitjan\u00e7ant FormData.</li> <li>\ud83d\udcca Aplicacions SPA: Fetch permet la c\u00e0rrega din\u00e0mica de contingut en aplicacions d\u2019una sola p\u00e0gina.</li> </ul>"},{"location":"ajax_fetch/#glossari-de-termes-clau-per-fetch","title":"\ud83d\udcd8 Glossari de termes clau per Fetch","text":"Terme Definici\u00f3 <code>fetch()</code> Funci\u00f3 moderna per fer peticions HTTP en JavaScript <code>Promise</code> Objecte que representa un resultat futur (\u00e8xit o error) <code>async/await</code> Sintaxi moderna per treballar amb promeses de forma m\u00e9s clara <code>headers</code> Objecte amb les cap\u00e7aleres HTTP a enviar amb la petici\u00f3 <code>body</code> Contingut que s\u2019envia en una petici\u00f3 POST/PUT <code>Content-Type</code> Tipus de dades que s\u2019envien (ex. JSON, form-urlencoded, multipart...) <code>response.ok</code> Boole\u00e0 que indica si la resposta \u00e9s exitosa (status 200\u2013299) <code>response.status</code> Codi HTTP retornat pel servidor (ex. 200, 404) <code>response.json()</code> Converteix la resposta a objecte JavaScript (si el contingut \u00e9s JSON) <code>response.text()</code> Llegeix la resposta com a text pla <code>FormData</code> Objecte per encapsular fitxers i camps de formulari per POST"},{"location":"ajax_fetch/#alternativa-axios","title":"\ud83e\uddea Alternativa: Axios","text":"<p>Axios \u00e9s una llibreria basada en promeses com <code>fetch</code>, per\u00f2 amb m\u00e9s funcionalitats per defecte:</p> <pre><code>npm install axios\n</code></pre> <pre><code>import axios from 'axios';\n\naxios.post(\"/endpoint\", {\n  nom: \"Maria\",\n  edat: 25\n})\n.then(response =&gt; {\n  console.log(response.data);\n})\n.catch(error =&gt; {\n  console.error(\"Error a la petici\u00f3\", error);\n});\n</code></pre>"},{"location":"ajax_fetch/#avantatges-de-axios","title":"Avantatges de Axios:","text":"<ul> <li>Suporta autom\u00e0ticament JSON</li> <li>Gestiona errors HTTP com excepcions</li> <li>Permet cancel\u00b7lar peticions</li> <li>Funciona tant al navegador com a Node.js</li> </ul>"},{"location":"ajax_xmlhttprequest/","title":"2. AJAX amb XMLHttpRequest","text":"<p>AJAX (Asynchronous JavaScript and XML) \u00e9s una t\u00e8cnica que permet fer peticions al servidor de manera as\u00edncrona, evitant recarregar tota la p\u00e0gina. Utilitza principalment l'objecte <code>XMLHttpRequest</code>, tot i que avui dia tamb\u00e9 s'utilitza molt <code>fetch()</code>.</p>"},{"location":"ajax_xmlhttprequest/#flux-duna-peticio-ajax-amb-xmlhttprequest","title":"\ud83d\udcca Flux d\u2019una petici\u00f3 AJAX amb XMLHttpRequest","text":"<pre><code>sequenceDiagram\n    participant JS\n    participant Server\n\n    JS-&gt;&gt;Server: open() + send()\n    Server--&gt;&gt;JS: Retorna resposta (XML/JSON)\n    JS-&gt;&gt;JS: onreadystatechange \u2192 callback\n    JS-&gt;&gt;JS: Gestiona i mostra dades</code></pre>"},{"location":"ajax_xmlhttprequest/#components-basics-de-xmlhttprequest","title":"\ud83e\uddf1 Components b\u00e0sics de XMLHttpRequest","text":""},{"location":"ajax_xmlhttprequest/#creacio-duna-peticio-get","title":"\ud83d\udd27 Creaci\u00f3 d'una petici\u00f3 GET","text":"<pre><code>let xmlHttp = new XMLHttpRequest();\nlet url = \"valida.php?nom=cristian&amp;edat=8\";\n\nxmlHttp.open(\"GET\", url, true); // true indica que \u00e9s as\u00edncrona\nxmlHttp.onreadystatechange = function () {\n  if (xmlHttp.readyState === 4 &amp;&amp; xmlHttp.status === 200) {\n    console.log(xmlHttp.responseText);\n    gestionaResposta(xmlHttp);\n  }\n};\nxmlHttp.send(null);\n</code></pre>"},{"location":"ajax_xmlhttprequest/#estats-de-readystate","title":"\ud83d\udd01 Estats de readyState","text":"Estat Descripci\u00f3 0 No iniciada 1 Connexi\u00f3 oberta 2 Headers rebuts 3 Rebent dades 4 Petici\u00f3 completada"},{"location":"ajax_xmlhttprequest/#peticio-post-amb-xmlhttprequest","title":"\ud83d\udce4 Petici\u00f3 POST amb XMLHttpRequest","text":"<pre><code>let xmlHttp = new XMLHttpRequest();\nlet url = \"valida.php\";\n\nxmlHttp.open(\"POST\", url, true);\nxmlHttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\nxmlHttp.onreadystatechange = function () {\n  if (xmlHttp.readyState === 4 &amp;&amp; xmlHttp.status === 200) {\n    console.log(xmlHttp.responseText);\n    gestionaResposta(xmlHttp);\n  }\n};\nxmlHttp.send(\"nom=cristian&amp;edat=88\");\n</code></pre>"},{"location":"ajax_xmlhttprequest/#exemple-de-resposta-en-xml-des-de-php","title":"\ud83d\udce5 Exemple de resposta en XML des de PHP","text":"<pre><code>&lt;?php\n$name = $_GET['nom'];\nheader(\"Content-type: text/xml\");\necho '&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;';\necho \"&lt;nom&gt;&lt;![CDATA[$name]]&gt;&lt;/nom&gt;\";\n?&gt;\n</code></pre>"},{"location":"ajax_xmlhttprequest/#tractament-de-la-resposta-xml","title":"\ud83d\udd0d Tractament de la resposta XML","text":"<pre><code>function repResposta(xmlHttp) {\n  let resp = xmlHttp.responseXML;\n  let listResp = resp.getElementsByTagName(\"nom\");\n  for (let k = 0; k &lt; listResp.length; k++) {\n    let result = listResp[k].childNodes[0].nodeValue;\n    alert(result);\n  }\n}\n</code></pre>"},{"location":"ajax_xmlhttprequest/#exemple-de-resposta-json-des-de-php","title":"\ud83e\uddea Exemple de resposta JSON des de PHP","text":"<pre><code>&lt;?php\n$name = $_GET['nom'];\n$resposta = '{\"nom\":\"' . $name . '\", \"noms\":[\"Cristian\",\"Pedro\"], \"info\":{\"noms\":[\"nom1\",\"nom2\"]}}';\necho $resposta;\n?&gt;\n</code></pre>"},{"location":"ajax_xmlhttprequest/#tractament-de-la-resposta-json","title":"\ud83d\udd0e Tractament de la resposta JSON","text":"<pre><code>function repRespostaJSON(xmlHttp) {\n  if (xmlHttp.status === 200) {\n    let resp = xmlHttp.responseText;\n    let respJSON = JSON.parse(resp);\n    let txt = respJSON.nom;\n    let nom1 = respJSON.noms[0];\n    let nom2 = respJSON.noms[1];\n    console.log(txt, nom1, nom2);\n  }\n}\n</code></pre>"},{"location":"ajax_xmlhttprequest/#enviament-de-fitxers-amb-formdata","title":"\ud83d\udce6 Enviament de fitxers amb FormData","text":"<pre><code>&lt;input type=\"file\" id=\"arxius\"&gt;\n&lt;input type=\"button\" onclick=\"sendFile();\"&gt;\n</code></pre> <pre><code>function sendFile() {\n  let control = document.getElementById(\"arxius\");\n  let arxiu = control.files[0];\n  let form = new FormData();\n  form.append(\"arxiu\", arxiu);\n\n  let xmlHttp = new XMLHttpRequest();\n  xmlHttp.open(\"POST\", \"ajax.php\", true);\n  xmlHttp.send(form);\n}\n</code></pre>"},{"location":"ajax_xmlhttprequest/#casos-dus-reals-amb-xmlhttprequest","title":"\ud83e\udde9 Casos d\u2019\u00fas reals amb XMLHttpRequest","text":""},{"location":"ajax_xmlhttprequest/#formularis-de-registre","title":"\ud83d\udcc4 Formularis de registre","text":"<p>Validaci\u00f3 d'usuari disponible en temps real sense recarregar la p\u00e0gina.</p>"},{"location":"ajax_xmlhttprequest/#gestio-darxius","title":"\ud83d\uddc2\ufe0f Gesti\u00f3 d'arxius","text":"<p>Enviament de documents, imatges o fitxers via formulari amb <code>FormData</code>.</p>"},{"location":"ajax_xmlhttprequest/#aplicacions-interactives","title":"\ud83c\udfae Aplicacions interactives","text":"<p>Jocs en l\u00ednia que intercanvien dades amb el servidor de manera cont\u00ednua (p. ex. puntuaci\u00f3 en temps real).</p>"},{"location":"ajax_xmlhttprequest/#dashboard-i-analitica","title":"\ud83d\udcc8 Dashboard i anal\u00edtica","text":"<p>Actualitzaci\u00f3 de gr\u00e0fiques o dades estad\u00edstiques sense recarregar la p\u00e0gina sencerament.</p>"},{"location":"ajax_xmlhttprequest/#resum-de-conceptes-clau","title":"\ud83d\udd04 Resum de conceptes clau","text":"Concepte Explicaci\u00f3 <code>readyState</code> Estat de la petici\u00f3 (de 0 a 4) <code>status</code> Codi HTTP de resposta del servidor (ex. 200 = OK, 404 = Not Found) <code>responseText</code> Contingut de la resposta del servidor en format text (ex: <code>\"hola ALF\"</code>). <code>responseXML</code> Contingut de la resposta en format XML (si el servidor respon amb XML). <code>JSON.parse(...)</code> Converteix una resposta en format JSON (text) a un objecte JavaScript. <code>setRequestHeader</code> Afegeix cap\u00e7aleres HTTP a la petici\u00f3, \u00fatil en m\u00e8todes com POST o PUT. <code>open(metode, url, async)</code> Defineix el m\u00e8tode (GET/POST), la URL i si \u00e9s una petici\u00f3 as\u00edncrona. <code>send(dades)</code> Envia la petici\u00f3 al servidor; pot portar dades en cas de POST. <code>onreadystatechange</code> Funci\u00f3 que s'executa cada vegada que canvia l'estat de <code>readyState</code>. <code>xmlHttp</code> Objecte creat amb <code>new XMLHttpRequest()</code> per fer la petici\u00f3. <code>console.log(...)</code> Serveix per mostrar informaci\u00f3 a la consola (molt \u00fatil per depurar). <code>true</code> a <code>open(...)</code> Indica que la petici\u00f3 \u00e9s as\u00edncrona (no bloqueja l'execuci\u00f3 del codi). <code>false</code> a <code>open(...)</code> Indica petici\u00f3 s\u00edncrona (desaconsellada perqu\u00e8 bloqueja el navegador). <code>Content-Type</code> Cap\u00e7alera que indica el tipus de contingut enviat (ex: <code>application/json</code>). <code>XMLHttpRequest</code> Objecte integrat de JavaScript per fer peticions HTTP al servidor. <code>FormData</code> Objecte per construir dades a enviar via POST, inclosos fitxers"},{"location":"ajax_xmlhttprequest/#errors-habituals-amb-xmlhttprequest","title":"\u2757\ufe0fErrors habituals amb XMLHttpRequest","text":""},{"location":"ajax_xmlhttprequest/#no-establir-el-metode-correctament","title":"\u274c No establir el m\u00e8tode correctament","text":"<p><pre><code>xmlHttp.open(\"GET\", url); // Falta el tercer par\u00e0metre (true/false)\n</code></pre> \u27a1 Soluci\u00f3: Afegeix <code>true</code> per fer-la as\u00edncrona: <code>xmlHttp.open(\"GET\", url, true);</code></p>"},{"location":"ajax_xmlhttprequest/#no-afegir-capcalera-en-peticions-post","title":"\u274c No afegir cap\u00e7alera en peticions POST","text":"<p><pre><code>// Sense setRequestHeader() en POST\nxmlHttp.open(\"POST\", url, true);\nxmlHttp.send(\"param1=valor\");\n</code></pre> \u27a1 Soluci\u00f3: <code>xmlHttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");</code></p>"},{"location":"ajax_xmlhttprequest/#gestionar-malament-lestat-readystate","title":"\u274c Gestionar malament l'estat readyState","text":"<p><pre><code>if (xmlHttp.readyState === 200) { ... } // ERROR\n</code></pre> \u27a1 Soluci\u00f3: Comprova primer que <code>readyState === 4</code> i despr\u00e9s <code>status === 200</code></p>"},{"location":"ajax_xmlhttprequest/#errors-de-cors","title":"\u274c Errors de CORS","text":"<p>Si el servidor no permet peticions des d\u2019un domini diferent, pot fallar la petici\u00f3. \u27a1 Soluci\u00f3: El servidor ha d\u2019afegir l'encap\u00e7alament <code>Access-Control-Allow-Origin: *</code></p>"},{"location":"ajax_xmlhttprequest/#no-controlar-errors-de-xarxa","title":"\u274c No controlar errors de xarxa","text":"<p><pre><code>xmlHttp.onreadystatechange = function () {\n  if (xmlHttp.readyState === 4) {\n    // No comprova si xmlHttp.status !== 200\n  }\n};\n</code></pre> \u27a1 Soluci\u00f3: Comprova sempre <code>xmlHttp.status</code> i gestiona casos com 404 o 500</p>"},{"location":"await_pildora/","title":"Uso de <code>await</code> en JavaScript y React","text":""},{"location":"await_pildora/#cuando-usar-await","title":"\ud83d\udd39 \u00bfCu\u00e1ndo usar <code>await</code>?","text":"<p>Usa <code>await</code> cuando llamas a una funci\u00f3n as\u00edncrona que devuelve una promesa, como: - <code>fetch()</code> - <code>axios.get()</code> - funciones marcadas como <code>async</code> - operaciones con bases de datos, APIs, timeouts, etc.</p>"},{"location":"await_pildora/#por-que-usar-await","title":"\ud83d\udd39 \u00bfPor qu\u00e9 usar <code>await</code>?","text":"<ul> <li>Para esperar a que se resuelva una promesa sin callbacks ni <code>.then()</code>.</li> <li>Hace que el c\u00f3digo sea m\u00e1s limpio, legible y secuencial.</li> <li>Facilita el manejo de errores con <code>try/catch</code>.</li> </ul>"},{"location":"await_pildora/#como-usar-await","title":"\ud83d\udd39 \u00bfC\u00f3mo usar <code>await</code>?","text":""},{"location":"await_pildora/#en-javascript-clasico","title":"\ud83d\udd38 En JavaScript cl\u00e1sico:","text":"<pre><code>async function cargarDatos() {\n  try {\n    const res = await fetch('https://api.example.com/info');\n    const datos = await res.json();\n    console.log(datos);\n  } catch (err) {\n    console.error('Error al cargar:', err);\n  }\n}\n</code></pre>"},{"location":"await_pildora/#en-react-por-ejemplo-en-useeffect","title":"\ud83d\udd38 En React (por ejemplo, en <code>useEffect</code>):","text":"<pre><code>useEffect(() =&gt; {\n  const cargar = async () =&gt; {\n    const res = await fetch('/api/usuarios');\n    const json = await res.json();\n    setUsuarios(json);\n  };\n  cargar();\n}, []);\n</code></pre>"},{"location":"await_pildora/#reglas-clave","title":"\ud83d\udea8 Reglas clave:","text":"<ul> <li>Solo puedes usar <code>await</code> dentro de una funci\u00f3n <code>async</code>.</li> <li><code>await</code> pausa la ejecuci\u00f3n de esa funci\u00f3n hasta que se resuelva la promesa.</li> <li>No bloquea el resto del c\u00f3digo (\u00a1no congela la app!).</li> </ul>"},{"location":"await_pildora/#ejemplos-de-await-con-post","title":"\ud83d\udfe2 Ejemplos de <code>await</code> con POST","text":""},{"location":"await_pildora/#en-javascript-clasico_1","title":"En JavaScript cl\u00e1sico","text":"<pre><code>async function enviarDatos() {\n  const datos = { nombre: 'Juan', edad: 30 };\n\n  try {\n    const res = await fetch('https://api.example.com/usuarios', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(datos)\n    });\n\n    const resultado = await res.json();\n    console.log('Respuesta:', resultado);\n  } catch (error) {\n    console.error('Error al enviar:', error);\n  }\n}\n</code></pre>"},{"location":"await_pildora/#en-react-evento-de-boton","title":"En React (evento de bot\u00f3n)","text":"<pre><code>import { useState } from 'react';\n\nfunction Formulario() {\n  const [mensaje, setMensaje] = useState('');\n\n  const enviar = async () =&gt; {\n    const datos = { nombre: 'Ana', email: 'ana@example.com' };\n\n    try {\n      const res = await fetch('/api/contacto', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(datos)\n      });\n\n      const resultado = await res.json();\n      setMensaje('Enviado correctamente: ' + resultado.status);\n    } catch (err) {\n      setMensaje('Error al enviar: ' + err.message);\n    }\n  };\n\n  return (\n    &lt;div&gt;\n      &lt;button onClick={enviar}&gt;Enviar datos&lt;/button&gt;\n      &lt;p&gt;{mensaje}&lt;/p&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"await_pildora/#resumen-rapido","title":"\ud83d\udccc Resumen r\u00e1pido:","text":"<ul> <li><code>method: 'POST'</code> define que es un env\u00edo.</li> <li><code>headers</code> indica el tipo de contenido (JSON, por ejemplo).</li> <li><code>body</code> lleva los datos (usualmente con <code>JSON.stringify()</code>).</li> <li>Usa <code>await</code> para esperar la respuesta y luego <code>await res.json()</code> para extraerla.</li> </ul>"},{"location":"callback/","title":"Funci\u00f3 callback","text":"<p>Una funci\u00f3 callback en JavaScript \u00e9s una funci\u00f3 que es passa com a par\u00e0metre a una altra funci\u00f3, i que s'executa despr\u00e9s que aquesta hagi acabat alguna operaci\u00f3. S'utilitza molt en operacions as\u00edncrones o quan vols fer una acci\u00f3 espec\u00edfica despr\u00e9s d\u2019una altra.</p>"},{"location":"callback/#definicio","title":"\ud83d\udccc Definici\u00f3:","text":"<p>Una callback \u00e9s una funci\u00f3 passada com a argument a una altra funci\u00f3, que ser\u00e0 cridada (callback) dins d'aquesta \u00faltima per completar alguna rutina o acci\u00f3.</p>"},{"location":"callback/#exemple-senzill","title":"\u2705 Exemple senzill:","text":"<pre><code> function esperarISaludar(funcioAferDespres) {\n  setTimeout(function () {\n    console.log(\"Han passat 2 segons.\");\n    funcioAferDespres(); // aqu\u00ed cridem la funci\u00f3 que vam rebre com a par\u00e0metre\n  }, 2000);\n}\n\nfunction mostrarSalutacio() {\n  console.log(\"Hola des de la funci\u00f3 callback!\");\n}\n\nesperarISaludar(mostrarSalutacio); // aqu\u00ed passem 'mostrarSalutacio', que far\u00e0 el paper de callback\n</code></pre>"},{"location":"exercicisFetch/","title":"fetch exercicis","text":""},{"location":"exercicisFetch/#exercici-1-consulta-basica-get-a-una-api","title":"\ud83e\uddea Exercici 1: Consulta b\u00e0sica GET a una API","text":"<p>\ud83d\udd39 Objectiu: Aprendre a fer una petici\u00f3 GET i mostrar la resposta JSON.</p>"},{"location":"exercicisFetch/#descripcio","title":"\u2705 Descripci\u00f3:","text":"<ol> <li>Fes una petici\u00f3 <code>fetch()</code> a l\u2019API p\u00fablica: <code>https://jsonplaceholder.typicode.com/users/1</code></li> <li>Mostra el nom i el correu de l\u2019usuari a la p\u00e0gina.</li> </ol>"},{"location":"exercicisFetch/#tips","title":"\ud83d\udca1 Tips:","text":"<ul> <li>Usa <code>fetch().then().then().catch()</code></li> <li>Fes servir <code>response.json()</code></li> </ul>"},{"location":"exercicisFetch/#exercici-2-formulari-amb-peticio-post","title":"\ud83e\uddea Exercici 2: Formulari amb petici\u00f3 POST","text":"<p>\ud83d\udd39 Objectiu: Enviar dades via <code>POST</code> i mostrar la resposta.</p>"},{"location":"exercicisFetch/#descripcio_1","title":"\u2705 Descripci\u00f3:","text":"<ol> <li>Crea un formulari amb camps <code>nom</code> i <code>edat</code>.</li> <li>Envia les dades a un fitxer PHP (<code>servidor.php</code>) via <code>fetch()</code> amb <code>POST</code>.</li> <li>El servidor ha de retornar la mateixa informaci\u00f3 en format JSON.</li> <li>Mostra la resposta JSON dins d\u2019un <code>div</code>.</li> </ol>"},{"location":"exercicisFetch/#tips_1","title":"\ud83d\udca1 Tips:","text":"<ul> <li>Usa <code>application/x-www-form-urlencoded</code> o <code>application/json</code></li> <li>Pots usar <code>new URLSearchParams()</code> o <code>JSON.stringify()</code> segons el format</li> </ul>"},{"location":"exercicisFetch/#exercici-3-enviament-de-fitxer-amb-formdata-i-tractament-derrors","title":"\ud83e\uddea Exercici 3: Enviament de fitxer amb <code>FormData</code> i tractament d'errors","text":"<p>\ud83d\udd39 Objectiu: Aprendre a enviar un fitxer i gestionar errors amb <code>fetch</code>.</p>"},{"location":"exercicisFetch/#descripcio_2","title":"\u2705 Descripci\u00f3:","text":"<ol> <li>Crea un <code>&lt;input type=\"file\"&gt;</code> i un bot\u00f3 per enviar-lo.</li> <li>Quan es prem el bot\u00f3, crea un <code>FormData()</code> amb el fitxer seleccionat.</li> <li>Envia\u2019l via <code>fetch()</code> a un endpoint com <code>upload.php</code>.</li> <li>El servidor ha de comprovar si s\u2019ha rebut el fitxer i retornar info com:</li> <li>nom del fitxer</li> <li>mida</li> <li>tipus MIME</li> <li>Mostra la informaci\u00f3 a la p\u00e0gina.</li> </ol>"},{"location":"exercicisFetch/#bonus","title":"\ud83d\udca1 Bonus:","text":"<ul> <li>Gestiona errors si no hi ha fitxer seleccionat o si el servidor retorna error <code>500</code>.</li> </ul>"},{"location":"introduccio/","title":"1. Introducci\u00f3 a l'asincronia amb JavaScript","text":""},{"location":"introduccio/#comunicacio-sincrona-vs-asincrona","title":"\ud83d\udcc9 Comunicaci\u00f3 s\u00edncrona vs as\u00edncrona","text":"<p>En una aplicaci\u00f3 web, el navegador pot comunicar-se amb el servidor de dues formes:</p> <ul> <li>S\u00edncrona: la petici\u00f3 bloqueja l'execuci\u00f3 fins rebre la resposta.</li> <li>As\u00edncrona: la petici\u00f3 s'envia i el codi segueix executant-se mentre arriba la resposta.</li> </ul>"},{"location":"introduccio/#comparativa-sincrona-vs-asincrona","title":"Comparativa s\u00edncrona vs as\u00edncrona","text":"<pre><code>graph TD\n    A[Usuari envia acci\u00f3] --&gt; B[S\u00edncrona: navegador espera resposta]\n    A --&gt; C[As\u00edncrona: navegador &lt;br&gt; continua codi]\n    B --&gt; D[Resposta rebuda &lt;br&gt;\u2192 mostra]\n    C --&gt; E[Resposta rebuda en &lt;br&gt;segon pla]\n    E --&gt; F[Callback gestiona &lt;br&gt;resposta \u2192 mostra]</code></pre>"},{"location":"introduccio/#exemple-de-peticio-sincrona-formulari-classic-html","title":"\u2728 Exemple de petici\u00f3 s\u00edncrona (formulari cl\u00e0ssic HTML)","text":"<pre><code>&lt;!-- form.html --&gt;\n&lt;form action=\"envia.php\" method=\"get\"&gt;\n  &lt;input type=\"text\" name=\"nom\" value=\"ALF\"&gt;\n  &lt;input type=\"submit\" value=\"SUBMIT\"&gt;\n&lt;/form&gt;\n</code></pre> <pre><code>// envia.php\n&lt;?php\n$name = $_GET['nom'];\necho \"&lt;body&gt;hola $name&lt;/body&gt;\";\n?&gt;\n</code></pre> <ul> <li>El navegador espera la resposta abans de continuar.</li> </ul>"},{"location":"introduccio/#exemple-de-peticio-asincrona-amb-javascript-ajax","title":"\u23f3 Exemple de petici\u00f3 as\u00edncrona amb JavaScript (AJAX)","text":"<pre><code>let xmlHttp = new XMLHttpRequest();\nxmlHttp.open(\"GET\", \"envia.php?nom=ALF\", true); // true \u2192 as\u00edncrona\nxmlHttp.onreadystatechange = function () {\n  if (xmlHttp.readyState === 4 &amp;&amp; xmlHttp.status === 200) {\n    console.log(xmlHttp.responseText); // hola ALF\n  }\n};\nxmlHttp.send(null);\n</code></pre> <ul> <li>El navegador no queda bloquejat mentre espera la resposta.</li> <li>Quan la resposta arriba, s'executa la funci\u00f3 callback.</li> </ul>"},{"location":"introduccio/#flux-de-comunicacio-asincrona","title":"\ud83d\udcca Flux de comunicaci\u00f3 as\u00edncrona","text":"<pre><code>sequenceDiagram\n    participant Client as Navegador (Client)\n    participant Server as Servidor (envia.php)\n\n    Client-&gt;&gt;Client: Crea XMLHttpRequest\n    Client-&gt;&gt;Client: xmlHttp.open(\"GET\", \"envia.php?nom=ALF\", true)\n    Client-&gt;&gt;Client: xmlHttp.onreadystatechange = funci\u00f3(...)\n    Client-&gt;&gt;Server: xmlHttp.send(null)\n\n    Note over Server: El servidor rep la petici\u00f3\n\n    Server--&gt;&gt;Client: Resposta HTTP (status 200, responseText)\n\n    Client-&gt;&gt;Client: onreadystatechange s'activa diverses vegades\n    Client-&gt;&gt;Client: if (readyState == 4 &amp;&amp; status == 200)\n    Client-&gt;&gt;Client: Processar xmlHttp.responseText\n    Client-&gt;&gt;Console: console.log(\"hola ALF\")\n</code></pre>"},{"location":"introduccio/#flux-de-comunicacio-sincrona","title":"\ud83d\udcca Flux de comunicaci\u00f3 s\u00edncrona","text":""},{"location":"introduccio/#sequencediagram-participant-js-participant-server-js-server-open-send-server-js-retorna-resposta-xmljson-js-js-onreadystatechange-callback-js-js-gestiona-i-mostra-dades","title":"<pre><code>sequenceDiagram\n    participant JS\n    participant Server\n\n    JS-&gt;&gt;Server: open() + send()\n    Server--&gt;&gt;JS: Retorna resposta (XML/JSON)\n    JS-&gt;&gt;JS: onreadystatechange \u2192 callback\n    JS-&gt;&gt;JS: Gestiona i mostra dades</code></pre>","text":""},{"location":"introduccio/#casos-dus-reals-de-lasincronia-amb-javascript","title":"\ud83e\udde9 Casos d\u2019\u00fas reals de l\u2019asincronia amb JavaScript","text":""},{"location":"introduccio/#comerc-electronic","title":"\ud83d\uded2 Comer\u00e7 electr\u00f2nic","text":"<p>Quan un usuari afegeix un producte al carret sense que la p\u00e0gina es recarregui, s\u2019utilitza una petici\u00f3 as\u00edncrona per actualitzar el servidor i la interf\u00edcie de manera din\u00e0mica.</p>"},{"location":"introduccio/#aplicacions-de-xat","title":"\ud83d\udcf1 Aplicacions de xat","text":"<p>Les aplicacions de missatgeria instant\u00e0nia (com WhatsApp Web o Messenger) utilitzen comunicaci\u00f3 as\u00edncrona per enviar i rebre missatges en temps real sense haver de recarregar la p\u00e0gina.</p>"},{"location":"introduccio/#cercadors-amb-autocompletar","title":"\ud83d\udd0d Cercadors amb autocompletar","text":"<p>Els motors de cerca com Google mostren suggeriments a mesura que escrius gr\u00e0cies a consultes as\u00edncrones que es fan al servidor per obtenir resultats suggerits.</p>"},{"location":"introduccio/#noticies-i-actualitzacions-en-viu","title":"\ud83d\udcf0 Not\u00edcies i actualitzacions en viu","text":"<p>Els portals de not\u00edcies poden utilitzar peticions as\u00edncrones per refrescar els titulars autom\u00e0ticament cada cert temps sense que l\u2019usuari ho noti.</p>"},{"location":"introduccio/#validacio-de-formularis-en-temps-real","title":"Validaci\u00f3 de formularis en temps real","text":"<p>Quan introdueixes un nom d\u2019usuari i autom\u00e0ticament t\u2019indica si est\u00e0 disponible o no, s\u2019est\u00e0 fent una consulta AJAX al servidor mentre tu segueixes omplint el formulari.</p>"},{"location":"recursos/","title":"Recursos","text":"<p>Ejempplo xmlHttp y Ajax</p> <p>Instalaccion NodeJS</p> <p>Instalaccion  y ejemplo WebSocket</p> <p>Axios</p>"},{"location":"solucio_exercicisFetch/","title":"solucio exercicisFetch","text":""},{"location":"solucio_exercicisFetch/#exercici-1-consulta-basica-get","title":"Exercici 1: Consulta b\u00e0sica GET","text":""},{"location":"solucio_exercicisFetch/#objectiu","title":"Objectiu","text":"<p>Fer una petici\u00f3 <code>GET</code> a una API p\u00fablica i mostrar les dades d'un usuari.</p>"},{"location":"solucio_exercicisFetch/#solucio","title":"Soluci\u00f3","text":"<pre><code>&lt;h2&gt;Usuari&lt;/h2&gt;\n&lt;div id=\"usuari-info\"&gt;&lt;/div&gt;\n\n&lt;script&gt;\n  fetch('https://jsonplaceholder.typicode.com/users/1')\n    .then(resposta =&gt; resposta.json()) // Convertim la resposta a JSON\n    .then(dades =&gt; {\n      // Mostrem el nom i el correu\n      const div = document.getElementById('usuari-info');\n      div.innerHTML = `Nom: ${dades.name} &lt;br&gt; Correu: ${dades.email}`;\n    })\n    .catch(error =&gt; {\n      console.error('Error en la petici\u00f3:', error);\n    });\n&lt;/script&gt;\n</code></pre>"},{"location":"solucio_exercicisFetch/#explicacio","title":"Explicaci\u00f3","text":"<ul> <li><code>fetch()</code> fa la petici\u00f3 GET.</li> <li><code>resposta.json()</code> converteix la resposta en un objecte JavaScript.</li> <li>Mostrem <code>dades.name</code> i <code>dades.email</code> dins el <code>div</code>.</li> </ul>"},{"location":"solucio_exercicisFetch/#exercici-2-formulari-amb-peticio-post","title":"Exercici 2: Formulari amb petici\u00f3 POST","text":""},{"location":"solucio_exercicisFetch/#objectiu_1","title":"Objectiu","text":"<p>Enviar dades d\u2019un formulari amb <code>POST</code> i mostrar la resposta del servidor.</p>"},{"location":"solucio_exercicisFetch/#html-js","title":"HTML + JS","text":"<pre><code>&lt;h2&gt;Formulari&lt;/h2&gt;\n&lt;form id=\"formulari\"&gt;\n  &lt;input type=\"text\" name=\"nom\" placeholder=\"Nom\" required&gt;\n  &lt;input type=\"number\" name=\"edat\" placeholder=\"Edat\" required&gt;\n  &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;div id=\"resposta-post\"&gt;&lt;/div&gt;\n\n&lt;script&gt;\n  const form = document.getElementById('formulari');\n\n  form.addEventListener('submit', function(e) {\n    e.preventDefault(); // Evitem recarregar la p\u00e0gina\n\n    const dades = {\n      nom: form.nom.value,\n      edat: form.edat.value\n    };\n\n    fetch('servidor.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dades)\n    })\n    .then(res =&gt; res.json())\n    .then(resposta =&gt; {\n      document.getElementById('resposta-post').innerText =\n        `Nom: ${resposta.nom}, Edat: ${resposta.edat}`;\n    })\n    .catch(error =&gt; {\n      console.error('Error:', error);\n    });\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"solucio_exercicisFetch/#servidorphp-exemple-basic","title":"servidor.php (exemple b\u00e0sic)","text":"<pre><code>&lt;?php\nheader('Content-Type: application/json');\n$entrada = json_decode(file_get_contents('php://input'), true);\necho json_encode($entrada);\n</code></pre>"},{"location":"solucio_exercicisFetch/#explicacio_1","title":"Explicaci\u00f3","text":"<ul> <li>S\u2019envia un <code>JSON</code> amb <code>fetch()</code>.</li> <li>El servidor llegeix i retorna el mateix JSON.</li> <li>Mostrem la resposta al <code>div</code>.</li> </ul>"},{"location":"solucio_exercicisFetch/#exercici-3-enviament-de-fitxer-amb-formdata","title":"Exercici 3: Enviament de fitxer amb FormData","text":""},{"location":"solucio_exercicisFetch/#objectiu_2","title":"Objectiu","text":"<p>Enviar un fitxer al servidor i mostrar la seva informaci\u00f3.</p>"},{"location":"solucio_exercicisFetch/#html-js_1","title":"HTML + JS","text":"<pre><code>&lt;h2&gt;Upload Fitxer&lt;/h2&gt;\n&lt;input type=\"file\" id=\"fitxer\"&gt;\n&lt;button id=\"envia\"&gt;Enviar&lt;/button&gt;\n&lt;div id=\"resposta-fitxer\"&gt;&lt;/div&gt;\n\n&lt;script&gt;\n  document.getElementById('envia').addEventListener('click', function() {\n    const input = document.getElementById('fitxer');\n    const arxiu = input.files[0];\n\n    if (!arxiu) {\n      alert('Selecciona un fitxer abans d\u2019enviar.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('fitxer', arxiu);\n\n    fetch('upload.php', {\n      method: 'POST',\n      body: formData\n    })\n    .then(res =&gt; {\n      if (!res.ok) throw new Error('Error del servidor');\n      return res.json();\n    })\n    .then(info =&gt; {\n      document.getElementById('resposta-fitxer').innerHTML = `\n        Nom: ${info.nom} &lt;br&gt;\n        Mida: ${info.mida} bytes &lt;br&gt;\n        Tipus: ${info.tipus}\n      `;\n    })\n    .catch(error =&gt; {\n      document.getElementById('resposta-fitxer').innerText = 'Error: ' + error.message;\n    });\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"solucio_exercicisFetch/#uploadphp-exemple-funcional","title":"upload.php (exemple funcional)","text":"<pre><code>&lt;?php\nheader('Content-Type: application/json');\n\nif (isset($_FILES['fitxer'])) {\n    $fitxer = $_FILES['fitxer'];\n    echo json_encode([\n        'nom' =&gt; $fitxer['name'],\n        'mida' =&gt; $fitxer['size'],\n        'tipus' =&gt; $fitxer['type']\n    ]);\n} else {\n    http_response_code(400);\n    echo json_encode(['error' =&gt; 'No s\u2019ha rebut cap fitxer']);\n}\n</code></pre>"},{"location":"solucio_exercicisFetch/#explicacio_2","title":"\ud83d\udd0d Explicaci\u00f3","text":"<ul> <li><code>FormData()</code> empaqueta el fitxer.</li> <li>El servidor rep <code>$_FILES['fitxer']</code> i retorna dades.</li> <li>Gestionem errors si no hi ha fitxer o el servidor falla.</li> </ul>"},{"location":"webSocket/","title":"Introducci\u00f3 a WebSocket amb Node.js i JavaScript","text":"<p>WebSocket \u00e9s un protocol que permet comunicaci\u00f3 bidireccional en temps real entre el client (navegador) i el servidor. A difer\u00e8ncia de HTTP, WebSocket mant\u00e9 una connexi\u00f3 oberta, ideal per aplicacions com xats, jocs o notificacions.</p> <pre><code>sequenceDiagram\n    participant Navegador1\n    participant Navegador2\n    participant ServidorWS as Servidor WebSocket\n\n    Note over Navegador1,ServidorWS: Connexi\u00f3 inicial\n    Navegador1-&gt;&gt;ServidorWS: WebSocket.connect(\"ws://localhost:8089\")\n    ServidorWS--&gt;&gt;Navegador1: Connexi\u00f3 acceptada\n\n    Note over Navegador2,ServidorWS: Segona connexi\u00f3\n    Navegador2-&gt;&gt;ServidorWS: WebSocket.connect(\"ws://localhost:8089\")\n    ServidorWS--&gt;&gt;Navegador2: Connexi\u00f3 acceptada\n\n    Note over Navegador1: Envia un missatge\n    Navegador1-&gt;&gt;ServidorWS: socket.send(\"Hola servidor!\")\n    ServidorWS--&gt;&gt;Navegador2: Missatge d'un altre client: Hola servidor!\n\n    Note over Navegador1,ServidorWS: Tancament de connexi\u00f3\n    Navegador1--&gt;&gt;ServidorWS: Connexi\u00f3 tancada\n    ServidorWS--&gt;&gt;ServidorWS: Elimina la connexi\u00f3 del llistat</code></pre>"},{"location":"webSocket/#installacio-completa-de-nodejs-i-websocket","title":"Instal\u00b7laci\u00f3 completa de Node.js i WebSocket","text":""},{"location":"webSocket/#pagina-oficial","title":"\ud83d\udd17 P\u00e0gina oficial:","text":"<p>\u27a1\ufe0f https://nodejs.org</p> <p>Descarrega i instal\u00b7la la versi\u00f3 recomanada (LTS) segons el teu sistema operatiu.</p>"},{"location":"webSocket/#2-verifica-la-installacio","title":"2\ufe0f\u20e3 Verifica la instal\u00b7laci\u00f3","text":"<p>Obre una terminal o consola i escriu:</p> <pre><code>node -v      # Mostra la versi\u00f3 de Node.js\nnpm -v       # Mostra la versi\u00f3 de npm (Node Package Manager)\n</code></pre>"},{"location":"webSocket/#3-crea-un-projecte-nou","title":"3\ufe0f\u20e3 Crea un projecte nou","text":"<pre><code>mkdir servidor-websocket\ncd servidor-websocket\nnpm init -y\n</code></pre>"},{"location":"webSocket/#4-installa-el-paquet-websocket","title":"4\ufe0f\u20e3 Instal\u00b7la el paquet <code>websocket</code>","text":"<pre><code>npm install websocket\n</code></pre> <p>\ud83d\udce6 Aix\u00f2 afegir\u00e0 el m\u00f2dul a <code>node_modules/</code> i al fitxer <code>package.json</code>.</p>"},{"location":"webSocket/#5-crea-el-servidor-websocket","title":"5\ufe0f\u20e3 Crea el servidor WebSocket","text":"<p>Crea un fitxer <code>server.js</code> amb aquest contingut:</p> <pre><code>const http = require('http');\nconst WebSocketServer = require('websocket').server;\n\nconst server = http.createServer((req, res) =&gt; {\n  res.end(\"Servidor WebSocket actiu\");\n});\n\nconst wsServer = new WebSocketServer({\n  httpServer: server,\n  autoAcceptConnections: false\n});\n\nconst connexions = [];\n\nwsServer.on('request', (request) =&gt; {\n  const connection = request.accept(null, request.origin);\n  connexions.push(connection);\n  console.log(\"Client connectat\");\n\n  connection.on('message', (message) =&gt; {\n    console.log(\"Missatge rebut:\", message.utf8Data);\n    connexions.forEach((connexioClient) =&gt; {\n      if (connexioClient !== connection) {\n        connexioClient.sendUTF(\"Missatge d'un altre client: \" + message.utf8Data);\n      }\n    });\n  });\n\n  connection.on('close', () =&gt; {\n    console.log(\"Connexi\u00f3 tancada\");\n    const index = connexions.indexOf(connection);\n    if (index !== -1) connexions.splice(index, 1);\n  });\n});\n\nserver.listen(8089, () =&gt; {\n  console.log(\"Servidor WebSocket escoltant al port 8089\");\n});\n</code></pre>"},{"location":"webSocket/#6-executa-el-servidor","title":"6\ufe0f\u20e3 Executa el servidor","text":"<pre><code>node server.js\n</code></pre> <p>\ud83d\udc49 Ara pots connectar-t\u2019hi amb un client WebSocket des del navegador.</p>"},{"location":"webSocket/#servidor-websocket-amb-nodejs","title":"\ud83d\udee0\ufe0f Servidor WebSocket amb Node.js","text":"<pre><code>const http = require('http');\nconst WebSocketServer = require('websocket').server;\n\nconst server = http.createServer((req, res) =&gt; {\n  res.end(\"Servidor WebSocket actiu\");\n});\n\nconst wsServer = new WebSocketServer({\n  httpServer: server,\n  autoAcceptConnections: false\n});\n\nconst connexions = [];\n\nwsServer.on('request', (request) =&gt; {\n  const connection = request.accept(null, request.origin);\n  connexions.push(connection);\n  console.log(\"Client connectat\");\n\n  connection.on('message', (message) =&gt; {\n    console.log(\"Missatge rebut:\", message.utf8Data);\n    connexions.forEach((connexioClient) =&gt; {\n      if (connexioClient !== connection) {\n        connexioClient.sendUTF(\"Missatge d'un altre client: \" + message.utf8Data);\n      }\n    });\n  });\n\n  connection.on('close', () =&gt; {\n    console.log(\"Connexi\u00f3 tancada\");\n    const index = connexions.indexOf(connection);\n    if (index !== -1) connexions.splice(index, 1);\n  });\n});\n\nserver.listen(8089);\n</code></pre>"},{"location":"webSocket/#caracteristiques","title":"\u2705 Caracter\u00edstiques:","text":"<ul> <li>Accepta m\u00faltiples connexions.</li> <li>Reenvia missatges entre clients.</li> <li>Gestiona desconnexions.</li> </ul>"},{"location":"webSocket/#client-websocket-en-javascript-navegador","title":"\ud83d\udcbb Client WebSocket en JavaScript (navegador)","text":"<pre><code>&lt;script&gt;\n  const socket = new WebSocket(\"ws://localhost:8089\");\n\n  socket.onopen = function () {\n    console.log(\"Connectat al servidor WebSocket\");\n    socket.send(\"Hola servidor!\");\n  };\n\n  socket.onmessage = function (event) {\n    console.log(\"Missatge rebut del servidor:\", event.data);\n  };\n\n  socket.onclose = function () {\n    console.log(\"Connexi\u00f3 tancada\");\n  };\n\n  socket.onerror = function (error) {\n    console.error(\"Error WebSocket:\", error);\n  };\n&lt;/script&gt;\n</code></pre>"},{"location":"webSocket/#comportament","title":"\u2705 Comportament:","text":"<ul> <li>Es connecta al servidor WebSocket.</li> <li>Envia i rep missatges en temps real.</li> <li>Mostra la comunicaci\u00f3 per consola.</li> </ul>"},{"location":"webSocket/#resum","title":"Resum","text":"<ul> <li>WebSocket permet comunicaci\u00f3 en temps real sense tornar a fer peticions cont\u00ednues.</li> <li>Ideal per xats, jocs multiplayer o aplicacions en viu.</li> <li>Funciona amb un servidor WebSocket (Node.js) i un client (JavaScript).</li> </ul>"},{"location":"webSocket/#exemple-dus","title":"\ud83d\udd04 Exemple d'\u00fas","text":"<p>Aqu\u00ed tens una taula comparativa dels usos reals de WebSockets, amb una visi\u00f3 clara de per qu\u00e8 s\u2019utilitzen, qu\u00e8 aporten i exemples concrets:</p>"},{"location":"webSocket/#taula-comparativa-dusos-reals-de-websockets","title":"\ud83d\udcca Taula comparativa d\u2019usos reals de WebSockets","text":"\u00das Per qu\u00e8 s\u2019utilitzen WebSockets Qu\u00e8 aporten Exemples concrets Xat en temps real Comunicaci\u00f3 bidireccional immediata Enviament i recepci\u00f3 de missatges al moment WhatsApp Web, Slack, Discord Jocs multiplayer online Sincronitzaci\u00f3 cont\u00ednua entre jugadors Partides fluides sense retards visibles Agar.io, Chess.com, Krunker Monitoratge de dades Actualitzaci\u00f3 constant de valors en viu Visualitzaci\u00f3 instant\u00e0nia de dades Grafana, panells IoT, Google Analytics Borsa / criptomonedes Canvis de preu constants Refresc del valor en temps real Binance, TradingView, Robinhood Notificacions en viu Informaci\u00f3 d\u2019esdeveniments sense refrescar Interacci\u00f3 cont\u00ednua amb l\u2019usuari YouTube, Facebook, GitHub Edici\u00f3 col\u00b7laborativa Canvis simultanis per diversos usuaris Sincronitzaci\u00f3 d\u2019accions i continguts Google Docs, Figma, Miro Control remot / IoT Interacci\u00f3 directa amb dispositius o sistemes f\u00edsics Comandes i resposta instant\u00e0nies Sistemes dom\u00f2tics, robots, sensors"},{"location":"ajax-fetch/ruta/","title":"CodeTutor: Comunicaci\u00f3 As\u00edncrona amb JavaScript","text":""},{"location":"ajax-fetch/ruta/#modul-1-que-es-lasincronia","title":"\ud83d\udd39 M\u00f2dul 1: Qu\u00e8 \u00e9s l\u2019asincronia?","text":"<p>Definici\u00f3 b\u00e0sica:</p> <p>Quan fem una petici\u00f3 as\u00edncrona, el navegador no es bloqueja esperant la resposta, sin\u00f3 que continua executant el codi. Quan la resposta arriba, es gestiona amb una callback o una promesa.</p> <p>\ud83d\udcd8 Exemples cl\u00e0ssics d\u2019\u00fas:</p> <ul> <li>Validar formularis sense recarregar la p\u00e0gina.</li> <li>Mostrar resultats mentre escrius (autocompletar).</li> <li>Rebre dades del servidor en temps real (xat, dashboards).</li> </ul>"},{"location":"ajax-fetch/ruta/#modul-2-ajax-amb-xmlhttprequest","title":"\ud83d\udd39 M\u00f2dul 2: AJAX amb <code>XMLHttpRequest</code>","text":""},{"location":"ajax-fetch/ruta/#exemple-get","title":"\u2705 Exemple GET","text":"<pre><code>let xmlHttp = new XMLHttpRequest();\nlet url = \"valida.php?nom=cristian&amp;edat=8\";\n\nxmlHttp.open(\"GET\", url, true);\nxmlHttp.onreadystatechange = function () {\n  if (xmlHttp.readyState === 4 &amp;&amp; xmlHttp.status === 200) {\n    console.log(xmlHttp.responseText);\n  }\n};\nxmlHttp.send(null);\n</code></pre> <p>\ud83d\udd0d Punts clau: - <code>readyState === 4</code>: la resposta s\u2019ha completat. - <code>status === 200</code>: tot ha anat b\u00e9.</p>"},{"location":"ajax-fetch/ruta/#exemple-post","title":"\u2705 Exemple POST","text":"<pre><code>let xmlHttp = new XMLHttpRequest();\nxmlHttp.open(\"POST\", \"valida.php\", true);\nxmlHttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\nxmlHttp.onreadystatechange = function () {\n  if (xmlHttp.readyState === 4 &amp;&amp; xmlHttp.status === 200) {\n    console.log(xmlHttp.responseText);\n  }\n};\nxmlHttp.send(\"nom=cristian&amp;edat=88\");\n</code></pre>"},{"location":"ajax-fetch/ruta/#modul-3-ajax-amb-fetch","title":"\ud83d\udd39 M\u00f2dul 3: AJAX amb <code>fetch()</code>","text":""},{"location":"ajax-fetch/ruta/#exemple-get_1","title":"\u2705 Exemple GET","text":"<pre><code>fetch(\"valida.php?nom=cristian&amp;edat=8\", {\n  method: \"GET\",\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n})\n.then(response =&gt; response.json())\n.then(data =&gt; console.log(data))\n.catch(error =&gt; console.log(\"Error:\", error));\n</code></pre>"},{"location":"ajax-fetch/ruta/#exemple-post_1","title":"\u2705 Exemple POST","text":"<pre><code>fetch(\"valida.php\", {\n  method: \"POST\",\n  body: \"nom=cristian&amp;edat=88\",\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n})\n.then(response =&gt; response.json())\n.then(data =&gt; console.log(data))\n.catch(error =&gt; console.log(\"Error:\", error));\n</code></pre>"},{"location":"ajax-fetch/ruta/#modul-4-enviament-de-fitxers-amb-formdata","title":"\ud83d\udd39 M\u00f2dul 4: Enviament de fitxers amb <code>FormData</code>","text":""},{"location":"ajax-fetch/ruta/#amb-xmlhttprequest","title":"Amb <code>XMLHttpRequest</code>:","text":"<pre><code>let form = new FormData();\nform.append(\"arxiu\", document.getElementById(\"arxius\").files[0]);\n\nlet xmlHttp = new XMLHttpRequest();\nxmlHttp.open(\"POST\", \"ajax.php\", true);\nxmlHttp.send(form);\n</code></pre>"},{"location":"ajax-fetch/ruta/#amb-fetch","title":"Amb <code>fetch()</code>:","text":"<pre><code>let form = new FormData();\nform.append(\"arxiu\", document.getElementById(\"arxiu\").files[0]);\n\nfetch(\"http://localhost:8089/endpoint\", {\n  method: \"POST\",\n  body: form\n})\n.then(response =&gt; response.json())\n.then(data =&gt; console.log(data));\n</code></pre>"},{"location":"ajax-fetch/ruta/#modul-5-comparativa-xmlhttprequest-vs-fetch","title":"\ud83d\udd39 M\u00f2dul 5: Comparativa <code>XMLHttpRequest</code> vs <code>fetch()</code>","text":"Caracter\u00edstica <code>XMLHttpRequest</code> <code>fetch()</code> Basat en Callbacks Promeses (<code>.then()</code>, <code>.catch()</code>) Sintaxi Verbosa Clara i moderna Gesti\u00f3 d'errors Manual amb <code>status</code> i <code>readyState</code> M\u00e9s simple amb <code>.catch()</code> Suport JSON Manual (<code>JSON.parse()</code>) Integrat (<code>response.json()</code>) Cancel\u00b7laci\u00f3 \u274c \u2705 Amb <code>AbortController</code>"},{"location":"ajax-fetch/ruta/#modul-6-errors-habituals","title":"\ud83d\udd39 M\u00f2dul 6: Errors habituals","text":"<ul> <li>\u274c Oblidar <code>setRequestHeader</code> en POST amb <code>XMLHttpRequest</code>.</li> <li>\u274c No verificar <code>response.ok</code> amb <code>fetch()</code>.</li> <li>\u274c Format incorrecte del <code>body</code> en peticions POST.</li> <li>\u274c Error CORS: falta l\u2019encap\u00e7alament al servidor.</li> </ul>"},{"location":"ajax-fetch/ruta/#modul-7-exercici-practic","title":"\ud83d\udd1a M\u00f2dul 7: Exercici pr\u00e0ctic","text":"<ol> <li>Crea una p\u00e0gina amb un <code>&lt;form&gt;</code> per enviar el nom d\u2019un usuari.</li> <li>Captura el <code>submit</code> amb JavaScript.</li> <li>Envia el nom al servidor amb <code>fetch()</code> o <code>XMLHttpRequest</code>.</li> <li>Mostra la resposta del servidor (text, JSON o XML) dins un <code>&lt;div&gt;</code>.</li> </ol>"},{"location":"websocket/completo/","title":"Completo","text":""},{"location":"websocket/completo/#1-serverjs-servidor-nodejs-amb-websocket","title":"\ud83d\udda5\ufe0f 1. <code>server.js</code> \u2013 Servidor Node.js amb WebSocket","text":"<pre><code>const http = require('http');\nconst WebSocketServer = require('websocket').server;\n\nconst server = http.createServer((req, res) =&gt; {\n  res.writeHead(200);\n  res.end(\"Servidor de xat actiu\");\n});\n\nconst wsServer = new WebSocketServer({ httpServer: server, autoAcceptConnections: false });\nconst sales = {}; // { sala1: [conn1, conn2], sala2: [...] }\nconst usuaris = {}; // { conn: {nick, sala, tipusUsuari} }\n\nwsServer.on('request', (request) =&gt; {\n  const connection = request.accept(null, request.origin);\n\n  connection.on('message', (message) =&gt; {\n    const data = JSON.parse(message.utf8Data);\n\n    if (data.tipus === \"inici\") {\n      usuaris[connection] = {\n        nick: data.nick,\n        sala: data.sala,\n        tipusUsuari: data.tipusUsuari\n      };\n\n      if (!sales[data.sala]) sales[data.sala] = [];\n      sales[data.sala].push(connection);\n\n      broadcast(data.sala, `${data.nick} s'ha unit a la sala.`);\n    }\n\n    if (data.tipus === \"missatge\") {\n      const info = usuaris[connection];\n      if (info) broadcast(info.sala, `${info.nick}: ${data.text}`);\n    }\n\n    if (data.tipus === \"expulsar\") {\n      const info = usuaris[connection];\n      if (info.tipusUsuari === \"moderador\") {\n        const sala = info.sala;\n        const connexionsSala = sales[sala];\n        for (const conn of connexionsSala) {\n          if (usuaris[conn] &amp;&amp; usuaris[conn].nick === data.nickExpulsat) {\n            conn.sendUTF(\"Has estat expulsat per un moderador.\");\n            conn.close();\n          }\n        }\n      }\n    }\n  });\n\n  connection.on('close', () =&gt; {\n    const info = usuaris[connection];\n    if (info) {\n      const index = sales[info.sala]?.indexOf(connection);\n      if (index !== -1) sales[info.sala].splice(index, 1);\n      broadcast(info.sala, `${info.nick} ha sortit de la sala.`);\n      delete usuaris[connection];\n    }\n  });\n});\n\nfunction broadcast(sala, missatge) {\n  sales[sala]?.forEach(conn =&gt; conn.sendUTF(missatge));\n}\n\nserver.listen(8089, () =&gt; {\n  console.log(\"Servidor WebSocket escoltant al port 8089\");\n});\n</code></pre>"},{"location":"websocket/completo/#2-clienthtml-client-web-per-al-xat","title":"\ud83c\udf10 2. <code>client.html</code> \u2013 Client Web per al xat","text":"<p>Aquest fitxer ja el tens pujat (coincideix amb el que has anomenat <code>client.html</code>) per\u00f2 aqu\u00ed el torno a mostrar:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;&lt;title&gt;Xat amb Sales&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n  &lt;h2&gt;Xat WebSocket&lt;/h2&gt;\n  &lt;label&gt;Nom:&lt;/label&gt;&lt;input id=\"nick\"&gt;&lt;br&gt;\n  &lt;label&gt;Sala:&lt;/label&gt;&lt;input id=\"sala\"&gt;&lt;br&gt;\n  &lt;label&gt;Tipus:&lt;/label&gt;\n  &lt;select id=\"tipusUsuari\"&gt;\n    &lt;option value=\"usuari\"&gt;Usuari&lt;/option&gt;\n    &lt;option value=\"moderador\"&gt;Moderador&lt;/option&gt;\n  &lt;/select&gt;&lt;br&gt;\n  &lt;button onclick=\"connectar()\"&gt;Connectar&lt;/button&gt;\n\n  &lt;div id=\"xat\"&gt;&lt;/div&gt;\n  &lt;input id=\"missatge\"&gt;&lt;button onclick=\"enviar()\"&gt;Enviar&lt;/button&gt;\n  &lt;br&gt;\n  &lt;label&gt;Expulsar usuari (moderadors nom\u00e9s):&lt;/label&gt;\n  &lt;input id=\"nickExpulsat\"&gt;&lt;button onclick=\"expulsar()\"&gt;Expulsar&lt;/button&gt;\n\n  &lt;script&gt;\n    let socket;\n\n    function connectar() {\n      socket = new WebSocket(\"ws://localhost:8089\");\n      socket.onopen = () =&gt; {\n        const nick = document.getElementById('nick').value;\n        const sala = document.getElementById('sala').value;\n        const tipusUsuari = document.getElementById('tipusUsuari').value;\n\n        socket.send(JSON.stringify({\n          tipus: \"inici\",\n          nick,\n          sala,\n          tipusUsuari\n        }));\n      };\n\n      socket.onmessage = (evt) =&gt; {\n        const xat = document.getElementById('xat');\n        xat.innerHTML += `&lt;p&gt;${evt.data}&lt;/p&gt;`;\n      };\n\n      socket.onclose = () =&gt; {\n        alert(\"Connexi\u00f3 tancada\");\n      };\n    }\n\n    function enviar() {\n      const text = document.getElementById('missatge').value;\n      socket.send(JSON.stringify({ tipus: \"missatge\", text }));\n    }\n\n    function expulsar() {\n      const nickExpulsat = document.getElementById('nickExpulsat').value;\n      socket.send(JSON.stringify({ tipus: \"expulsar\", nickExpulsat }));\n    }\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"websocket/completo/#3-installacio-de-dependencies","title":"\ud83d\udce6 3. Instal\u00b7laci\u00f3 de depend\u00e8ncies","text":"<p>Crea un projecte amb Node.js i instal\u00b7la el m\u00f2dul WebSocket:</p> <pre><code>npm init -y\nnpm install websocket\n</code></pre>"},{"location":"websocket/completo/#com-executar-el-xat","title":"\ud83d\ude80 Com executar el xat","text":"<ol> <li>Executa el servidor:</li> </ol> <pre><code>node server.js\n</code></pre> <ol> <li>Obre el <code>client.html</code> en diversos navegadors o pestanyes.</li> <li>Prova d'enviar missatges i utilitza el rol de moderador per provar l\u2019expulsi\u00f3.</li> </ol> <p>Vols que et generi una versi\u00f3 amb interf\u00edcie m\u00e9s visual (colors, separaci\u00f3 per sales, etc.) o et va b\u00e9 aix\u00ed de moment?</p>"},{"location":"websocket/node_modules/bufferutil/","title":"bufferutil","text":"<p><code>bufferutil</code> is what makes <code>ws</code> fast. It provides some utilities to efficiently perform some operations such as masking and unmasking the data payload of WebSocket frames.</p>"},{"location":"websocket/node_modules/bufferutil/#installation","title":"Installation","text":"<pre><code>npm install bufferutil --save-optional\n</code></pre> <p>The <code>--save-optional</code> flag tells npm to save the package in your package.json under the <code>optionalDependencies</code> key.</p>"},{"location":"websocket/node_modules/bufferutil/#api","title":"API","text":"<p>The module exports two functions. To maximize performance, parameters are not validated. It is the caller's responsibility to ensure that they are correct.</p>"},{"location":"websocket/node_modules/bufferutil/#bufferutilmasksource-mask-output-offset-length","title":"<code>bufferUtil.mask(source, mask, output, offset, length)</code>","text":"<p>Masks a buffer using the given masking-key as specified by the WebSocket protocol.</p>"},{"location":"websocket/node_modules/bufferutil/#arguments","title":"Arguments","text":"<ul> <li><code>source</code> - The buffer to mask.</li> <li><code>mask</code> - A buffer representing the masking-key.</li> <li><code>output</code> - The buffer where to store the result.</li> <li><code>offset</code> - The offset at which to start writing.</li> <li><code>length</code> - The number of bytes to mask.</li> </ul>"},{"location":"websocket/node_modules/bufferutil/#example","title":"Example","text":"<pre><code>'use strict';\n\nconst bufferUtil = require('bufferutil');\nconst crypto = require('crypto');\n\nconst source = crypto.randomBytes(10);\nconst mask = crypto.randomBytes(4);\n\nbufferUtil.mask(source, mask, source, 0, source.length);\n</code></pre>"},{"location":"websocket/node_modules/bufferutil/#bufferutilunmaskbuffer-mask","title":"<code>bufferUtil.unmask(buffer, mask)</code>","text":"<p>Unmasks a buffer using the given masking-key as specified by the WebSocket protocol.</p>"},{"location":"websocket/node_modules/bufferutil/#arguments_1","title":"Arguments","text":"<ul> <li><code>buffer</code> - The buffer to unmask.</li> <li><code>mask</code> - A buffer representing the masking-key.</li> </ul>"},{"location":"websocket/node_modules/bufferutil/#example_1","title":"Example","text":"<pre><code>'use strict';\n\nconst bufferUtil = require('bufferutil');\nconst crypto = require('crypto');\n\nconst buffer = crypto.randomBytes(10);\nconst mask = crypto.randomBytes(4);\n\nbufferUtil.unmask(buffer, mask);\n</code></pre>"},{"location":"websocket/node_modules/bufferutil/#license","title":"License","text":"<p>MIT</p>"},{"location":"websocket/node_modules/d/","title":"Index","text":""},{"location":"websocket/node_modules/d/#d","title":"d","text":""},{"location":"websocket/node_modules/d/#property-descriptor-factory","title":"Property descriptor factory","text":"<p>Originally derived from d package.</p> <p>Defining properties with descriptors is very verbose:</p> <pre><code>var Account = function () {};\nObject.defineProperties(Account.prototype, {\n  deposit: {\n    value: function () { /* ... */ },\n    configurable: true,\n    enumerable: false,\n    writable: true\n  },\n  withdraw: {\n    value: function () { /* ... */ },\n    configurable: true,\n    enumerable: false,\n    writable: true\n  },\n  balance: { get: function () { /* ... */ }, configurable: true, enumerable: false }\n});\n</code></pre> <p>D cuts that to:</p> <pre><code>var d = require(\"d\");\n\nvar Account = function () {};\nObject.defineProperties(Account.prototype, {\n  deposit: d(function () { /* ... */ }),\n  withdraw: d(function () { /* ... */ }),\n  balance: d.gs(function () { /* ... */ })\n});\n</code></pre> <p>By default, created descriptor follow characteristics of native ES5 properties, and defines values as:</p> <pre><code>{ configurable: true, enumerable: false, writable: true }\n</code></pre> <p>You can overwrite it by preceding value argument with instruction:</p> <pre><code>d(\"c\", value); // { configurable: true, enumerable: false, writable: false }\nd(\"ce\", value); // { configurable: true, enumerable: true, writable: false }\nd(\"e\", value); // { configurable: false, enumerable: true, writable: false }\n\n// Same way for get/set:\nd.gs(\"e\", value); // { configurable: false, enumerable: true }\n</code></pre>"},{"location":"websocket/node_modules/d/#installation","title":"Installation","text":"<pre><code>$ npm install d\n</code></pre> <p>To port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: Browserify, Webmake or Webpack</p>"},{"location":"websocket/node_modules/d/#other-utilities","title":"Other utilities","text":""},{"location":"websocket/node_modules/d/#autobindobj-props-dauto-bind","title":"autoBind(obj, props) (d/auto-bind)","text":"<p>Define methods which will be automatically bound to its instances</p> <pre><code>var d = require('d');\nvar autoBind = require('d/auto-bind');\n\nvar Foo = function () { this._count = 0; };\nObject.defineProperties(Foo.prototype, autoBind({\n  increment: d(function () { ++this._count; });\n}));\n\nvar foo = new Foo();\n\n// Increment foo counter on each domEl click\ndomEl.addEventListener('click', foo.increment, false);\n</code></pre>"},{"location":"websocket/node_modules/d/#lazyobj-props-dlazy","title":"lazy(obj, props) (d/lazy)","text":"<p>Define lazy properties, which will be resolved on first access</p> <pre><code>var d = require(\"d\");\nvar lazy = require(\"d/lazy\");\n\nvar Foo = function () {};\nObject.defineProperties(Foo.prototype, lazy({ items: d(function () { return []; }) }));\n\nvar foo = new Foo();\nfoo.items.push(1, 2); // foo.items array created and defined directly on foo\n</code></pre>"},{"location":"websocket/node_modules/d/#tests","title":"Tests","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"websocket/node_modules/d/#security-contact-information","title":"Security contact information","text":"<p>To report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure.</p> Get professional support for d with a Tidelift subscription <sub>         Tidelift helps make open source sustainable for maintainers while giving companiesassurances about security, maintenance, and licensing for their dependencies.     </sub>"},{"location":"websocket/node_modules/d/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file. See standard-version for commit guidelines.</p>"},{"location":"websocket/node_modules/d/CHANGELOG/#102-2024-03-01","title":"1.0.2 (2024-03-01)","text":""},{"location":"websocket/node_modules/d/CHANGELOG/#maintenance-improvements","title":"Maintenance Improvements","text":"<ul> <li>Upgrade <code>type</code> to v2 (43b0eb8)</li> </ul>"},{"location":"websocket/node_modules/d/CHANGELOG/#101-2019-06-14","title":"1.0.1 (2019-06-14)","text":""},{"location":"websocket/node_modules/d/CHANGELOG/#changelog-for-previous-versions","title":"Changelog for previous versions","text":"<p>See <code>CHANGES</code> file</p>"},{"location":"websocket/node_modules/debug/","title":"debug","text":"<p>A tiny node.js debugging utility modelled after node core's debugging technique.</p> <p>Discussion around the V3 API is under way here</p>"},{"location":"websocket/node_modules/debug/#installation","title":"Installation","text":"<pre><code>$ npm install debug\n</code></pre>"},{"location":"websocket/node_modules/debug/#usage","title":"Usage","text":"<p><code>debug</code> exposes a function; simply pass this function the name of your module, and it will return a decorated version of <code>console.error</code> for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.</p> <p>Example app.js:</p> <pre><code>var debug = require('debug')('http')\n  , http = require('http')\n  , name = 'My App';\n\n// fake app\n\ndebug('booting %s', name);\n\nhttp.createServer(function(req, res){\n  debug(req.method + ' ' + req.url);\n  res.end('hello\\n');\n}).listen(3000, function(){\n  debug('listening');\n});\n\n// fake worker of some kind\n\nrequire('./worker');\n</code></pre> <p>Example worker.js:</p> <pre><code>var debug = require('debug')('worker');\n\nsetInterval(function(){\n  debug('doing some work');\n}, 1000);\n</code></pre> <p>The DEBUG environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:</p> <p></p> <p></p>"},{"location":"websocket/node_modules/debug/#windows-note","title":"Windows note","text":"<p>On Windows the environment variable is set using the <code>set</code> command.</p> <pre><code>set DEBUG=*,-not_this\n</code></pre> <p>Note that PowerShell uses different syntax to set environment variables.</p> <p><code>cmd  $env:DEBUG = \"*,-not_this\"</code></p> <p>Then, run the program to be debugged as usual.</p>"},{"location":"websocket/node_modules/debug/#millisecond-diff","title":"Millisecond diff","text":"<p>When actively developing an application it can be useful to see when the time spent between one <code>debug()</code> call and the next. Suppose for example you invoke <code>debug()</code> before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls.</p> <p></p> <p>When stdout is not a TTY, <code>Date#toUTCString()</code> is used, making it more useful for logging the debug information as shown below:</p> <p></p>"},{"location":"websocket/node_modules/debug/#conventions","title":"Conventions","text":"<p>If you're using this in one or more of your libraries, you should use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you should prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".</p>"},{"location":"websocket/node_modules/debug/#wildcards","title":"Wildcards","text":"<p>The <code>*</code> character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with <code>DEBUG=connect:bodyParser,connect:compress,connect:session</code>, you may simply do <code>DEBUG=connect:*</code>, or to run everything using this module simply use <code>DEBUG=*</code>.</p> <p>You can also exclude specific debuggers by prefixing them with a \"-\" character.  For example, <code>DEBUG=*,-connect:*</code> would include all debuggers except those starting with \"connect:\".</p>"},{"location":"websocket/node_modules/debug/#environment-variables","title":"Environment Variables","text":"<p>When running through Node.js, you can set a few environment variables that will   change the behavior of the debug logging:</p> Name Purpose <code>DEBUG</code> Enables/disables specific debugging namespaces. <code>DEBUG_COLORS</code> Whether or not to use colors in the debug output. <code>DEBUG_DEPTH</code> Object inspection depth. <code>DEBUG_SHOW_HIDDEN</code> Shows hidden properties on inspected objects. <p>Note: The environment variables beginning with <code>DEBUG_</code> end up being   converted into an Options object that gets used with <code>%o</code>/<code>%O</code> formatters.   See the Node.js documentation for   <code>util.inspect()</code>   for the complete list.</p>"},{"location":"websocket/node_modules/debug/#formatters","title":"Formatters","text":"<p>Debug uses printf-style formatting. Below are the officially supported formatters:</p> Formatter Representation <code>%O</code> Pretty-print an Object on multiple lines. <code>%o</code> Pretty-print an Object all on a single line. <code>%s</code> String. <code>%d</code> Number (both integer and float). <code>%j</code> JSON. Replaced with the string '[Circular]' if the argument contains circular references. <code>%%</code> Single percent sign ('%'). This does not consume an argument."},{"location":"websocket/node_modules/debug/#custom-formatters","title":"Custom formatters","text":"<p>You can add custom formatters by extending the <code>debug.formatters</code> object. For example, if you wanted to add support for rendering a Buffer as hex with <code>%h</code>, you could do something like:</p> <pre><code>const createDebug = require('debug')\ncreateDebug.formatters.h = (v) =&gt; {\n  return v.toString('hex')\n}\n\n// \u2026elsewhere\nconst debug = createDebug('foo')\ndebug('this is hex: %h', new Buffer('hello world'))\n//   foo this is hex: 68656c6c6f20776f726c6421 +0ms\n</code></pre>"},{"location":"websocket/node_modules/debug/#browser-support","title":"Browser support","text":"<p>You can build a browser-ready script using browserify,   or just use the browserify-as-a-service build,   if you don't want to build it yourself.</p> <p>Debug's enable state is currently persisted by <code>localStorage</code>.   Consider the situation shown below where you have <code>worker:a</code> and <code>worker:b</code>,   and wish to debug both. You can enable this using <code>localStorage.debug</code>:</p> <pre><code>localStorage.debug = 'worker:*'\n</code></pre> <p>And then refresh the page.</p> <pre><code>a = debug('worker:a');\nb = debug('worker:b');\n\nsetInterval(function(){\n  a('doing some work');\n}, 1000);\n\nsetInterval(function(){\n  b('doing some work');\n}, 1200);\n</code></pre>"},{"location":"websocket/node_modules/debug/#web-inspector-colors","title":"Web Inspector Colors","text":"<p>Colors are also enabled on \"Web Inspectors\" that understand the <code>%c</code> formatting   option. These are WebKit web inspectors, Firefox (since version   31)   and the Firebug plugin for Firefox (any version).</p> <p>Colored output looks something like:</p> <p></p>"},{"location":"websocket/node_modules/debug/#output-streams","title":"Output streams","text":"<p>By default <code>debug</code> will log to stderr, however this can be configured per-namespace by overriding the <code>log</code> method:</p> <p>Example stdout.js:</p> <pre><code>var debug = require('debug');\nvar error = debug('app:error');\n\n// by default stderr is used\nerror('goes to stderr!');\n\nvar log = debug('app:log');\n// set this namespace to log via console.log\nlog.log = console.log.bind(console); // don't forget to bind to console!\nlog('goes to stdout');\nerror('still goes to stderr!');\n\n// set all output to go via console.info\n// overrides all per-namespace log settings\ndebug.log = console.info.bind(console);\nerror('now goes to stdout via console.info');\nlog('still goes to stdout, but via console.info now');\n</code></pre>"},{"location":"websocket/node_modules/debug/#authors","title":"Authors","text":"<ul> <li>TJ Holowaychuk</li> <li>Nathan Rajlich</li> <li>Andrew Rhyne</li> </ul>"},{"location":"websocket/node_modules/debug/#backers","title":"Backers","text":"<p>Support us with a monthly donation and help us continue our activities. [Become a backer]</p> <p> </p>"},{"location":"websocket/node_modules/debug/#sponsors","title":"Sponsors","text":"<p>Become a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]</p> <p> </p>"},{"location":"websocket/node_modules/debug/#license","title":"License","text":"<p>(The MIT License)</p> <p>Copyright (c) 2014-2016 TJ Holowaychuk &lt;tj@vision-media.ca&gt;</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"websocket/node_modules/debug/CHANGELOG/","title":"2.6.9 / 2017-09-22","text":"<ul> <li>remove ReDoS regexp in %o formatter (#504)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#268-2017-05-18","title":"2.6.8 / 2017-05-18","text":"<ul> <li>Fix: Check for undefined on browser globals (#462, @marbemac)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#267-2017-05-16","title":"2.6.7 / 2017-05-16","text":"<ul> <li>Fix: Update ms to 2.0.0 to fix regular expression denial of service vulnerability (#458, @hubdotcom)</li> <li>Fix: Inline extend function in node implementation (#452, @dougwilson)</li> <li>Docs: Fix typo (#455, @msasad)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#265-2017-04-27","title":"2.6.5 / 2017-04-27","text":"<ul> <li>Fix: null reference check on window.documentElement.style.WebkitAppearance (#447, @thebigredgeek)</li> <li>Misc: clean up browser reference checks (#447, @thebigredgeek)</li> <li>Misc: add npm-debug.log to .gitignore (@thebigredgeek)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#264-2017-04-20","title":"2.6.4 / 2017-04-20","text":"<ul> <li>Fix: bug that would occure if process.env.DEBUG is a non-string value. (#444, @LucianBuzzo)</li> <li>Chore: ignore bower.json in npm installations. (#437, @joaovieira)</li> <li>Misc: update \"ms\" to v0.7.3 (@tootallnate)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#263-2017-03-13","title":"2.6.3 / 2017-03-13","text":"<ul> <li>Fix: Electron reference to <code>process.env.DEBUG</code> (#431, @paulcbetts)</li> <li>Docs: Changelog fix (@thebigredgeek)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#262-2017-03-10","title":"2.6.2 / 2017-03-10","text":"<ul> <li>Fix: DEBUG_MAX_ARRAY_LENGTH (#420, @slavaGanzin)</li> <li>Docs: Add backers and sponsors from Open Collective (#422, @piamancini)</li> <li>Docs: Add Slackin invite badge (@tootallnate)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#261-2017-02-10","title":"2.6.1 / 2017-02-10","text":"<ul> <li>Fix: Module's <code>export default</code> syntax fix for IE8 <code>Expected identifier</code> error</li> <li>Fix: Whitelist DEBUG_FD for values 1 and 2 only (#415, @pi0)</li> <li>Fix: IE8 \"Expected identifier\" error (#414, @vgoma)</li> <li>Fix: Namespaces would not disable once enabled (#409, @musikov)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#260-2016-12-28","title":"2.6.0 / 2016-12-28","text":"<ul> <li>Fix: added better null pointer checks for browser useColors (@thebigredgeek)</li> <li>Improvement: removed explicit <code>window.debug</code> export (#404, @tootallnate)</li> <li>Improvement: deprecated <code>DEBUG_FD</code> environment variable (#405, @tootallnate)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#252-2016-12-25","title":"2.5.2 / 2016-12-25","text":"<ul> <li>Fix: reference error on window within webworkers (#393, @KlausTrainer)</li> <li>Docs: fixed README typo (#391, @lurch)</li> <li>Docs: added notice about v3 api discussion (@thebigredgeek)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#251-2016-12-20","title":"2.5.1 / 2016-12-20","text":"<ul> <li>Fix: babel-core compatibility</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#250-2016-12-20","title":"2.5.0 / 2016-12-20","text":"<ul> <li>Fix: wrong reference in bower file (@thebigredgeek)</li> <li>Fix: webworker compatibility (@thebigredgeek)</li> <li>Fix: output formatting issue (#388, @kribblo)</li> <li>Fix: babel-loader compatibility (#383, @escwald)</li> <li>Misc: removed built asset from repo and publications (@thebigredgeek)</li> <li>Misc: moved source files to /src (#378, @yamikuronue)</li> <li>Test: added karma integration and replaced babel with browserify for browser tests (#378, @yamikuronue)</li> <li>Test: coveralls integration (#378, @yamikuronue)</li> <li>Docs: simplified language in the opening paragraph (#373, @yamikuronue)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#245-2016-12-17","title":"2.4.5 / 2016-12-17","text":"<ul> <li>Fix: <code>navigator</code> undefined in Rhino (#376, @jochenberger)</li> <li>Fix: custom log function (#379, @hsiliev)</li> <li>Improvement: bit of cleanup + linting fixes (@thebigredgeek)</li> <li>Improvement: rm non-maintainted <code>dist/</code> dir (#375, @freewil)</li> <li>Docs: simplified language in the opening paragraph. (#373, @yamikuronue)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#244-2016-12-14","title":"2.4.4 / 2016-12-14","text":"<ul> <li>Fix: work around debug being loaded in preload scripts for electron (#368, @paulcbetts)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#243-2016-12-14","title":"2.4.3 / 2016-12-14","text":"<ul> <li>Fix: navigation.userAgent error for react native (#364, @escwald)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#242-2016-12-14","title":"2.4.2 / 2016-12-14","text":"<ul> <li>Fix: browser colors (#367, @tootallnate)</li> <li>Misc: travis ci integration (@thebigredgeek)</li> <li>Misc: added linting and testing boilerplate with sanity check (@thebigredgeek)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#241-2016-12-13","title":"2.4.1 / 2016-12-13","text":"<ul> <li>Fix: typo that broke the package (#356)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#240-2016-12-13","title":"2.4.0 / 2016-12-13","text":"<ul> <li>Fix: bower.json references unbuilt src entry point (#342, @justmatt)</li> <li>Fix: revert \"handle regex special characters\" (@tootallnate)</li> <li>Feature: configurable util.inspect()`options for NodeJS (#327, @tootallnate)</li> <li>Feature: %O`(big O) pretty-prints objects (#322, @tootallnate)</li> <li>Improvement: allow colors in workers (#335, @botverse)</li> <li>Improvement: use same color for same namespace. (#338, @lchenay)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#233-2016-11-09","title":"2.3.3 / 2016-11-09","text":"<ul> <li>Fix: Catch <code>JSON.stringify()</code> errors (#195, Jovan Alleyne)</li> <li>Fix: Returning <code>localStorage</code> saved values (#331, Levi Thomason)</li> <li>Improvement: Don't create an empty object when no <code>process</code> (Nathan Rajlich)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#232-2016-11-09","title":"2.3.2 / 2016-11-09","text":"<ul> <li>Fix: be super-safe in index.js as well (@TooTallNate)</li> <li>Fix: should check whether process exists (Tom Newby)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#231-2016-11-09","title":"2.3.1 / 2016-11-09","text":"<ul> <li>Fix: Added electron compatibility (#324, @paulcbetts)</li> <li>Improvement: Added performance optimizations (@tootallnate)</li> <li>Readme: Corrected PowerShell environment variable example (#252, @gimre)</li> <li>Misc: Removed yarn lock file from source control (#321, @fengmk2)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#230-2016-11-07","title":"2.3.0 / 2016-11-07","text":"<ul> <li>Fix: Consistent placement of ms diff at end of output (#215, @gorangajic)</li> <li>Fix: Escaping of regex special characters in namespace strings (#250, @zacronos)</li> <li>Fix: Fixed bug causing crash on react-native (#282, @vkarpov15)</li> <li>Feature: Enabled ES6+ compatible import via default export (#212 @bucaran)</li> <li>Feature: Added %O formatter to reflect Chrome's console.log capability (#279, @oncletom)</li> <li>Package: Update \"ms\" to 0.7.2 (#315, @DevSide)</li> <li>Package: removed superfluous version property from bower.json (#207 @kkirsche)</li> <li>Readme: fix USE_COLORS to DEBUG_COLORS</li> <li>Readme: Doc fixes for format string sugar (#269, @mlucool)</li> <li>Readme: Updated docs for DEBUG_FD and DEBUG_COLORS environment variables (#232, @mattlyons0)</li> <li>Readme: doc fixes for PowerShell (#271 #243, @exoticknight @unreadable)</li> <li>Readme: better docs for browser support (#224, @matthewmueller)</li> <li>Tooling: Added yarn integration for development (#317, @thebigredgeek)</li> <li>Misc: Renamed History.md to CHANGELOG.md (@thebigredgeek)</li> <li>Misc: Added license file (#226 #274, @CantemoInternal @sdaitzman)</li> <li>Misc: Updated contributors (@thebigredgeek)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#220-2015-05-09","title":"2.2.0 / 2015-05-09","text":"<ul> <li>package: update \"ms\" to v0.7.1 (#202, @dougwilson)</li> <li>README: add logging to file example (#193, @DanielOchoa)</li> <li>README: fixed a typo (#191, @amir-s)</li> <li>browser: expose <code>storage</code> (#190, @stephenmathieson)</li> <li>Makefile: add a <code>distclean</code> target (#189, @stephenmathieson)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#213-2015-03-13","title":"2.1.3 / 2015-03-13","text":"<ul> <li>Updated stdout/stderr example (#186)</li> <li>Updated example/stdout.js to match debug current behaviour</li> <li>Renamed example/stderr.js to stdout.js</li> <li>Update Readme.md (#184)</li> <li>replace high intensity foreground color for bold (#182, #183)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#212-2015-03-01","title":"2.1.2 / 2015-03-01","text":"<ul> <li>dist: recompile</li> <li>update \"ms\" to v0.7.0</li> <li>package: update \"browserify\" to v9.0.3</li> <li>component: fix \"ms.js\" repo location</li> <li>changed bower package name</li> <li>updated documentation about using debug in a browser</li> <li>fix: security error on safari (#167, #168, @yields)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#211-2014-12-29","title":"2.1.1 / 2014-12-29","text":"<ul> <li>browser: use <code>typeof</code> to check for <code>console</code> existence</li> <li>browser: check for <code>console.log</code> truthiness (fix IE 8/9)</li> <li>browser: add support for Chrome apps</li> <li>Readme: added Windows usage remarks</li> <li>Add <code>bower.json</code> to properly support bower install</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#210-2014-10-15","title":"2.1.0 / 2014-10-15","text":"<ul> <li>node: implement <code>DEBUG_FD</code> env variable support</li> <li>package: update \"browserify\" to v6.1.0</li> <li>package: add \"license\" field to package.json (#135, @panuhorsmalahti)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#200-2014-09-01","title":"2.0.0 / 2014-09-01","text":"<ul> <li>package: update \"browserify\" to v5.11.0</li> <li>node: use stderr rather than stdout for logging (#29, @stephenmathieson)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#104-2014-07-15","title":"1.0.4 / 2014-07-15","text":"<ul> <li>dist: recompile</li> <li>example: remove <code>console.info()</code> log usage</li> <li>example: add \"Content-Type\" UTF-8 header to browser example</li> <li>browser: place %c marker after the space character</li> <li>browser: reset the \"content\" color via <code>color: inherit</code></li> <li>browser: add colors support for Firefox &gt;= v31</li> <li>debug: prefer an instance <code>log()</code> function over the global one (#119)</li> <li>Readme: update documentation about styled console logs for FF v31 (#116, @wryk)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#103-2014-07-09","title":"1.0.3 / 2014-07-09","text":"<ul> <li>Add support for multiple wildcards in namespaces (#122, @seegno)</li> <li>browser: fix lint</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#102-2014-06-10","title":"1.0.2 / 2014-06-10","text":"<ul> <li>browser: update color palette (#113, @gscottolson)</li> <li>common: make console logging function configurable (#108, @timoxley)</li> <li>node: fix %o colors on old node &lt;= 0.8.x</li> <li>Makefile: find node path using shell/which (#109, @timoxley)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#101-2014-06-06","title":"1.0.1 / 2014-06-06","text":"<ul> <li>browser: use <code>removeItem()</code> to clear localStorage</li> <li>browser, node: don't set DEBUG if namespaces is undefined (#107, @leedm777)</li> <li>package: add \"contributors\" section</li> <li>node: fix comment typo</li> <li>README: list authors</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#100-2014-06-04","title":"1.0.0 / 2014-06-04","text":"<ul> <li>make ms diff be global, not be scope</li> <li>debug: ignore empty strings in enable()</li> <li>node: make DEBUG_COLORS able to disable coloring</li> <li>*: export the <code>colors</code> array</li> <li>npmignore: don't publish the <code>dist</code> dir</li> <li>Makefile: refactor to use browserify</li> <li>package: add \"browserify\" as a dev dependency</li> <li>Readme: add Web Inspector Colors section</li> <li>node: reset terminal color for the debug content</li> <li>node: map \"%o\" to <code>util.inspect()</code></li> <li>browser: map \"%j\" to <code>JSON.stringify()</code></li> <li>debug: add custom \"formatters\"</li> <li>debug: use \"ms\" module for humanizing the diff</li> <li>Readme: add \"bash\" syntax highlighting</li> <li>browser: add Firebug color support</li> <li>browser: add colors for WebKit browsers</li> <li>node: apply log to <code>console</code></li> <li>rewrite: abstract common logic for Node &amp; browsers</li> <li>add .jshintrc file</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#081-2014-04-14","title":"0.8.1 / 2014-04-14","text":"<ul> <li>package: re-add the \"component\" section</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#080-2014-03-30","title":"0.8.0 / 2014-03-30","text":"<ul> <li>add <code>enable()</code> method for nodejs. Closes #27</li> <li>change from stderr to stdout</li> <li>remove unnecessary index.js file</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#074-2013-11-13","title":"0.7.4 / 2013-11-13","text":"<ul> <li>remove \"browserify\" key from package.json (fixes something in browserify)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#073-2013-10-30","title":"0.7.3 / 2013-10-30","text":"<ul> <li>fix: catch localStorage security error when cookies are blocked (Chrome)</li> <li>add debug(err) support. Closes #46</li> <li>add .browser prop to package.json. Closes #42</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#072-2013-02-06","title":"0.7.2 / 2013-02-06","text":"<ul> <li>fix package.json</li> <li>fix: Mobile Safari (private mode) is broken with debug</li> <li>fix: Use unicode to send escape character to shell instead of octal to work with strict mode javascript</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#071-2013-02-05","title":"0.7.1 / 2013-02-05","text":"<ul> <li>add repository URL to package.json</li> <li>add DEBUG_COLORED to force colored output</li> <li>add browserify support</li> <li>fix component. Closes #24</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#070-2012-05-04","title":"0.7.0 / 2012-05-04","text":"<ul> <li>Added .component to package.json</li> <li>Added debug.component.js build</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#060-2012-03-16","title":"0.6.0 / 2012-03-16","text":"<ul> <li>Added support for \"-\" prefix in DEBUG [Vinay Pulim]</li> <li>Added <code>.enabled</code> flag to the node version [TooTallNate]</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#050-2012-02-02","title":"0.5.0 / 2012-02-02","text":"<ul> <li>Added: humanize diffs. Closes #8</li> <li>Added <code>debug.disable()</code> to the CS variant</li> <li>Removed padding. Closes #10</li> <li>Fixed: persist client-side variant again. Closes #9</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#040-2012-02-01","title":"0.4.0 / 2012-02-01","text":"<ul> <li>Added browser variant support for older browsers [TooTallNate]</li> <li>Added <code>debug.enable('project:*')</code> to browser variant [TooTallNate]</li> <li>Added padding to diff (moved it to the right)</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#030-2012-01-26","title":"0.3.0 / 2012-01-26","text":"<ul> <li>Added millisecond diff when isatty, otherwise UTC string</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#020-2012-01-22","title":"0.2.0 / 2012-01-22","text":"<ul> <li>Added wildcard support</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#010-2011-12-02","title":"0.1.0 / 2011-12-02","text":"<ul> <li>Added: remove colors unless stderr isatty [TooTallNate]</li> </ul>"},{"location":"websocket/node_modules/debug/CHANGELOG/#001-2010-01-03","title":"0.0.1 / 2010-01-03","text":"<ul> <li>Initial release</li> </ul>"},{"location":"websocket/node_modules/es5-ext/","title":"Index","text":""},{"location":"websocket/node_modules/es5-ext/#es5-ext","title":"es5-ext","text":""},{"location":"websocket/node_modules/es5-ext/#ecmascript-5-extensions","title":"ECMAScript 5 extensions","text":""},{"location":"websocket/node_modules/es5-ext/#with-respect-to-ecmascript-6-standard","title":"(with respect to ECMAScript 6 standard)","text":"<p>Shims for upcoming ES6 standard and other goodies implemented strictly with ECMAScript conventions in mind.</p> <p>It's designed to be used in compliant ECMAScript 5 or ECMAScript 6 environments. Older environments are not supported, although most of the features should work with correct ECMAScript 5 shim on board.</p> <p>When used in ECMAScript 6 environment, native implementation (if valid) takes precedence over shims.</p>"},{"location":"websocket/node_modules/es5-ext/#installation","title":"Installation","text":"<pre><code>npm install es5-ext\n</code></pre> <p>To port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: Browserify, Webmake or Webpack</p>"},{"location":"websocket/node_modules/es5-ext/#usage","title":"Usage","text":""},{"location":"websocket/node_modules/es5-ext/#ecmascript-6-features","title":"ECMAScript 6 features","text":"<p>You can force ES6 features to be implemented in your environment, e.g. following will assign <code>from</code> function to <code>Array</code> (only if it's not implemented already).</p> <pre><code>require(\"es5-ext/array/from/implement\");\nArray.from(\"foo\"); // ['f', 'o', 'o']\n</code></pre> <p>You can also access shims directly, without fixing native objects. Following will return native <code>Array.from</code> if it's available and fallback to shim if it's not.</p> <pre><code>var aFrom = require(\"es5-ext/array/from\");\naFrom(\"foo\"); // ['f', 'o', 'o']\n</code></pre> <p>If you want to use shim unconditionally (even if native implementation exists) do:</p> <pre><code>var aFrom = require(\"es5-ext/array/from/shim\");\naFrom(\"foo\"); // ['f', 'o', 'o']\n</code></pre>"},{"location":"websocket/node_modules/es5-ext/#list-of-es6-shims","title":"List of ES6 shims","text":"<p>It's about properties introduced with ES6 and those that have been updated in new spec.</p> <ul> <li><code>Array.from</code> -&gt; <code>require('es5-ext/array/from')</code></li> <li><code>Array.of</code> -&gt; <code>require('es5-ext/array/of')</code></li> <li><code>Array.prototype.concat</code> -&gt; <code>require('es5-ext/array/#/concat')</code></li> <li><code>Array.prototype.copyWithin</code> -&gt; <code>require('es5-ext/array/#/copy-within')</code></li> <li><code>Array.prototype.entries</code> -&gt; <code>require('es5-ext/array/#/entries')</code></li> <li><code>Array.prototype.fill</code> -&gt; <code>require('es5-ext/array/#/fill')</code></li> <li><code>Array.prototype.filter</code> -&gt; <code>require('es5-ext/array/#/filter')</code></li> <li><code>Array.prototype.find</code> -&gt; <code>require('es5-ext/array/#/find')</code></li> <li><code>Array.prototype.findIndex</code> -&gt; <code>require('es5-ext/array/#/find-index')</code></li> <li><code>Array.prototype.keys</code> -&gt; <code>require('es5-ext/array/#/keys')</code></li> <li><code>Array.prototype.map</code> -&gt; <code>require('es5-ext/array/#/map')</code></li> <li><code>Array.prototype.slice</code> -&gt; <code>require('es5-ext/array/#/slice')</code></li> <li><code>Array.prototype.splice</code> -&gt; <code>require('es5-ext/array/#/splice')</code></li> <li><code>Array.prototype.values</code> -&gt; <code>require('es5-ext/array/#/values')</code></li> <li><code>Array.prototype[@@iterator]</code> -&gt; <code>require('es5-ext/array/#/@@iterator')</code></li> <li><code>Math.acosh</code> -&gt; <code>require('es5-ext/math/acosh')</code></li> <li><code>Math.asinh</code> -&gt; <code>require('es5-ext/math/asinh')</code></li> <li><code>Math.atanh</code> -&gt; <code>require('es5-ext/math/atanh')</code></li> <li><code>Math.cbrt</code> -&gt; <code>require('es5-ext/math/cbrt')</code></li> <li><code>Math.clz32</code> -&gt; <code>require('es5-ext/math/clz32')</code></li> <li><code>Math.cosh</code> -&gt; <code>require('es5-ext/math/cosh')</code></li> <li><code>Math.exmp1</code> -&gt; <code>require('es5-ext/math/expm1')</code></li> <li><code>Math.fround</code> -&gt; <code>require('es5-ext/math/fround')</code></li> <li><code>Math.hypot</code> -&gt; <code>require('es5-ext/math/hypot')</code></li> <li><code>Math.imul</code> -&gt; <code>require('es5-ext/math/imul')</code></li> <li><code>Math.log1p</code> -&gt; <code>require('es5-ext/math/log1p')</code></li> <li><code>Math.log2</code> -&gt; <code>require('es5-ext/math/log2')</code></li> <li><code>Math.log10</code> -&gt; <code>require('es5-ext/math/log10')</code></li> <li><code>Math.sign</code> -&gt; <code>require('es5-ext/math/sign')</code></li> <li><code>Math.signh</code> -&gt; <code>require('es5-ext/math/signh')</code></li> <li><code>Math.tanh</code> -&gt; <code>require('es5-ext/math/tanh')</code></li> <li><code>Math.trunc</code> -&gt; <code>require('es5-ext/math/trunc')</code></li> <li><code>Number.EPSILON</code> -&gt; <code>require('es5-ext/number/epsilon')</code></li> <li><code>Number.MAX_SAFE_INTEGER</code> -&gt; <code>require('es5-ext/number/max-safe-integer')</code></li> <li><code>Number.MIN_SAFE_INTEGER</code> -&gt; <code>require('es5-ext/number/min-safe-integer')</code></li> <li><code>Number.isFinite</code> -&gt; <code>require('es5-ext/number/is-finite')</code></li> <li><code>Number.isInteger</code> -&gt; <code>require('es5-ext/number/is-integer')</code></li> <li><code>Number.isNaN</code> -&gt; <code>require('es5-ext/number/is-nan')</code></li> <li><code>Number.isSafeInteger</code> -&gt; <code>require('es5-ext/number/is-safe-integer')</code></li> <li><code>Object.assign</code> -&gt; <code>require('es5-ext/object/assign')</code></li> <li><code>Object.keys</code> -&gt; <code>require('es5-ext/object/keys')</code></li> <li><code>Object.setPrototypeOf</code> -&gt; <code>require('es5-ext/object/set-prototype-of')</code></li> <li><code>Promise.prototype.finally</code> -&gt; <code>require('es5-ext/promise/#/finally')</code></li> <li><code>RegExp.prototype.match</code> -&gt; <code>require('es5-ext/reg-exp/#/match')</code></li> <li><code>RegExp.prototype.replace</code> -&gt; <code>require('es5-ext/reg-exp/#/replace')</code></li> <li><code>RegExp.prototype.search</code> -&gt; <code>require('es5-ext/reg-exp/#/search')</code></li> <li><code>RegExp.prototype.split</code> -&gt; <code>require('es5-ext/reg-exp/#/split')</code></li> <li><code>RegExp.prototype.sticky</code> -&gt; Implement with <code>require('es5-ext/reg-exp/#/sticky/implement')</code>, use as function with <code>require('es5-ext/reg-exp/#/is-sticky')</code></li> <li><code>RegExp.prototype.unicode</code> -&gt; Implement with <code>require('es5-ext/reg-exp/#/unicode/implement')</code>, use as function with <code>require('es5-ext/reg-exp/#/is-unicode')</code></li> <li><code>String.fromCodePoint</code> -&gt; <code>require('es5-ext/string/from-code-point')</code></li> <li><code>String.raw</code> -&gt; <code>require('es5-ext/string/raw')</code></li> <li><code>String.prototype.codePointAt</code> -&gt; <code>require('es5-ext/string/#/code-point-at')</code></li> <li><code>String.prototype.contains</code> -&gt; <code>require('es5-ext/string/#/contains')</code></li> <li><code>String.prototype.endsWith</code> -&gt; <code>require('es5-ext/string/#/ends-with')</code></li> <li><code>String.prototype.normalize</code> -&gt; <code>require('es5-ext/string/#/normalize')</code></li> <li><code>String.prototype.repeat</code> -&gt; <code>require('es5-ext/string/#/repeat')</code></li> <li><code>String.prototype.startsWith</code> -&gt; <code>require('es5-ext/string/#/starts-with')</code></li> <li><code>String.prototype[@@iterator]</code> -&gt; <code>require('es5-ext/string/#/@@iterator')</code></li> </ul>"},{"location":"websocket/node_modules/es5-ext/#non-ecmascript-standard-features","title":"Non ECMAScript standard features","text":"<p>es5-ext provides also other utils, and implements them as if they were proposed for a standard. It mostly offers methods (not functions) which can directly be assigned to native prototypes:</p> <pre><code>Object.defineProperty(Function.prototype, \"partial\", {\n  value: require(\"es5-ext/function/#/partial\"),\n  configurable: true,\n  enumerable: false,\n  writable: true\n});\nObject.defineProperty(Array.prototype, \"flatten\", {\n  value: require(\"es5-ext/array/#/flatten\"),\n  configurable: true,\n  enumerable: false,\n  writable: true\n});\nObject.defineProperty(String.prototype, \"capitalize\", {\n  value: require(\"es5-ext/string/#/capitalize\"),\n  configurable: true,\n  enumerable: false,\n  writable: true\n});\n</code></pre> <p>See es5-extend, a great utility that automatically will extend natives for you.</p> <p>Important: Remember to not extend natives in scope of generic reusable packages (e.g. ones you intend to publish to npm). Extending natives is fine only if you're the owner of the global scope, so e.g. in final project you lead development of.</p> <p>When you're in situation when native extensions are not good idea, then you should use methods indirectly:</p> <pre><code>var flatten = require(\"es5-ext/array/#/flatten\");\n\nflatten.call([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n</code></pre> <p>for better convenience you can turn methods into functions:</p> <pre><code>var call = Function.prototype.call;\nvar flatten = call.bind(require(\"es5-ext/array/#/flatten\"));\n\nflatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n</code></pre> <p>You can configure custom toolkit (like underscorejs), and use it throughout your application</p> <pre><code>var util = {};\nutil.partial = call.bind(require(\"es5-ext/function/#/partial\"));\nutil.flatten = call.bind(require(\"es5-ext/array/#/flatten\"));\nutil.startsWith = call.bind(require(\"es5-ext/string/#/starts-with\"));\n\nutil.flatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n</code></pre> <p>As with native ones most methods are generic and can be run on any type of object.</p>"},{"location":"websocket/node_modules/es5-ext/#api","title":"API","text":""},{"location":"websocket/node_modules/es5-ext/#global-extensions","title":"Global extensions","text":""},{"location":"websocket/node_modules/es5-ext/#global-es5-extglobal","title":"global (es5-ext/global)","text":"<p>Object that represents global scope</p>"},{"location":"websocket/node_modules/es5-ext/#array-constructor-extensions","title":"Array Constructor extensions","text":""},{"location":"websocket/node_modules/es5-ext/#fromarraylike-mapfn-thisarg-es5-extarrayfrom","title":"from(arrayLike[, mapFn[, thisArg]]) (es5-ext/array/from)","text":"<p>Introduced with ECMAScript 6. Returns array representation of iterable or arrayLike. If arrayLike is an instance of array, its copy is returned.</p>"},{"location":"websocket/node_modules/es5-ext/#generatelength-fill-es5-extarraygenerate","title":"generate([length[, \u2026fill]]) (es5-ext/array/generate)","text":"<p>Generate an array of pre-given length built of repeated arguments.</p>"},{"location":"websocket/node_modules/es5-ext/#isplainarrayx-es5-extarrayis-plain-array","title":"isPlainArray(x) (es5-ext/array/is-plain-array)","text":"<p>Returns true if object is plain array (not instance of one of the Array's extensions).</p>"},{"location":"websocket/node_modules/es5-ext/#ofitems-es5-extarrayof","title":"of([\u2026items]) (es5-ext/array/of)","text":"<p>Introduced with ECMAScript 6. Create an array from given arguments.</p>"},{"location":"websocket/node_modules/es5-ext/#toarrayobj-es5-extarrayto-array","title":"toArray(obj) (es5-ext/array/to-array)","text":"<p>Returns array representation of <code>obj</code>. If <code>obj</code> is already an array, <code>obj</code> is returned back.</p>"},{"location":"websocket/node_modules/es5-ext/#validarrayobj-es5-extarrayvalid-array","title":"validArray(obj) (es5-ext/array/valid-array)","text":"<p>Returns <code>obj</code> if it's an array, otherwise throws <code>TypeError</code></p>"},{"location":"websocket/node_modules/es5-ext/#array-prototype-extensions","title":"Array Prototype extensions","text":""},{"location":"websocket/node_modules/es5-ext/#arrbinarysearchcomparefn-es5-extarraybinary-search","title":"arr.binarySearch(compareFn) (es5-ext/array/#/binary-search)","text":"<p>In sorted list search for index of item for which compareFn returns value closest to 0. It's variant of binary search algorithm</p>"},{"location":"websocket/node_modules/es5-ext/#arrclear-es5-extarrayclear","title":"arr.clear() (es5-ext/array/#/clear)","text":"<p>Clears the array</p>"},{"location":"websocket/node_modules/es5-ext/#arrcompact-es5-extarraycompact","title":"arr.compact() (es5-ext/array/#/compact)","text":"<p>Returns a copy of the context with all non-values (<code>null</code> or <code>undefined</code>) removed.</p>"},{"location":"websocket/node_modules/es5-ext/#arrconcat-es5-extarrayconcat","title":"arr.concat() (es5-ext/array/#/concat)","text":"<p>Updated with ECMAScript 6. ES6's version of <code>concat</code>. Supports <code>isConcatSpreadable</code> symbol, and returns array of same type as the context.</p>"},{"location":"websocket/node_modules/es5-ext/#arrcontainssearchelement-position-es5-extarraycontains","title":"arr.contains(searchElement[, position]) (es5-ext/array/#/contains)","text":"<p>Whether list contains the given value.</p>"},{"location":"websocket/node_modules/es5-ext/#arrcopywithintarget-start-end-es5-extarraycopy-within","title":"arr.copyWithin(target, start[, end]) (es5-ext/array/#/copy-within)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#arrdiffother-es5-extarraydiff","title":"arr.diff(other) (es5-ext/array/#/diff)","text":"<p>Returns the array of elements that are present in context list but not present in other list.</p>"},{"location":"websocket/node_modules/es5-ext/#arreindexofsearchelement-fromindex-es5-extarraye-index-of","title":"arr.eIndexOf(searchElement[, fromIndex]) (es5-ext/array/#/e-index-of)","text":"<p>egal version of <code>indexOf</code> method. SameValueZero logic is used for comparision</p>"},{"location":"websocket/node_modules/es5-ext/#arrelastindexofsearchelement-fromindex-es5-extarraye-last-index-of","title":"arr.eLastIndexOf(searchElement[, fromIndex]) (es5-ext/array/#/e-last-index-of)","text":"<p>egal version of <code>lastIndexOf</code> method. SameValueZero logic is used for comparision</p>"},{"location":"websocket/node_modules/es5-ext/#arrentries-es5-extarrayentries","title":"arr.entries() (es5-ext/array/#/entries)","text":"<p>Introduced with ECMAScript 6. Returns iterator object, which traverses the array. Each value is represented with an array, where first value is an index and second is corresponding to index value.</p>"},{"location":"websocket/node_modules/es5-ext/#arrexclusionlists-es5-extarrayexclusion","title":"arr.exclusion([\u2026lists]]) (es5-ext/array/#/exclusion)","text":"<p>Returns the array of elements that are found only in one of the lists (either context list or list provided in arguments).</p>"},{"location":"websocket/node_modules/es5-ext/#arrfillvalue-start-end-es5-extarrayfill","title":"arr.fill(value[, start, end]) (es5-ext/array/#/fill)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#arrfiltercallback-thisarg-es5-extarrayfilter","title":"arr.filter(callback[, thisArg]) (es5-ext/array/#/filter)","text":"<p>Updated with ECMAScript 6. ES6's version of <code>filter</code>, returns array of same type as the context.</p>"},{"location":"websocket/node_modules/es5-ext/#arrfindpredicate-thisarg-es5-extarrayfind","title":"arr.find(predicate[, thisArg]) (es5-ext/array/#/find)","text":"<p>Introduced with ECMAScript 6. Return first element for which given function returns true</p>"},{"location":"websocket/node_modules/es5-ext/#arrfindindexpredicate-thisarg-es5-extarrayfind-index","title":"arr.findIndex(predicate[, thisArg]) (es5-ext/array/#/find-index)","text":"<p>Introduced with ECMAScript 6. Return first index for which given function returns true</p>"},{"location":"websocket/node_modules/es5-ext/#arrfirst-es5-extarrayfirst","title":"arr.first() (es5-ext/array/#/first)","text":"<p>Returns value for first defined index</p>"},{"location":"websocket/node_modules/es5-ext/#arrfirstindex-es5-extarrayfirst-index","title":"arr.firstIndex() (es5-ext/array/#/first-index)","text":"<p>Returns first declared index of the array</p>"},{"location":"websocket/node_modules/es5-ext/#arrflatten-es5-extarrayflatten","title":"arr.flatten() (es5-ext/array/#/flatten)","text":"<p>Returns flattened version of the array</p>"},{"location":"websocket/node_modules/es5-ext/#arrforeachrightcb-thisarg-es5-extarrayfor-each-right","title":"arr.forEachRight(cb[, thisArg]) (es5-ext/array/#/for-each-right)","text":"<p><code>forEach</code> starting from last element</p>"},{"location":"websocket/node_modules/es5-ext/#arrgroupcb-thisarg-es5-extarraygroup","title":"arr.group(cb[, thisArg]) (es5-ext/array/#/group)","text":"<p>Group list elements by value returned by cb function</p>"},{"location":"websocket/node_modules/es5-ext/#arrindexesofsearchelement-fromindex-es5-extarrayindexes-of","title":"arr.indexesOf(searchElement[, fromIndex]) (es5-ext/array/#/indexes-of)","text":"<p>Returns array of all indexes of given value</p>"},{"location":"websocket/node_modules/es5-ext/#arrintersectionlists-es5-extarrayintersection","title":"arr.intersection([\u2026lists]) (es5-ext/array/#/intersection)","text":"<p>Computes the array of values that are the intersection of all lists (context list and lists given in arguments)</p>"},{"location":"websocket/node_modules/es5-ext/#arriscopyother-es5-extarrayis-copy","title":"arr.isCopy(other) (es5-ext/array/#/is-copy)","text":"<p>Returns true if both context and other lists have same content</p>"},{"location":"websocket/node_modules/es5-ext/#arrisuniq-es5-extarrayis-uniq","title":"arr.isUniq() (es5-ext/array/#/is-uniq)","text":"<p>Returns true if all values in array are unique</p>"},{"location":"websocket/node_modules/es5-ext/#arrkeys-es5-extarraykeys","title":"arr.keys() (es5-ext/array/#/keys)","text":"<p>Introduced with ECMAScript 6. Returns iterator object, which traverses all array indexes.</p>"},{"location":"websocket/node_modules/es5-ext/#arrlast-es5-extarraylast","title":"arr.last() (es5-ext/array/#/last)","text":"<p>Returns value of last defined index</p>"},{"location":"websocket/node_modules/es5-ext/#arrlastindex-es5-extarraylast","title":"arr.lastIndex() (es5-ext/array/#/last)","text":"<p>Returns last defined index of the array</p>"},{"location":"websocket/node_modules/es5-ext/#arrmapcallback-thisarg-es5-extarraymap","title":"arr.map(callback[, thisArg]) (es5-ext/array/#/map)","text":"<p>Updated with ECMAScript 6. ES6's version of <code>map</code>, returns array of same type as the context.</p>"},{"location":"websocket/node_modules/es5-ext/#arrremovevalue-valuen-es5-extarrayremove","title":"arr.remove(value[, \u2026valuen]) (es5-ext/array/#/remove)","text":"<p>Remove values from the array</p>"},{"location":"websocket/node_modules/es5-ext/#arrseparatesep-es5-extarrayseparate","title":"arr.separate(sep) (es5-ext/array/#/separate)","text":"<p>Returns array with items separated with <code>sep</code> value</p>"},{"location":"websocket/node_modules/es5-ext/#arrslicecallback-thisarg-es5-extarrayslice","title":"arr.slice(callback[, thisArg]) (es5-ext/array/#/slice)","text":"<p>Updated with ECMAScript 6. ES6's version of <code>slice</code>, returns array of same type as the context.</p>"},{"location":"websocket/node_modules/es5-ext/#arrsomerightcb-thisarg-es5-extarraysomeright","title":"arr.someRight(cb[, thisArg]) (es5-ext/array/#/someRight)","text":"<p><code>some</code> starting from last element</p>"},{"location":"websocket/node_modules/es5-ext/#arrsplicecallback-thisarg-es5-extarraysplice","title":"arr.splice(callback[, thisArg]) (es5-ext/array/#/splice)","text":"<p>Updated with ECMAScript 6. ES6's version of <code>splice</code>, returns array of same type as the context.</p>"},{"location":"websocket/node_modules/es5-ext/#arruniq-es5-extarrayuniq","title":"arr.uniq() (es5-ext/array/#/uniq)","text":"<p>Returns duplicate-free version of the array</p>"},{"location":"websocket/node_modules/es5-ext/#arrvalues-es5-extarrayvalues","title":"arr.values() (es5-ext/array/#/values)","text":"<p>Introduced with ECMAScript 6. Returns iterator object which traverses all array values.</p>"},{"location":"websocket/node_modules/es5-ext/#arriterator-es5-extarrayiterator","title":"arr[@@iterator] (es5-ext/array/#/@@iterator)","text":"<p>Introduced with ECMAScript 6. Returns iterator object which traverses all array values.</p>"},{"location":"websocket/node_modules/es5-ext/#boolean-constructor-extensions","title":"Boolean Constructor extensions","text":""},{"location":"websocket/node_modules/es5-ext/#isbooleanx-es5-extbooleanis-boolean","title":"isBoolean(x) (es5-ext/boolean/is-boolean)","text":"<p>Whether value is boolean</p>"},{"location":"websocket/node_modules/es5-ext/#date-constructor-extensions","title":"Date Constructor extensions","text":""},{"location":"websocket/node_modules/es5-ext/#isdatex-es5-extdateis-date","title":"isDate(x) (es5-ext/date/is-date)","text":"<p>Whether value is date instance</p>"},{"location":"websocket/node_modules/es5-ext/#validdatex-es5-extdatevalid-date","title":"validDate(x) (es5-ext/date/valid-date)","text":"<p>If given object is not date throw TypeError in other case return it.</p>"},{"location":"websocket/node_modules/es5-ext/#date-prototype-extensions","title":"Date Prototype extensions","text":""},{"location":"websocket/node_modules/es5-ext/#datecopydate-es5-extdatecopy","title":"date.copy(date) (es5-ext/date/#/copy)","text":"<p>Returns a copy of the date object</p>"},{"location":"websocket/node_modules/es5-ext/#datedaysinmonth-es5-extdatedays-in-month","title":"date.daysInMonth() (es5-ext/date/#/days-in-month)","text":"<p>Returns number of days of date's month</p>"},{"location":"websocket/node_modules/es5-ext/#datefloorday-es5-extdatefloor-day","title":"date.floorDay() (es5-ext/date/#/floor-day)","text":"<p>Sets the date time to 00:00:00.000</p>"},{"location":"websocket/node_modules/es5-ext/#datefloormonth-es5-extdatefloor-month","title":"date.floorMonth() (es5-ext/date/#/floor-month)","text":"<p>Sets date day to 1 and date time to 00:00:00.000</p>"},{"location":"websocket/node_modules/es5-ext/#dateflooryear-es5-extdatefloor-year","title":"date.floorYear() (es5-ext/date/#/floor-year)","text":"<p>Sets date month to 0, day to 1 and date time to 00:00:00.000</p>"},{"location":"websocket/node_modules/es5-ext/#dateformatpattern-es5-extdateformat","title":"date.format(pattern) (es5-ext/date/#/format)","text":"<p>Formats date up to given string. Supported patterns:</p> <ul> <li><code>%Y</code> - Year with century, 1999, 2003</li> <li><code>%y</code> - Year without century, 99, 03</li> <li><code>%m</code> - Month, 01..12</li> <li><code>%d</code> - Day of the month 01..31</li> <li><code>%H</code> - Hour (24-hour clock), 00..23</li> <li><code>%M</code> - Minute, 00..59</li> <li><code>%S</code> - Second, 00..59</li> <li><code>%L</code> - Milliseconds, 000..999</li> </ul>"},{"location":"websocket/node_modules/es5-ext/#error-constructor-extensions","title":"Error Constructor extensions","text":""},{"location":"websocket/node_modules/es5-ext/#custommessage-code-ext-es5-exterrorcustom","title":"custom(message/, code, ext/) (es5-ext/error/custom)","text":"<p>Creates custom error object, optinally extended with <code>code</code> and other extension properties (provided with <code>ext</code> object)</p>"},{"location":"websocket/node_modules/es5-ext/#iserrorx-es5-exterroris-error","title":"isError(x) (es5-ext/error/is-error)","text":"<p>Whether value is an error (instance of <code>Error</code>).</p>"},{"location":"websocket/node_modules/es5-ext/#validerrorx-es5-exterrorvalid-error","title":"validError(x) (es5-ext/error/valid-error)","text":"<p>If given object is not error throw TypeError in other case return it.</p>"},{"location":"websocket/node_modules/es5-ext/#error-prototype-extensions","title":"Error Prototype extensions","text":""},{"location":"websocket/node_modules/es5-ext/#errthrow-es5-exterrorthrow","title":"err.throw() (es5-ext/error/#/throw)","text":"<p>Throws error</p>"},{"location":"websocket/node_modules/es5-ext/#function-constructor-extensions","title":"Function Constructor extensions","text":"<p>Some of the functions were inspired by Functional JavaScript project by Olivier Steele</p>"},{"location":"websocket/node_modules/es5-ext/#constantx-es5-extfunctionconstant","title":"constant(x) (es5-ext/function/constant)","text":"<p>Returns a constant function that returns pregiven argument</p> <p>k(x)(y) =def x</p>"},{"location":"websocket/node_modules/es5-ext/#identityx-es5-extfunctionidentity","title":"identity(x) (es5-ext/function/identity)","text":"<p>Identity function. Returns first argument</p> <p>i(x) =def x</p>"},{"location":"websocket/node_modules/es5-ext/#invokename-args-es5-extfunctioninvoke","title":"invoke(name[, \u2026args]) (es5-ext/function/invoke)","text":"<p>Returns a function that takes an object as an argument, and applies object's name method to arguments. name can be name of the method or method itself.</p> <p>invoke(name, \u2026args)(object, \u2026args2) =def object[name](\u2026args, \u2026args2)</p>"},{"location":"websocket/node_modules/es5-ext/#isargumentsx-es5-extfunctionis-arguments","title":"isArguments(x) (es5-ext/function/is-arguments)","text":"<p>Whether value is arguments object</p>"},{"location":"websocket/node_modules/es5-ext/#isfunctionarg-es5-extfunctionis-function","title":"isFunction(arg) (es5-ext/function/is-function)","text":"<p>Whether value is instance of function</p>"},{"location":"websocket/node_modules/es5-ext/#noop-es5-extfunctionnoop","title":"noop() (es5-ext/function/noop)","text":"<p>No operation function</p>"},{"location":"websocket/node_modules/es5-ext/#pluckname-es5-extfunctionpluck","title":"pluck(name) (es5-ext/function/pluck)","text":"<p>Returns a function that takes an object, and returns the value of its name property</p> <p>pluck(name)(obj) =def obj[name]</p>"},{"location":"websocket/node_modules/es5-ext/#validfunctionarg-es5-extfunctionvalid-function","title":"validFunction(arg) (es5-ext/function/valid-function)","text":"<p>If given object is not function throw TypeError in other case return it.</p>"},{"location":"websocket/node_modules/es5-ext/#function-prototype-extensions","title":"Function Prototype extensions","text":"<p>Some of the methods were inspired by Functional JavaScript project by Olivier Steele</p>"},{"location":"websocket/node_modules/es5-ext/#fncomposefns-es5-extfunctioncompose","title":"fn.compose([\u2026fns]) (es5-ext/function/#/compose)","text":"<p>Applies the functions in reverse argument-list order.</p> <p>f1.compose(f2, f3, f4)(\u2026args) =def f1(f2(f3(f4(\u2026arg))))</p> <p><code>compose</code> can also be used in plain function form as:</p> <p>compose(f1, f2, f3, f4)(\u2026args) =def f1(f2(f3(f4(\u2026arg))))</p>"},{"location":"websocket/node_modules/es5-ext/#fncopy-es5-extfunctioncopy","title":"fn.copy() (es5-ext/function/#/copy)","text":"<p>Produces copy of given function</p>"},{"location":"websocket/node_modules/es5-ext/#fncurryn-es5-extfunctioncurry","title":"fn.curry([n]) (es5-ext/function/#/curry)","text":"<p>Invoking the function returned by this function only n arguments are passed to the underlying function. If the underlying function is not saturated, the result is a function that passes all its arguments to the underlying function. If n is not provided then it defaults to context function length</p> <p>f.curry(4)(arg1, arg2)(arg3)(arg4) =def f(arg1, args2, arg3, arg4)</p>"},{"location":"websocket/node_modules/es5-ext/#fnlockargs-es5-extfunctionlock","title":"fn.lock([\u2026args]) (es5-ext/function/#/lock)","text":"<p>Returns a function that applies the underlying function to args, and ignores its own arguments.</p> <p>f.lock(\u2026args)(\u2026args2) =def f(\u2026args)</p> <p>Named after it's counterpart in Google Closure</p>"},{"location":"websocket/node_modules/es5-ext/#fnnot-es5-extfunctionnot","title":"fn.not() (es5-ext/function/#/not)","text":"<p>Returns a function that returns boolean negation of value returned by underlying function.</p> <p>f.not()(\u2026args) =def !f(\u2026args)</p>"},{"location":"websocket/node_modules/es5-ext/#fnpartialargs-es5-extfunctionpartial","title":"fn.partial([\u2026args]) (es5-ext/function/#/partial)","text":"<p>Returns a function that when called will behave like context function called with initially passed arguments. If more arguments are suplilied, they are appended to initial args.</p> <p>f.partial(\u2026args1)(\u2026args2) =def f(\u2026args1, \u2026args2)</p>"},{"location":"websocket/node_modules/es5-ext/#fnspread-es5-extfunctionspread","title":"fn.spread() (es5-ext/function/#/spread)","text":"<p>Returns a function that applies underlying function with first list argument</p> <p>f.match()(args) =def f.apply(null, args)</p>"},{"location":"websocket/node_modules/es5-ext/#fntostringtokens-es5-extfunctionto-string-tokens","title":"fn.toStringTokens() (es5-ext/function/#/to-string-tokens)","text":"<p>Serializes function into two (arguments and body) string tokens. Result is plain object with <code>args</code> and <code>body</code> properties.</p>"},{"location":"websocket/node_modules/es5-ext/#math-extensions","title":"Math extensions","text":""},{"location":"websocket/node_modules/es5-ext/#acoshx-es5-extmathacosh","title":"acosh(x) (es5-ext/math/acosh)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#asinhx-es5-extmathasinh","title":"asinh(x) (es5-ext/math/asinh)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#atanhx-es5-extmathatanh","title":"atanh(x) (es5-ext/math/atanh)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#cbrtx-es5-extmathcbrt","title":"cbrt(x) (es5-ext/math/cbrt)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#clz32x-es5-extmathclz32","title":"clz32(x) (es5-ext/math/clz32)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#coshx-es5-extmathcosh","title":"cosh(x) (es5-ext/math/cosh)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#expm1x-es5-extmathexpm1","title":"expm1(x) (es5-ext/math/expm1)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#froundx-es5-extmathfround","title":"fround(x) (es5-ext/math/fround)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#hypotvalues-es5-extmathhypot","title":"hypot([\u2026values]) (es5-ext/math/hypot)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#imulx-y-es5-extmathimul","title":"imul(x, y) (es5-ext/math/imul)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#log1px-es5-extmathlog1p","title":"log1p(x) (es5-ext/math/log1p)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#log2x-es5-extmathlog2","title":"log2(x) (es5-ext/math/log2)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#log10x-es5-extmathlog10","title":"log10(x) (es5-ext/math/log10)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#signx-es5-extmathsign","title":"sign(x) (es5-ext/math/sign)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#sinhx-es5-extmathsinh","title":"sinh(x) (es5-ext/math/sinh)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#tanhx-es5-extmathtanh","title":"tanh(x) (es5-ext/math/tanh)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#truncx-es5-extmathtrunc","title":"trunc(x) (es5-ext/math/trunc)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#number-constructor-extensions","title":"Number Constructor extensions","text":""},{"location":"websocket/node_modules/es5-ext/#epsilon-es5-extnumberepsilon","title":"EPSILON (es5-ext/number/epsilon)","text":"<p>Introduced with ECMAScript 6.</p> <p>The difference between 1 and the smallest value greater than 1 that is representable as a Number value, which is approximately 2.2204460492503130808472633361816 x 10-16.</p>"},{"location":"websocket/node_modules/es5-ext/#isfinitex-es5-extnumberis-finite","title":"isFinite(x) (es5-ext/number/is-finite)","text":"<p>Introduced with ECMAScript 6. Whether value is finite. Differs from global isNaN that it doesn't do type coercion.</p>"},{"location":"websocket/node_modules/es5-ext/#isintegerx-es5-extnumberis-integer","title":"isInteger(x) (es5-ext/number/is-integer)","text":"<p>Introduced with ECMAScript 6. Whether value is integer.</p>"},{"location":"websocket/node_modules/es5-ext/#isnanx-es5-extnumberis-nan","title":"isNaN(x) (es5-ext/number/is-nan)","text":"<p>Introduced with ECMAScript 6. Whether value is NaN. Differs from global isNaN that it doesn't do type coercion.</p>"},{"location":"websocket/node_modules/es5-ext/#isnumberx-es5-extnumberis-number","title":"isNumber(x) (es5-ext/number/is-number)","text":"<p>Whether given value is number</p>"},{"location":"websocket/node_modules/es5-ext/#issafeintegerx-es5-extnumberis-safe-integer","title":"isSafeInteger(x) (es5-ext/number/is-safe-integer)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#maxsafe_integer-es5-extnumbermax-safe-integer_","title":"MAXSAFE_INTEGER (es5-ext/number/max-safe-integer)_","text":"<p>Introduced with ECMAScript 6. The value of Number.MAX_SAFE_INTEGER is 9007199254740991.</p>"},{"location":"websocket/node_modules/es5-ext/#minsafe_integer-es5-extnumbermin-safe-integer_","title":"MINSAFE_INTEGER (es5-ext/number/min-safe-integer)_","text":"<p>Introduced with ECMAScript 6. The value of Number.MIN_SAFE_INTEGER is -9007199254740991 (253-1).</p>"},{"location":"websocket/node_modules/es5-ext/#tointegerx-es5-extnumberto-integer","title":"toInteger(x) (es5-ext/number/to-integer)","text":"<p>Converts value to integer</p>"},{"location":"websocket/node_modules/es5-ext/#toposintegerx-es5-extnumberto-pos-integer","title":"toPosInteger(x) (es5-ext/number/to-pos-integer)","text":"<p>Converts value to positive integer. If provided value is less than 0, then 0 is returned</p>"},{"location":"websocket/node_modules/es5-ext/#touint32x-es5-extnumberto-uint32","title":"toUint32(x) (es5-ext/number/to-uint32)","text":"<p>Converts value to unsigned 32 bit integer. This type is used for array lengths. See: http://www.2ality.com/2012/02/js-integers.html</p>"},{"location":"websocket/node_modules/es5-ext/#number-prototype-extensions","title":"Number Prototype extensions","text":""},{"location":"websocket/node_modules/es5-ext/#numpadlength-precision-es5-extnumberpad","title":"num.pad(length[, precision]) (es5-ext/number/#/pad)","text":"<p>Pad given number with zeros. Returns string</p>"},{"location":"websocket/node_modules/es5-ext/#object-constructor-extensions","title":"Object Constructor extensions","text":""},{"location":"websocket/node_modules/es5-ext/#assigntarget-source-sourcen-es5-extobjectassign","title":"assign(target, source[, \u2026sourcen]) (es5-ext/object/assign)","text":"<p>Introduced with ECMAScript 6. Extend target by enumerable own properties of other objects. If properties are already set on target object, they will be overwritten.</p>"},{"location":"websocket/node_modules/es5-ext/#clearobj-es5-extobjectclear","title":"clear(obj) (es5-ext/object/clear)","text":"<p>Remove all enumerable own properties of the object</p>"},{"location":"websocket/node_modules/es5-ext/#compactobj-es5-extobjectcompact","title":"compact(obj) (es5-ext/object/compact)","text":"<p>Returns copy of the object with all enumerable properties that have no falsy values</p>"},{"location":"websocket/node_modules/es5-ext/#compareobj1-obj2-es5-extobjectcompare","title":"compare(obj1, obj2) (es5-ext/object/compare)","text":"<p>Universal cross-type compare function. To be used for e.g. array sort.</p>"},{"location":"websocket/node_modules/es5-ext/#copyobj-es5-extobjectcopy","title":"copy(obj) (es5-ext/object/copy)","text":"<p>Returns copy of the object with all enumerable properties.</p>"},{"location":"websocket/node_modules/es5-ext/#copydeepobj-es5-extobjectcopy-deep","title":"copyDeep(obj) (es5-ext/object/copy-deep)","text":"<p>Returns deep copy of the object with all enumerable properties.</p>"},{"location":"websocket/node_modules/es5-ext/#countobj-es5-extobjectcount","title":"count(obj) (es5-ext/object/count)","text":"<p>Counts number of enumerable own properties on object</p>"},{"location":"websocket/node_modules/es5-ext/#createobj-properties-es5-extobjectcreate","title":"create(obj[, properties]) (es5-ext/object/create)","text":"<p><code>Object.create</code> alternative that provides workaround for V8 issue.</p> <p>When <code>null</code> is provided as a prototype, it's substituted with specially prepared object that derives from Object.prototype but has all Object.prototype properties shadowed with undefined.</p> <p>It's quirky solution that allows us to have plain objects with no truthy properties but with turnable prototype.</p> <p>Use only for objects that you plan to switch prototypes of and be aware of limitations of this workaround.</p>"},{"location":"websocket/node_modules/es5-ext/#eqx-y-es5-extobjecteq","title":"eq(x, y) (es5-ext/object/eq)","text":"<p>Whether two values are equal, using SameValueZero algorithm.</p>"},{"location":"websocket/node_modules/es5-ext/#everyobj-cb-thisarg-comparefn-es5-extobjectevery","title":"every(obj, cb[, thisArg[, compareFn]]) (es5-ext/object/every)","text":"<p>Analogous to Array.prototype.every. Returns true if every key-value pair in this object satisfies the provided testing function. Optionally compareFn can be provided which assures that keys are tested in given order. If provided compareFn is equal to <code>true</code>, then order is alphabetical (by key).</p>"},{"location":"websocket/node_modules/es5-ext/#filterobj-cb-thisarg-es5-extobjectfilter","title":"filter(obj, cb[, thisArg]) (es5-ext/object/filter)","text":"<p>Analogous to Array.prototype.filter. Returns new object with properites for which cb function returned truthy value.</p>"},{"location":"websocket/node_modules/es5-ext/#firstkeyobj-es5-extobjectfirst-key","title":"firstKey(obj) (es5-ext/object/first-key)","text":"<p>Returns first enumerable key of the object, as keys are unordered by specification, it can be any key of an object.</p>"},{"location":"websocket/node_modules/es5-ext/#flattenobj-es5-extobjectflatten","title":"flatten(obj) (es5-ext/object/flatten)","text":"<p>Returns new object, with flatten properties of input object</p> <p>flatten({ a: { b: 1 }, c: { d: 1 } }) =def { b: 1, d: 1 }</p>"},{"location":"websocket/node_modules/es5-ext/#foreachobj-cb-thisarg-comparefn-es5-extobjectfor-each","title":"forEach(obj, cb[, thisArg[, compareFn]]) (es5-ext/object/for-each)","text":"<p>Analogous to Array.prototype.forEach. Calls a function for each key-value pair found in object Optionally compareFn can be provided which assures that properties are iterated in given order. If provided compareFn is equal to <code>true</code>, then order is alphabetical (by key).</p>"},{"location":"websocket/node_modules/es5-ext/#getpropertynames-es5-extobjectget-property-names","title":"getPropertyNames() (es5-ext/object/get-property-names)","text":"<p>Get all (not just own) property names of the object</p>"},{"location":"websocket/node_modules/es5-ext/#isx-y-es5-extobjectis","title":"is(x, y) (es5-ext/object/is)","text":"<p>Whether two values are equal, using SameValue algorithm.</p>"},{"location":"websocket/node_modules/es5-ext/#isarraylikex-es5-extobjectis-array-like","title":"isArrayLike(x) (es5-ext/object/is-array-like)","text":"<p>Whether object is array-like object</p>"},{"location":"websocket/node_modules/es5-ext/#iscopyx-y-es5-extobjectis-copy","title":"isCopy(x, y) (es5-ext/object/is-copy)","text":"<p>Two values are considered a copy of same value when all of their own enumerable properties have same values.</p>"},{"location":"websocket/node_modules/es5-ext/#iscopydeepx-y-es5-extobjectis-copy-deep","title":"isCopyDeep(x, y) (es5-ext/object/is-copy-deep)","text":"<p>Deep comparision of objects</p>"},{"location":"websocket/node_modules/es5-ext/#isemptyobj-es5-extobjectis-empty","title":"isEmpty(obj) (es5-ext/object/is-empty)","text":"<p>True if object doesn't have any own enumerable property</p>"},{"location":"websocket/node_modules/es5-ext/#isobjectarg-es5-extobjectis-object","title":"isObject(arg) (es5-ext/object/is-object)","text":"<p>Whether value is not primitive</p>"},{"location":"websocket/node_modules/es5-ext/#isplainobjectarg-es5-extobjectis-plain-object","title":"isPlainObject(arg) (es5-ext/object/is-plain-object)","text":"<p>Whether object is plain object, its protototype should be Object.prototype and it cannot be host object.</p>"},{"location":"websocket/node_modules/es5-ext/#keyofobj-searchvalue-es5-extobjectkey-of","title":"keyOf(obj, searchValue) (es5-ext/object/key-of)","text":"<p>Search object for value</p>"},{"location":"websocket/node_modules/es5-ext/#keysobj-es5-extobjectkeys","title":"keys(obj) (es5-ext/object/keys)","text":"<p>Updated with ECMAScript 6. ES6's version of <code>keys</code>, doesn't throw on primitive input</p>"},{"location":"websocket/node_modules/es5-ext/#mapobj-cb-thisarg-es5-extobjectmap","title":"map(obj, cb[, thisArg]) (es5-ext/object/map)","text":"<p>Analogous to Array.prototype.map. Creates a new object with properties which values are results of calling a provided function on every key-value pair in this object.</p>"},{"location":"websocket/node_modules/es5-ext/#mapkeysobj-cb-thisarg-es5-extobjectmap-keys","title":"mapKeys(obj, cb[, thisArg]) (es5-ext/object/map-keys)","text":"<p>Create new object with same values, but remapped keys</p>"},{"location":"websocket/node_modules/es5-ext/#mixintarget-source-es5-extobjectmixin","title":"mixin(target, source) (es5-ext/object/mixin)","text":"<p>Extend target by all own properties of other objects. Properties found in both objects will be overwritten (unless they're not configurable and cannot be overwritten). It was for a moment part of ECMAScript 6 draft.</p>"},{"location":"websocket/node_modules/es5-ext/#mixinprototypestarget-source-es5-extobjectmixin-prototypes","title":"mixinPrototypes(target, \u2026source]) (es5-ext/object/mixin-prototypes)","text":"<p>Extends target, with all source and source's prototype properties. Useful as an alternative for <code>setPrototypeOf</code> in environments in which it cannot be shimmed (no <code>__proto__</code> support).</p>"},{"location":"websocket/node_modules/es5-ext/#normalizeoptionsoptions-es5-extobjectnormalize-options","title":"normalizeOptions(options) (es5-ext/object/normalize-options)","text":"<p>Normalizes options object into flat plain object.</p> <p>Useful for functions in which we either need to keep options object for future reference or need to modify it for internal use.</p> <ul> <li>It never returns input <code>options</code> object back (always a copy is created)</li> <li><code>options</code> can be undefined in such case empty plain object is returned.</li> <li>Copies all enumerable properties found down prototype chain.</li> </ul>"},{"location":"websocket/node_modules/es5-ext/#primitivesetnames-es5-extobjectprimitive-set","title":"primitiveSet([\u2026names]) (es5-ext/object/primitive-set)","text":"<p>Creates <code>null</code> prototype based plain object, and sets on it all property names provided in arguments to true.</p>"},{"location":"websocket/node_modules/es5-ext/#safetraverseobj-names-es5-extobjectsafe-traverse","title":"safeTraverse(obj[, \u2026names]) (es5-ext/object/safe-traverse)","text":"<p>Safe navigation of object properties. See http://wiki.ecmascript.org/doku.php?id=strawman:existential_operator</p>"},{"location":"websocket/node_modules/es5-ext/#serializevalue-es5-extobjectserialize","title":"serialize(value) (es5-ext/object/serialize)","text":"<p>Serialize value into string. Differs from JSON.stringify that it serializes also dates, functions and regular expresssions.</p>"},{"location":"websocket/node_modules/es5-ext/#setprototypeofobject-proto-es5-extobjectset-prototype-of","title":"setPrototypeOf(object, proto) (es5-ext/object/set-prototype-of)","text":"<p>Introduced with ECMAScript 6. If native version is not provided, it depends on existence of <code>__proto__</code> functionality, if it's missing, <code>null</code> instead of function is exposed.</p>"},{"location":"websocket/node_modules/es5-ext/#someobj-cb-thisarg-comparefn-es5-extobjectsome","title":"some(obj, cb[, thisArg[, compareFn]]) (es5-ext/object/some)","text":"<p>Analogous to Array.prototype.some Returns true if any key-value pair satisfies the provided testing function. Optionally compareFn can be provided which assures that keys are tested in given order. If provided compareFn is equal to <code>true</code>, then order is alphabetical (by key).</p>"},{"location":"websocket/node_modules/es5-ext/#toarrayobj-cb-thisarg-comparefn-es5-extobjectto-array","title":"toArray(obj[, cb[, thisArg[, compareFn]]]) (es5-ext/object/to-array)","text":"<p>Creates an array of results of calling a provided function on every key-value pair in this object. Optionally compareFn can be provided which assures that results are added in given order. If provided compareFn is equal to <code>true</code>, then order is alphabetical (by key).</p>"},{"location":"websocket/node_modules/es5-ext/#unserializestr-es5-extobjectunserialize","title":"unserialize(str) (es5-ext/object/unserialize)","text":"<p>Userializes value previously serialized with serialize</p>"},{"location":"websocket/node_modules/es5-ext/#validcallablex-es5-extobjectvalid-callable","title":"validCallable(x) (es5-ext/object/valid-callable)","text":"<p>If given object is not callable throw TypeError in other case return it.</p>"},{"location":"websocket/node_modules/es5-ext/#validobjectx-es5-extobjectvalid-object","title":"validObject(x) (es5-ext/object/valid-object)","text":"<p>Throws error if given value is not an object, otherwise it is returned.</p>"},{"location":"websocket/node_modules/es5-ext/#validvaluex-es5-extobjectvalid-value","title":"validValue(x) (es5-ext/object/valid-value)","text":"<p>Throws error if given value is <code>null</code> or <code>undefined</code>, otherwise returns value.</p>"},{"location":"websocket/node_modules/es5-ext/#promise-prototype-extensions","title":"Promise Prototype extensions","text":""},{"location":"websocket/node_modules/es5-ext/#promisefinallyonfinally-es5-extpromisefinally","title":"promise.finally(onFinally) (es5-ext/promise/#/finally)","text":"<p>Introduced with ECMAScript 2018.</p>"},{"location":"websocket/node_modules/es5-ext/#regexp-constructor-extensions","title":"RegExp Constructor extensions","text":""},{"location":"websocket/node_modules/es5-ext/#escapestr-es5-extreg-expescape","title":"escape(str) (es5-ext/reg-exp/escape)","text":"<p>Escapes string to be used in regular expression</p>"},{"location":"websocket/node_modules/es5-ext/#isregexpx-es5-extreg-expis-reg-exp","title":"isRegExp(x) (es5-ext/reg-exp/is-reg-exp)","text":"<p>Whether object is regular expression</p>"},{"location":"websocket/node_modules/es5-ext/#validregexpx-es5-extreg-expvalid-reg-exp","title":"validRegExp(x) (es5-ext/reg-exp/valid-reg-exp)","text":"<p>If object is regular expression it is returned, otherwise TypeError is thrown.</p>"},{"location":"websocket/node_modules/es5-ext/#regexp-prototype-extensions","title":"RegExp Prototype extensions","text":""},{"location":"websocket/node_modules/es5-ext/#reisstickyx-es5-extreg-expis-sticky","title":"re.isSticky(x) (es5-ext/reg-exp/#/is-sticky)","text":"<p>Whether regular expression has <code>sticky</code> flag.</p> <p>It's to be used as counterpart to regExp.sticky if it's not implemented.</p>"},{"location":"websocket/node_modules/es5-ext/#reisunicodex-es5-extreg-expis-unicode","title":"re.isUnicode(x) (es5-ext/reg-exp/#/is-unicode)","text":"<p>Whether regular expression has <code>unicode</code> flag.</p> <p>It's to be used as counterpart to regExp.unicode if it's not implemented.</p>"},{"location":"websocket/node_modules/es5-ext/#rematchstring-es5-extreg-expmatch","title":"re.match(string) (es5-ext/reg-exp/#/match)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#rereplacestring-replacevalue-es5-extreg-expreplace","title":"re.replace(string, replaceValue) (es5-ext/reg-exp/#/replace)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#researchstring-es5-extreg-expsearch","title":"re.search(string) (es5-ext/reg-exp/#/search)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#resplitstring-es5-extreg-expsearch","title":"re.split(string) (es5-ext/reg-exp/#/search)","text":"<p>Introduced with ECMAScript 6.</p>"},{"location":"websocket/node_modules/es5-ext/#resticky-es5-extreg-expstickyimplement","title":"re.sticky (es5-ext/reg-exp/#/sticky/implement)","text":"<p>Introduced with ECMAScript 6. It's a getter, so only <code>implement</code> and <code>is-implemented</code> modules are provided.</p>"},{"location":"websocket/node_modules/es5-ext/#reunicode-es5-extreg-expunicodeimplement","title":"re.unicode (es5-ext/reg-exp/#/unicode/implement)","text":"<p>Introduced with ECMAScript 6. It's a getter, so only <code>implement</code> and <code>is-implemented</code> modules are provided.</p>"},{"location":"websocket/node_modules/es5-ext/#string-constructor-extensions","title":"String Constructor extensions","text":""},{"location":"websocket/node_modules/es5-ext/#formatmethodfmap-es5-extstringformat-method","title":"formatMethod(fMap) (es5-ext/string/format-method)","text":"<p>Creates format method. It's used e.g. to create <code>Date.prototype.format</code> method</p>"},{"location":"websocket/node_modules/es5-ext/#fromcodepointcodepoints-es5-extstringfrom-code-point","title":"fromCodePoint([\u2026codePoints]) (es5-ext/string/from-code-point)","text":"<p>Introduced with ECMAScript 6</p>"},{"location":"websocket/node_modules/es5-ext/#isstringx-es5-extstringis-string","title":"isString(x) (es5-ext/string/is-string)","text":"<p>Whether object is string</p>"},{"location":"websocket/node_modules/es5-ext/#randomuniq-es5-extstringrandom-uniq","title":"randomUniq() (es5-ext/string/random-uniq)","text":"<p>Returns randomly generated id, with guarantee of local uniqueness (no same id will be returned twice)</p>"},{"location":"websocket/node_modules/es5-ext/#rawcallsite-substitutions-es5-extstringraw","title":"raw(callSite[, \u2026substitutions]) (es5-ext/string/raw)","text":"<p>Introduced with ECMAScript 6</p>"},{"location":"websocket/node_modules/es5-ext/#string-prototype-extensions","title":"String Prototype extensions","text":""},{"location":"websocket/node_modules/es5-ext/#stratpos-es5-extstringat","title":"str.at(pos) (es5-ext/string/#/at)","text":"<p>Proposed for ECMAScript 6/7 standard, but not (yet) in a draft</p> <p>Returns a string at given position in Unicode-safe manner. Based on implementation by Mathias Bynens.</p>"},{"location":"websocket/node_modules/es5-ext/#strcameltohyphen-es5-extstringcamel-to-hyphen","title":"str.camelToHyphen() (es5-ext/string/#/camel-to-hyphen)","text":"<p>Convert camelCase string to hyphen separated, e.g. one-two-three -&gt; oneTwoThree. Useful when converting names from js property convention into filename convention.</p>"},{"location":"websocket/node_modules/es5-ext/#strcapitalize-es5-extstringcapitalize","title":"str.capitalize() (es5-ext/string/#/capitalize)","text":"<p>Capitalize first character of a string</p>"},{"location":"websocket/node_modules/es5-ext/#strcaseinsensitivecomparestr-es5-extstringcase-insensitive-compare","title":"str.caseInsensitiveCompare(str) (es5-ext/string/#/case-insensitive-compare)","text":"<p>Case insensitive compare</p>"},{"location":"websocket/node_modules/es5-ext/#strcodepointatpos-es5-extstringcode-point-at","title":"str.codePointAt(pos) (es5-ext/string/#/code-point-at)","text":"<p>Introduced with ECMAScript 6</p> <p>Based on implementation by Mathias Bynens.</p>"},{"location":"websocket/node_modules/es5-ext/#strcontainssearchstring-position-es5-extstringcontains","title":"str.contains(searchString[, position]) (es5-ext/string/#/contains)","text":"<p>Introduced with ECMAScript 6</p> <p>Whether string contains given string.</p>"},{"location":"websocket/node_modules/es5-ext/#strendswithsearchstring-endposition-es5-extstringends-with","title":"str.endsWith(searchString[, endPosition]) (es5-ext/string/#/ends-with)","text":"<p>Introduced with ECMAScript 6. Whether strings ends with given string</p>"},{"location":"websocket/node_modules/es5-ext/#strhyphentocamel-es5-extstringhyphen-to-camel","title":"str.hyphenToCamel() (es5-ext/string/#/hyphen-to-camel)","text":"<p>Convert hyphen separated string to camelCase, e.g. one-two-three -&gt; oneTwoThree. Useful when converting names from filename convention to js property name convention.</p>"},{"location":"websocket/node_modules/es5-ext/#strindentstr-count-es5-extstringindent","title":"str.indent(str[, count]) (es5-ext/string/#/indent)","text":"<p>Indents each line with provided str (if count given then str is repeated count times).</p>"},{"location":"websocket/node_modules/es5-ext/#strlast-es5-extstringlast","title":"str.last() (es5-ext/string/#/last)","text":"<p>Return last character</p>"},{"location":"websocket/node_modules/es5-ext/#strnormalizeform-es5-extstringnormalize","title":"str.normalize([form]) (es5-ext/string/#/normalize)","text":"<p>Introduced with ECMAScript 6. Returns the Unicode Normalization Form of a given string. Based on Matsuza's version. Code used for integrated shim can be found at github.com/walling/unorm</p>"},{"location":"websocket/node_modules/es5-ext/#strpadfill-length-es5-extstringpad","title":"str.pad(fill[, length]) (es5-ext/string/#/pad)","text":"<p>Pad string with fill. If length si given than fill is reapated length times. If length is negative then pad is applied from right.</p>"},{"location":"websocket/node_modules/es5-ext/#strrepeatn-es5-extstringrepeat","title":"str.repeat(n) (es5-ext/string/#/repeat)","text":"<p>Introduced with ECMAScript 6. Repeat given string n times</p>"},{"location":"websocket/node_modules/es5-ext/#strplainreplacesearch-replace-es5-extstringplain-replace","title":"str.plainReplace(search, replace) (es5-ext/string/#/plain-replace)","text":"<p>Simple <code>replace</code> version. Doesn't support regular expressions. Replaces just first occurrence of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional \\$ characters escape in such case).</p>"},{"location":"websocket/node_modules/es5-ext/#strplainreplaceallsearch-replace-es5-extstringplain-replace-all","title":"str.plainReplaceAll(search, replace) (es5-ext/string/#/plain-replace-all)","text":"<p>Simple <code>replace</code> version. Doesn't support regular expressions. Replaces all occurrences of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional \\$ characters escape in such case).</p>"},{"location":"websocket/node_modules/es5-ext/#strstartswithsearchstring-position-es5-extstringstarts-with","title":"str.startsWith(searchString[, position]) (es5-ext/string/#/starts-with)","text":"<p>Introduced with ECMAScript 6. Whether strings starts with given string</p>"},{"location":"websocket/node_modules/es5-ext/#striterator-es5-extstringiterator","title":"str[@@iterator] (es5-ext/string/#/@@iterator)","text":"<p>Introduced with ECMAScript 6. Returns iterator object which traverses all string characters (with respect to unicode symbols)</p>"},{"location":"websocket/node_modules/es5-ext/#tests","title":"Tests","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"websocket/node_modules/es5-ext/#security-contact-information","title":"Security contact information","text":"<p>To report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure.</p>"},{"location":"websocket/node_modules/es5-ext/#es5-ext-for-enterprise","title":"es5-ext for enterprise","text":"<p>Available as part of the Tidelift Subscription</p> <p>The maintainers of es5-ext and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.</p>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file. See standard-version for commit guidelines.</p>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01064-2024-02-27","title":"0.10.64 (2024-02-27)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Revert update to postinstall script meant to fix Powershell issue, as it's a regression for some Linux terminals (c2e2bb9)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01063-2024-02-23","title":"0.10.63 (2024-02-23)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>Do not rely on problematic regex (3551cdd), addresses #201</li> <li>Support ES2015+ function definitions in <code>function#toStringTokens()</code> (a52e957), addresses #021</li> <li>Ensure postinstall script does not crash on Windows, fixes #181 (bf8ed79)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#maintenance-improvements","title":"Maintenance Improvements","text":"<ul> <li>Simplify the manifest message (7855319)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01062-2022-08-02","title":"0.10.62 (2022-08-02)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#maintenance-improvements_1","title":"Maintenance Improvements","text":"<ul> <li>Manifest improvements:</li> <li>(#190) (b8dc53f)</li> <li>(c51d552)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01061-2022-04-20","title":"0.10.61 (2022-04-20)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>Ensure postinstall script does not error (a0be4fd)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#maintenance-improvements_2","title":"Maintenance Improvements","text":"<ul> <li>Bump dependencies (d7e0a61)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01060-2022-04-07","title":"0.10.60 (2022-04-07)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#maintenance-improvements_3","title":"Maintenance Improvements","text":"<ul> <li>Improve <code>postinstall</code> script configuration (ab6b121)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01059-2022-03-17","title":"0.10.59 (2022-03-17)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#maintenance-improvements_4","title":"Maintenance Improvements","text":"<ul> <li>Improve manifest wording (#122) (eb7ae59)</li> <li>Update data in manifest (3d2935a)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01058-2022-03-11","title":"0.10.58 (2022-03-11)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#maintenance-improvements_5","title":"Maintenance Improvements","text":"<ul> <li>Improve \"call for peace\" manifest (3beace4)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01057-2022-03-08","title":"0.10.57 (2022-03-08)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>Workaround <code>postinstall</code> script prevent npx error (#110) (e212d5a) (martindrq)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01056-2022-03-07","title":"0.10.56 (2022-03-07)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#maintenance-improvements_6","title":"Maintenance Improvements","text":"<ul> <li>Add missing shebang to postinstall script (e423fd7)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01055-2022-03-07","title":"0.10.55 (2022-03-07)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#maintenance-improvements_7","title":"Maintenance Improvements","text":"<ul> <li>Configure <code>.npmignore</code> file (exclude tests from publication) (d3ed4b6)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01054-2022-03-07","title":"0.10.54 (2022-03-07)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#maintenance-improvements_8","title":"Maintenance Improvements","text":"<ul> <li>Convert dependency ranges (765eb8e)</li> <li>Give Peace a Chance (28de285)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01053-2019-11-21","title":"0.10.53 (2019-11-21)","text":"<p>Maintenance improvements</p>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01052-2019-10-29","title":"0.10.52 (2019-10-29)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li>Fix global resolution for Safari (00731d2)</li> <li>Keep support for old Node.js versions (2fa2a11)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01051-2019-08-30","title":"0.10.51 (2019-08-30)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_5","title":"Bug Fixes","text":"<ul> <li>Ensure Function.isFunction recognizes async functions (6f06e66)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#tests","title":"Tests","text":"<ul> <li>Fix after prettification changes (dd6fc3f)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01050-2019-04-30","title":"0.10.50 (2019-04-30)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_6","title":"Bug Fixes","text":"<ul> <li>maximum time value reference (708202d)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features","title":"Features","text":"<ul> <li>ensure global resolves in strict mode (c6a19d7), closes #86</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01049-2019-03-11","title":"0.10.49 (2019-03-11)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_1","title":"Features","text":"<ul> <li>allow plain function usage of fn.compose (2bafef7)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01048-2019-02-22","title":"0.10.48 (2019-02-22)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_2","title":"Features","text":"<ul> <li>Object.ensurePlainObject util (f48fbcf)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01047-2019-01-16","title":"0.10.47 (2019-01-16)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_3","title":"Features","text":"<ul> <li>Promise.prototype.finally shim (4dadbc7)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01046-2018-08-13","title":"0.10.46 (2018-08-13)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_7","title":"Bug Fixes","text":"<ul> <li>assign-deep to not modify following arguments (bf43d57)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01045-2018-06-01","title":"0.10.45 (2018-06-01)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_8","title":"Bug Fixes","text":"<ul> <li>improve error message readbility (adc91b9)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01044-2018-05-30","title":"0.10.44 (2018-05-30)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_4","title":"Features","text":"<ul> <li>add Object.entries (51d2f43)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01043-2018-05-28","title":"0.10.43 (2018-05-28)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_5","title":"Features","text":"<ul> <li>improve patch string (6a25b10)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01042-2018-03-28","title":"0.10.42 (2018-03-28)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_9","title":"Bug Fixes","text":"<ul> <li>Date.isDate to exclude NaN dates (3b61bc6)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_6","title":"Features","text":"<ul> <li>improve non-coercible string representation (20bfb78)</li> <li>improve non-stringifiable string representation (2e4512d)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01041-2018-03-16","title":"0.10.41 (2018-03-16)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_7","title":"Features","text":"<ul> <li>Add function.microtaskDelay method (66481c0)</li> <li>Add Object.isThenable (8d5a45c)</li> <li>Add promise.asCallback method (dcc1451)</li> <li>Object.ensurePlainFunction (2682be6)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01040-2018-03-09","title":"0.10.40 (2018-03-09)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_8","title":"Features","text":"<ul> <li>math: decimal round, floor and ceil (39290c6)</li> <li>object: isInteger and ensureInteger (a5f7d04)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01039-2018-02-16","title":"0.10.39 (2018-02-16)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_9","title":"Features","text":"<ul> <li>Promise.lazy (7a30a78)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01038-2018-01-16","title":"0.10.38 (2018-01-16)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_10","title":"Features","text":"<ul> <li>Object.isNaturalNumber an Object.isNaturalNumberValue (66a40af)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01037-2017-11-23","title":"0.10.37 (2017-11-23)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_11","title":"Features","text":"<ul> <li>String.random util (7c28739)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01036-2017-11-23","title":"0.10.36 (2017-11-23)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_12","title":"Features","text":"<ul> <li>date: isTimeValue and ensureTimeValue utils (7659dc5)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01035-2017-10-13","title":"0.10.35 (2017-10-13)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_10","title":"Bug Fixes","text":"<ul> <li>Object.copy: do not upgrade primitives to objects (dd4d88f)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01034-2017-10-13","title":"0.10.34 (2017-10-13)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_13","title":"Features","text":"<ul> <li>copyDeep: duplicate only recursive instances (bba529a)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01033-2017-10-13","title":"0.10.33 (2017-10-13)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_11","title":"Bug Fixes","text":"<ul> <li>Object.assignDeep: relax input validation (1baf57d)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01032-2017-10-13","title":"0.10.32 (2017-10-13)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_14","title":"Features","text":"<ul> <li>Object.assignDeep (2345e0b)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01031-2017-10-09","title":"0.10.31 (2017-10-09)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_15","title":"Features","text":"<ul> <li>Object.isPlainFunction utility (031be0a)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01030-2017-08-25","title":"0.10.30 (2017-08-25)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_12","title":"Bug Fixes","text":"<ul> <li>value stringification for error message (37bb96b)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01029-2017-08-18","title":"0.10.29 (2017-08-18)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_13","title":"Bug Fixes","text":"<ul> <li>string.repeat after recent regression (b02fab4)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01028-2017-08-18","title":"0.10.28 (2017-08-18)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_16","title":"Features","text":"<ul> <li>array.isEmpty method (b0cfbdd)</li> <li>improve new lines representation (860fe8b)</li> <li>Object.ensureArray util (595c341)</li> <li>toShortStringRepresentation util (6842d06)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01027-2017-08-11","title":"0.10.27 (2017-08-11)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_14","title":"Bug Fixes","text":"<ul> <li>isNumberValue should not crash on non-coercible values (0db765e)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_17","title":"Features","text":"<ul> <li>add Object.ensureFiniteNumber util (11c67f5)</li> <li>add Object.isFiniteNumber util (fe5b55a)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01026-2017-08-02","title":"0.10.26 (2017-08-02)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_15","title":"Bug Fixes","text":"<ul> <li>general: ensure optionalChaining in index (3df879a)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01025-2017-08-02","title":"0.10.25 (2017-08-02)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_18","title":"Features","text":"<ul> <li>general: optionalChaining utility (26332b5)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01024-2017-07-10","title":"0.10.24 (2017-07-10)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_19","title":"Features","text":"<ul> <li>resolve global with CSP safe method (d386449)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01023-2017-06-05","title":"0.10.23 (2017-06-05)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_16","title":"Bug Fixes","text":"<ul> <li>Error.custom: allow non-string code (e8db3a0)</li> <li>Error.custom: improve <code>ext</code> argument detection (0edbfbc)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01022-2017-05-31","title":"0.10.22 (2017-05-31)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_17","title":"Bug Fixes","text":"<ul> <li>ensure proper symbols stringification in early implementations (ce51900)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01021-2017-05-22","title":"0.10.21 (2017-05-22)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_20","title":"Features","text":"<ul> <li>support arrow functions in Function/#/to-tring-tokens.js (ad3de1e)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01020-2017-05-17","title":"0.10.20 (2017-05-17)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_21","title":"Features","text":"<ul> <li>if listed copy not only if own property (d7e7cef)</li> <li>support <code>ensure</code> option in Object.copy (295326f)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01019-2017-05-17","title":"0.10.19 (2017-05-17)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_22","title":"Features","text":"<ul> <li>support propertyNames option in Object.copy (5442279)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01018-2017-05-15","title":"0.10.18 (2017-05-15)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#bug-fixes_18","title":"Bug Fixes","text":"<ul> <li>take all changes in safeToString (3c5cd12)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01017-2017-05-15","title":"0.10.17 (2017-05-15)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_23","title":"Features","text":"<ul> <li>introduce Object.ensurePromise (46a2f45)</li> <li>introduce Object.isPromise (27aecc8)</li> <li>introduce safeToString (0cc6a7b)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#01016-2017-05-09","title":"0.10.16 (2017-05-09)","text":""},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#features_24","title":"Features","text":"<ul> <li>add String.prototype.count (2e53241)</li> </ul>"},{"location":"websocket/node_modules/es5-ext/CHANGELOG/#changelog-for-previous-versions","title":"Changelog for previous versions","text":"<p>See <code>CHANGES</code> file</p>"},{"location":"websocket/node_modules/es6-iterator/","title":"es6-iterator","text":""},{"location":"websocket/node_modules/es6-iterator/#ecmascript-6-iterator-interface","title":"ECMAScript 6 Iterator interface","text":""},{"location":"websocket/node_modules/es6-iterator/#installation","title":"Installation","text":"<pre><code>$ npm install es6-iterator\n</code></pre> <p>To port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: Browserify, Webmake or Webpack</p>"},{"location":"websocket/node_modules/es6-iterator/#api","title":"API","text":""},{"location":"websocket/node_modules/es6-iterator/#constructors","title":"Constructors","text":""},{"location":"websocket/node_modules/es6-iterator/#iteratorlist-es6-iterator","title":"Iterator(list) (es6-iterator)","text":"<p>Abstract Iterator interface. Meant for extensions and not to be used on its own.</p> <p>Accepts any list object (technically object with numeric length property).</p> <p>Mind it doesn't iterate strings properly, for that use dedicated StringIterator</p> <pre><code>var Iterator = require('es6-iterator')\nvar iterator = new Iterator([1, 2, 3]);\n\niterator.next(); // { value: 1, done: false }\niterator.next(); // { value: 2, done: false }\niterator.next(); // { value: 3, done: false }\niterator.next(); // { value: undefined, done: true }\n</code></pre>"},{"location":"websocket/node_modules/es6-iterator/#arrayiteratorarraylike-kind-es6-iteratorarray","title":"ArrayIterator(arrayLike[, kind]) (es6-iterator/array)","text":"<p>Dedicated for arrays and array-likes. Supports three iteration kinds: * value (default) - Iterates values * key - Iterates indexes * key+value - Iterates keys and indexes, each iteration value is in [key, value] form.</p> <pre><code>var ArrayIterator = require('es6-iterator/array')\nvar iterator = new ArrayIterator([1, 2, 3], 'key+value');\n\niterator.next(); // { value: [0, 1], done: false }\niterator.next(); // { value: [1, 2], done: false }\niterator.next(); // { value: [2, 3], done: false }\niterator.next(); // { value: undefined, done: true }\n</code></pre> <p>May also be used for arguments objects:</p> <pre><code>(function () {\n  var iterator = new ArrayIterator(arguments);\n\n  iterator.next(); // { value: 1, done: false }\n  iterator.next(); // { value: 2, done: false }\n  iterator.next(); // { value: 3, done: false }\n  iterator.next(); // { value: undefined, done: true }\n}(1, 2, 3));\n</code></pre>"},{"location":"websocket/node_modules/es6-iterator/#stringiteratorstr-es6-iteratorstring","title":"StringIterator(str) (es6-iterator/string)","text":"<p>Assures proper iteration over unicode symbols. See: http://mathiasbynens.be/notes/javascript-unicode</p> <pre><code>var StringIterator = require('es6-iterator/string');\nvar iterator = new StringIterator('f\ud83d\ude48o\ud83d\ude49o\ud83d\ude4a');\n\niterator.next(); // { value: 'f', done: false }\niterator.next(); // { value: '\ud83d\ude48', done: false }\niterator.next(); // { value: 'o', done: false }\niterator.next(); // { value: '\ud83d\ude49', done: false }\niterator.next(); // { value: 'o', done: false }\niterator.next(); // { value: '\ud83d\ude4a', done: false }\niterator.next(); // { value: undefined, done: true }\n</code></pre>"},{"location":"websocket/node_modules/es6-iterator/#function-utilities","title":"Function utilities","text":""},{"location":"websocket/node_modules/es6-iterator/#forofiterable-callback-thisarg-es6-iteratorfor-of","title":"forOf(iterable, callback[, thisArg]) (es6-iterator/for-of)","text":"<p>Polyfill for ECMAScript 6 <code>for...of</code> statement.</p> <pre><code>var forOf = require('es6-iterator/for-of');\nvar result = [];\n\nforOf('\ud83d\ude48\ud83d\ude49\ud83d\ude4a', function (monkey) { result.push(monkey); });\nconsole.log(result); // ['\ud83d\ude48', '\ud83d\ude49', '\ud83d\ude4a'];\n</code></pre> <p>Optionally you can break iteration at any point:</p> <pre><code>var result = [];\n\nforOf([1,2,3,4]', function (val, doBreak) {\n  result.push(monkey);\n  if (val &gt;= 3) doBreak();\n});\nconsole.log(result); // [1, 2, 3];\n</code></pre>"},{"location":"websocket/node_modules/es6-iterator/#getobj-es6-iteratorget","title":"get(obj) (es6-iterator/get)","text":"<p>Return iterator for any iterable object.</p> <pre><code>var getIterator = require('es6-iterator/get');\nvar iterator = get([1,2,3]);\n\niterator.next(); // { value: 1, done: false }\niterator.next(); // { value: 2, done: false }\niterator.next(); // { value: 3, done: false }\niterator.next(); // { value: undefined, done: true }\n</code></pre>"},{"location":"websocket/node_modules/es6-iterator/#isiterableobj-es6-iteratoris-iterable","title":"isIterable(obj) (es6-iterator/is-iterable)","text":"<p>Whether obj is iterable</p> <pre><code>var isIterable = require('es6-iterator/is-iterable');\n\nisIterable(null); // false\nisIterable(true); // false\nisIterable('str'); // true\nisIterable(['a', 'r', 'r']); // true\nisIterable(new ArrayIterator([])); // true\n</code></pre>"},{"location":"websocket/node_modules/es6-iterator/#validiterableobj-es6-iteratorvalid-iterable","title":"validIterable(obj) (es6-iterator/valid-iterable)","text":"<p>If obj is an iterable it is returned. Otherwise TypeError is thrown.</p>"},{"location":"websocket/node_modules/es6-iterator/#method-extensions","title":"Method extensions","text":""},{"location":"websocket/node_modules/es6-iterator/#iteratorchainiterator1-iteratorn-es6-iteratorchain","title":"iterator.chain(iterator1[, \u2026iteratorn]) (es6-iterator/#/chain)","text":"<p>Chain multiple iterators into one.</p>"},{"location":"websocket/node_modules/es6-iterator/#tests","title":"Tests","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"websocket/node_modules/es6-iterator/CHANGELOG/","title":"Change Log","text":"<p>All notable changes to this project will be documented in this file. See standard-version for commit guidelines.</p> <p></p>"},{"location":"websocket/node_modules/es6-iterator/CHANGELOG/#203-2017-10-17","title":"2.0.3 (2017-10-17)","text":""},{"location":"websocket/node_modules/es6-iterator/CHANGELOG/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>configurability of toStringTag (b99f692)</li> </ul>"},{"location":"websocket/node_modules/es6-iterator/CHANGELOG/#202-2017-10-17","title":"2.0.2 (2017-10-17)","text":""},{"location":"websocket/node_modules/es6-iterator/CHANGELOG/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>constructor exposure (dbc0c51)</li> <li>do not allow non constructor calls (1f2f800)</li> <li>toString and toStringTag symbol definitions. (2d17786), closes #6</li> </ul>"},{"location":"websocket/node_modules/es6-iterator/CHANGELOG/#changelog-for-previous-versions","title":"Changelog for previous versions","text":"<p>See <code>CHANGES</code> file</p>"},{"location":"websocket/node_modules/es6-symbol/","title":"Index","text":""},{"location":"websocket/node_modules/es6-symbol/#es6-symbol","title":"es6-symbol","text":""},{"location":"websocket/node_modules/es6-symbol/#ecmascript-6-symbol-polyfill","title":"ECMAScript 6 Symbol polyfill","text":"<p>For more information about symbols see following links</p> <ul> <li>Symbols in ECMAScript 6 by Axel Rauschmayer</li> <li>MDN Documentation</li> <li>Specification</li> </ul>"},{"location":"websocket/node_modules/es6-symbol/#limitations","title":"Limitations","text":"<p>Underneath it uses real string property names which can easily be retrieved, however accidental collision with other property names is unlikely.</p>"},{"location":"websocket/node_modules/es6-symbol/#usage","title":"Usage","text":"<p>If you'd like to use native version when it exists and fallback to ponyfill if it doesn't, use es6-symbol as following:</p> <pre><code>var Symbol = require(\"es6-symbol\");\n</code></pre> <p>If you want to make sure your environment implements <code>Symbol</code> globally, do:</p> <pre><code>require(\"es6-symbol/implement\");\n</code></pre> <p>If you strictly want to use polyfill even if native <code>Symbol</code> exists (hard to find a good reason for that), do:</p> <pre><code>var Symbol = require(\"es6-symbol/polyfill\");\n</code></pre>"},{"location":"websocket/node_modules/es6-symbol/#api","title":"API","text":"<p>Best is to refer to specification. Still if you want quick look, follow examples:</p> <pre><code>var Symbol = require(\"es6-symbol\");\n\nvar symbol = Symbol(\"My custom symbol\");\nvar x = {};\n\nx[symbol] = \"foo\";\nconsole.log(x[symbol]);\n(\"foo\");\n\n// Detect iterable:\nvar iterator, result;\nif (possiblyIterable[Symbol.iterator]) {\n  iterator = possiblyIterable[Symbol.iterator]();\n  result = iterator.next();\n  while (!result.done) {\n    console.log(result.value);\n    result = iterator.next();\n  }\n}\n</code></pre>"},{"location":"websocket/node_modules/es6-symbol/#installation","title":"Installation","text":""},{"location":"websocket/node_modules/es6-symbol/#npm","title":"NPM","text":"<p>In your project path:</p> <pre><code>$ npm install es6-symbol\n</code></pre>"},{"location":"websocket/node_modules/es6-symbol/#browser","title":"Browser","text":"<p>To port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: Browserify, Webmake or Webpack</p>"},{"location":"websocket/node_modules/es6-symbol/#tests","title":"Tests","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"websocket/node_modules/es6-symbol/#security-contact-information","title":"Security contact information","text":"<p>To report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure.</p> Get professional support for d with a Tidelift subscription <sub>         Tidelift helps make open source sustainable for maintainers while giving companiesassurances about security, maintenance, and licensing for their dependencies.     </sub>"},{"location":"websocket/node_modules/es6-symbol/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file. See standard-version for commit guidelines.</p>"},{"location":"websocket/node_modules/es6-symbol/CHANGELOG/#314-2024-03-01","title":"3.1.4 (2024-03-01)","text":"<p>Maintenance Improvements</p>"},{"location":"websocket/node_modules/es6-symbol/CHANGELOG/#313-2019-10-29","title":"3.1.3 (2019-10-29)","text":"<p>Maintenance Improvements</p>"},{"location":"websocket/node_modules/es6-symbol/CHANGELOG/#312-2019-09-04","title":"3.1.2 (2019-09-04)","text":"<ul> <li>Access <code>Symbol</code> from a global object. Makes implementation more bulletproof, as it's safe against shadowing the <code>Symbol</code> variable e.g. in script scope, or as it's practiced by some bundlers as Webpack (thanks @cyborgx37)</li> <li>Switch license from MIT to ISC</li> <li>Switch linter to ESLint</li> <li>Configure Prettier</li> </ul>"},{"location":"websocket/node_modules/es6-symbol/CHANGELOG/#changelog-for-previous-versions","title":"Changelog for previous versions","text":"<p>See <code>CHANGES</code> file</p>"},{"location":"websocket/node_modules/esniff/","title":"Index","text":""},{"location":"websocket/node_modules/esniff/#esniff","title":"esniff","text":""},{"location":"websocket/node_modules/esniff/#low-footprint-javascript-source-code-parser","title":"Low footprint JavaScript source code parser","text":"<p>Low footprint, fast source code parser, which allows you to find all code fragment occurrences with respect to all syntax rules that cannot be handled with plain regular expression search.</p> <p>It aims at use cases where we don't need full AST tree, but instead we're interested in finding usages of given function, property etc. in syntactically valid code.</p>"},{"location":"websocket/node_modules/esniff/#installation","title":"Installation","text":""},{"location":"websocket/node_modules/esniff/#npm","title":"npm","text":"<pre><code>$ npm install esniff\n</code></pre>"},{"location":"websocket/node_modules/esniff/#usage","title":"Usage","text":"<p>Using main module you can configure sophisticated parser on your own. However, first, see preprared API utilities that may already address use cases you have.</p>"},{"location":"websocket/node_modules/esniff/#esniffcode-executor","title":"esniff(code, executor)","text":"<ul> <li><code>code</code> - Code to parse</li> <li><code>executor</code> - A function to be executed immediately by the constructor, It receives an <code>emitter</code> parameter.</li> </ul> <p><code>emitter</code> emits following events:</p> <ul> <li><code>trigger:&lt;char&gt;</code> - When char is a code character approached in code, that is not a whitespaces, is not in a middle of identificator, is not part of a comment, string, template string or regular expression.</li> </ul> <p>Emitter passes to listener and <code>accessor</code> object, which provides access to current parser state and allows to manipulate parsing process. <code>accessor</code> exposes following methods:</p> <ul> <li><code>skipCodePart(codePart)</code> - Skips forward through input codePart assuming parser index points start of given part. Returns true if given <code>codePart</code> was found and index and skipped</li> <li><code>skipIdentifier</code> - Skips approached identifier (can be function name or property name), returns <code>{ name, start, end }</code> meta object</li> <li><code>skipWhitespace</code> - Skips any whitespace and comments founds at current parsing index</li> <li><code>collectScope</code> - If at current index <code>(</code> character is found, it registers given paranthesis scope for registrations (it's content will be returned as one of the results after finished parsing)</li> <li><code>stop</code> - Stops parsing process</li> <li><code>index</code> - Returns currently parsed index</li> <li><code>previousToken</code> - Previous non-whitespace character</li> <li><code>scopeDepth</code> - Current scope depth</li> <li><code>shouldCollectComments</code> - Whether data about code comments should be collected in the result</li> </ul>"},{"location":"websocket/node_modules/esniff/#example","title":"Example","text":"<p>Parse all <code>require(..)</code> calls:</p> <pre><code>var esniff = require(\"esniff\");\n\nvar parseRequires = function (code) {\n  return esniff(code, function (emitter) {\n    emitter.on(\"trigger:r\", function (accessor) {\n      if (accessor.previousToken === \".\") return;\n      if (!accessor.skipCodePart(\"require\")) return;\n      accessor.skipWhitespace();\n      accessor.collectScope();\n    });\n  });\n};\n\nconsole.log(parseRequires(\"var x = require('foo/bar')\"));\n[{ type: \"scope\", point: 17, column: 17, line: 1, raw: \"'foo/bar'\" }];\n</code></pre>"},{"location":"websocket/node_modules/esniff/#predefined-utils-for-common-use-cases","title":"Predefined utils for common use cases","text":""},{"location":"websocket/node_modules/esniff/#accessedpropertiesobjname-esniffaccessed-properties","title":"accessedProperties(objName) (esniff/accessed-properties)","text":"<p>Returns function which allows us to find all accessed property names on given object name</p> <pre><code>var findProperties = require(\"esniff/accessed-properties\");\nvar findContextProperties = findProperties(\"this\");\n\nvar result = findContextProperties(\n  \"var foo = \\\"0\\\"; this.bar = foo; this.someMethod(); otherFunction()\"\n);\nconsole.log(result); // [ { name: 'bar', start: 20, end: 23 }, { name: 'someMethod', start: 36, end: 46 } ]\n</code></pre>"},{"location":"websocket/node_modules/esniff/#functionname-options-esnifffunction","title":"function(name[, options]) (esniff/function)","text":"<p>Returns function which allows us to find all occurrences of given function (or method) being invoked</p> <p>Through options we can restrict cases which we're after:</p> <ul> <li><code>asProperty</code> (default: <code>false</code>), on true will allow <code>x.name()</code> when we search for <code>name</code> calls</li> <li><code>asPlain</code> (default: <code>true</code>), on true it allows plain calls e.g. <code>name()</code> when we search for <code>name</code>. Should be set to <code>false</code> if we're strictly about method calls.</li> </ul> <p>Setting both <code>asProperty</code> and <code>asPlain</code> to false, will always produce empty result</p> <pre><code>var findRequires = require(\"esniff/function\")(\"require\");\n\nfindRequires(\"var x = require('foo/bar')\");\n// [{ point: 17, column: 17, line: 1, raw: '\\'foo/bar\\'' }]\n</code></pre>"},{"location":"websocket/node_modules/esniff/#resolveargumentscode-limit-esniffresolve-arguments","title":"resolveArguments(code[, limit]) (esniff/resolve-arguments)","text":"<p>Resolves expressions separated with commas, with additional <code>limit</code> you can specify after which number of arguments resolver should stop</p> <pre><code>var resolveArgs = require(\"esniff/resolve-arguments\");\n\nvar result = resolveArgs(\"'raz', 'dwa', ['raz', 'dwa'], 'trzy'\", 3);\n\nconsole.log(result); // ['\"raz\"', ' \"dwa\"', ' [\\'raz\\', \\'dwa\\']']\n</code></pre>"},{"location":"websocket/node_modules/esniff/#limitations","title":"Limitations","text":"<ul> <li>esniff assumes code that you pass is syntactically correct, it won't inform you about any syntax errors and may produce unexpected and nonsense results when such code is used.</li> <li>There's single case of syntactically correct code, which will make esniff produce incorrect results, it's division made directly on object literal (e.g. <code>x = { foo: 'bar' } / 14</code>, esniff in that case will assume that <code>/</code> starts regular expression). Still there's not known use case where such code may make any sense, and many popular JS source code parsers share very same vulnerability.</li> </ul>"},{"location":"websocket/node_modules/esniff/#tests","title":"Tests","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"websocket/node_modules/esniff/#security-contact-information","title":"Security contact information","text":"<p>To report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure.</p>"},{"location":"websocket/node_modules/esniff/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file. See standard-version for commit guidelines.</p>"},{"location":"websocket/node_modules/esniff/CHANGELOG/#201-2024-02-21","title":"2.0.1 (2024-02-21)","text":""},{"location":"websocket/node_modules/esniff/CHANGELOG/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Fix release of operator char trigger event (1309a18)</li> </ul>"},{"location":"websocket/node_modules/esniff/CHANGELOG/#200-2024-02-19","title":"2.0.0 (2024-02-19)","text":""},{"location":"websocket/node_modules/esniff/CHANGELOG/#breaking-changes","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>Main <code>esniff</code> interface changed from <code>code, trigger, callback</code> to <code>code, executor</code> where executor function is provided with emitter that provides access to internal parsing process</li> <li>Property and variable names resolution now respects ES2015+ language rules instead of ES5</li> <li>Utilties were moved:</li> <li><code>ensure-string-literal.js</code> -&gt; <code>utils/ensure-string-literal.js</code></li> <li><code>is-string-literal.js</code> -&gt; <code>utils/is-string-literal.js</code></li> <li><code>is-var-name-valid.js</code> -&gt; <code>utils/is-variable-name.js</code></li> </ul>"},{"location":"websocket/node_modules/esniff/CHANGELOG/#features","title":"Features","text":"<ul> <li>Replace parser with state machine based event driven variant (0d9bf17)</li> <li>Support ES2015 template strings syntax (4016496)</li> <li>Upgrade variable and property name patterns to ES2015+ (7f2f4ab)</li> </ul>"},{"location":"websocket/node_modules/esniff/CHANGELOG/#maintenance-improvements","title":"Maintenance Improvements","text":"<ul> <li>Move basic utils into <code>utils</code> directory (afc6ddf)</li> <li>Refactor <code>stripComments</code> to rely on main parser (6d2dd7f)</li> <li>Rely on <code>type</code> package instead of <code>es5-ext</code> (2a79744)</li> </ul>"},{"location":"websocket/node_modules/esniff/CHANGELOG/#113-2024-01-04","title":"1.1.3 (2024-01-04)","text":""},{"location":"websocket/node_modules/esniff/CHANGELOG/#maintenance-improvements_1","title":"Maintenance Improvements","text":"<ul> <li>Improve <code>isVarNameValid</code> internals (82138c2)</li> </ul>"},{"location":"websocket/node_modules/esniff/CHANGELOG/#112-2024-01-04","title":"1.1.2 (2024-01-04)","text":""},{"location":"websocket/node_modules/esniff/CHANGELOG/#maintenance-improvements_2","title":"Maintenance Improvements","text":"<ul> <li>Configure <code>.npmignore</code> (1a67292)</li> </ul>"},{"location":"websocket/node_modules/esniff/CHANGELOG/#111-2024-01-04","title":"1.1.1 (2024-01-04)","text":""},{"location":"websocket/node_modules/esniff/CHANGELOG/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>Ensure to detect Windows EOL (<code>\\r\\n</code>) as single EOL (72a17fe)</li> <li>Fix column indexing in move function (3c0a6cb)</li> </ul>"},{"location":"websocket/node_modules/esniff/CHANGELOG/#maintenance-improvements_3","title":"Maintenance Improvements","text":"<ul> <li>Declare support for Node.js v0.10+ (1eba1d6)</li> <li>ESLint suggested improvements (d7c65ef)</li> <li>Extract regular expression patterns into modules (1b12cbe)</li> <li>Fix reference links in source code comments (4787424)</li> <li>Replace <code>xlint</code> configuration with <code>eslint</code> (f434553)</li> <li>Switch LICENSE from MIT to ISC (cc33510)</li> </ul>"},{"location":"websocket/node_modules/esniff/CHANGELOG/#changelog-for-previous-versions","title":"Changelog for previous versions","text":"<p>See <code>CHANGES</code> file</p>"},{"location":"websocket/node_modules/event-emitter/","title":"event-emitter","text":""},{"location":"websocket/node_modules/event-emitter/#environment-agnostic-event-emitter","title":"Environment agnostic event emitter","text":""},{"location":"websocket/node_modules/event-emitter/#installation","title":"Installation","text":"<pre><code>$ npm install event-emitter\n</code></pre> <p>To port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: Browserify, Webmake or Webpack</p>"},{"location":"websocket/node_modules/event-emitter/#usage","title":"Usage","text":"<pre><code>var ee = require('event-emitter');\n\nvar MyClass = function () { /* .. */ };\nee(MyClass.prototype); // All instances of MyClass will expose event-emitter interface\n\nvar emitter = new MyClass(), listener;\n\nemitter.on('test', listener = function (args) {\n  // \u2026 react to 'test' event\n});\n\nemitter.once('test', function (args) {\n  // \u2026 react to first 'test' event (invoked only once!)\n});\n\nemitter.emit('test', arg1, arg2/*\u2026args*/); // Two above listeners invoked\nemitter.emit('test', arg1, arg2/*\u2026args*/); // Only first listener invoked\n\nemitter.off('test', listener);              // Removed first listener\nemitter.emit('test', arg1, arg2/*\u2026args*/); // No listeners invoked\n</code></pre>"},{"location":"websocket/node_modules/event-emitter/#additional-utilities","title":"Additional utilities","text":""},{"location":"websocket/node_modules/event-emitter/#alloffobj-event-emitterall-off","title":"allOff(obj) (event-emitter/all-off)","text":"<p>Removes all listeners from given event emitter object</p>"},{"location":"websocket/node_modules/event-emitter/#haslistenersobj-name-event-emitterhas-listeners","title":"hasListeners(obj[, name]) (event-emitter/has-listeners)","text":"<p>Whether object has some listeners attached to the object. When <code>name</code> is provided, it checks listeners for specific event name</p> <pre><code>var emitter = ee();\nvar hasListeners = require('event-emitter/has-listeners');\nvar listener = function () {};\n\nhasListeners(emitter); // false\n\nemitter.on('foo', listener);\nhasListeners(emitter); // true\nhasListeners(emitter, 'foo'); // true\nhasListeners(emitter, 'bar'); // false\n\nemitter.off('foo', listener);\nhasListeners(emitter, 'foo'); // false\n</code></pre>"},{"location":"websocket/node_modules/event-emitter/#pipesource-target-emitmethodname-event-emitterpipe","title":"pipe(source, target[, emitMethodName]) (event-emitter/pipe)","text":"<p>Pipes all events from source emitter onto target emitter (all events from source emitter will be emitted also on target emitter, but not other way). Returns pipe object which exposes <code>pipe.close</code> function. Invoke it to close configured pipe. It works internally by redefinition of <code>emit</code> method, if in your interface this method is referenced differently, provide its name (or symbol) with third argument.</p>"},{"location":"websocket/node_modules/event-emitter/#unifyemitter1-emitter2-event-emitterunify","title":"unify(emitter1, emitter2) (event-emitter/unify)","text":"<p>Unifies event handling for two objects. Events emitted on emitter1 would be also emitted on emitter2, and other way back. Non reversible.</p> <pre><code>var eeUnify = require('event-emitter/unify');\n\nvar emitter1 = ee(), listener1, listener3;\nvar emitter2 = ee(), listener2, listener4;\n\nemitter1.on('test', listener1 = function () { });\nemitter2.on('test', listener2 = function () { });\n\nemitter1.emit('test'); // Invoked listener1\nemitter2.emit('test'); // Invoked listener2\n\nvar unify = eeUnify(emitter1, emitter2);\n\nemitter1.emit('test'); // Invoked listener1 and listener2\nemitter2.emit('test'); // Invoked listener1 and listener2\n\nemitter1.on('test', listener3 = function () { });\nemitter2.on('test', listener4 = function () { });\n\nemitter1.emit('test'); // Invoked listener1, listener2, listener3 and listener4\nemitter2.emit('test'); // Invoked listener1, listener2, listener3 and listener4\n</code></pre>"},{"location":"websocket/node_modules/event-emitter/#tests","title":"Tests","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"websocket/node_modules/ext/","title":"Index","text":""},{"location":"websocket/node_modules/ext/#ext","title":"ext","text":"<p>(Previously known as <code>es5-ext</code>)</p>"},{"location":"websocket/node_modules/ext/#javascript-language-extensions-with-respect-to-evolving-standard","title":"JavaScript language extensions (with respect to evolving standard)","text":"<p>Non-standard or soon to be standard language utilities in a future proof, non-invasive form.</p> <p>Doesn't enforce transpilation step. Where it's applicable utilities/extensions are safe to use in all ES3+ implementations.</p>"},{"location":"websocket/node_modules/ext/#installation","title":"Installation","text":"<pre><code>npm install ext\n</code></pre>"},{"location":"websocket/node_modules/ext/#utilities","title":"Utilities","text":"<ul> <li><code>globalThis</code></li> <li><code>Function</code></li> <li><code>identity</code></li> <li><code>Math</code></li> <li><code>ceil10</code></li> <li><code>floor10</code></li> <li><code>round10</code></li> <li><code>Object</code></li> <li><code>clear</code></li> <li><code>entries</code></li> <li><code>Promise</code></li> <li><code>limit</code></li> <li><code>String</code></li> <li><code>random</code></li> <li><code>String.prototype</code></li> <li><code>campelToHyphen</code></li> <li><code>capitalize</code></li> <li><code>includes</code></li> <li><code>Thenable.prototype</code></li> <li><code>finally</code></li> </ul>"},{"location":"websocket/node_modules/ext/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file. See standard-version for commit guidelines.</p>"},{"location":"websocket/node_modules/ext/CHANGELOG/#170-2022-08-31","title":"1.7.0 (2022-08-31)","text":""},{"location":"websocket/node_modules/ext/CHANGELOG/#features","title":"Features","text":"<ul> <li><code>string.camelToHyphen</code> method (b8ea4ab)</li> <li><code>string.capitalize</code> method (32e7360)</li> </ul>"},{"location":"websocket/node_modules/ext/CHANGELOG/#160-2021-09-24","title":"1.6.0 (2021-09-24)","text":""},{"location":"websocket/node_modules/ext/CHANGELOG/#features_1","title":"Features","text":"<ul> <li><code>Object.clear</code> util (a955da4)</li> </ul>"},{"location":"websocket/node_modules/ext/CHANGELOG/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Fix <code>Object.entries</code> to not return non enumerable properties (44fb872)</li> </ul>"},{"location":"websocket/node_modules/ext/CHANGELOG/#150-2021-08-23","title":"1.5.0 (2021-08-23)","text":""},{"location":"websocket/node_modules/ext/CHANGELOG/#features_2","title":"Features","text":"<ul> <li><code>Promise.limit</code> (060a05d)</li> <li><code>String.prototype.includes</code> (ceebe8d)</li> <li><code>charset</code> option for <code>String.random</code> (2a20eeb)</li> </ul>"},{"location":"websocket/node_modules/ext/CHANGELOG/#140-2019-11-29","title":"1.4.0 (2019-11-29)","text":""},{"location":"websocket/node_modules/ext/CHANGELOG/#features_3","title":"Features","text":"<ul> <li><code>charset</code> option for <code>String.random</code> (2a20eeb)</li> <li><code>String.prototype.includes</code> implementation (ceebe8d)</li> </ul>"},{"location":"websocket/node_modules/ext/CHANGELOG/#130-2019-11-28","title":"1.3.0 (2019-11-28)","text":""},{"location":"websocket/node_modules/ext/CHANGELOG/#features_4","title":"Features","text":"<ul> <li><code>String.random</code> util (5b5860a)</li> </ul>"},{"location":"websocket/node_modules/ext/CHANGELOG/#121-2019-11-26","title":"1.2.1 (2019-11-26)","text":""},{"location":"websocket/node_modules/ext/CHANGELOG/#120-2019-11-07","title":"1.2.0 (2019-11-07)","text":""},{"location":"websocket/node_modules/ext/CHANGELOG/#features_5","title":"Features","text":"<ul> <li>ceil10, floor10 and round10 for Math (6a2bc4b)</li> </ul>"},{"location":"websocket/node_modules/ext/CHANGELOG/#112-2019-10-29","title":"1.1.2 (2019-10-29)","text":""},{"location":"websocket/node_modules/ext/CHANGELOG/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>Improve globalThis detection (470862d)</li> </ul>"},{"location":"websocket/node_modules/ext/CHANGELOG/#111-2019-10-29","title":"1.1.1 (2019-10-29)","text":""},{"location":"websocket/node_modules/ext/CHANGELOG/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>Provide naive fallback for sealed Object.prototype case (a8d528b)</li> <li>Workaournd Safari incompatibility case (0b051e6)</li> </ul>"},{"location":"websocket/node_modules/ext/CHANGELOG/#110-2019-10-21","title":"1.1.0 (2019-10-21)","text":""},{"location":"websocket/node_modules/ext/CHANGELOG/#features_6","title":"Features","text":"<ul> <li>Object.entries implementation (cf51e45)</li> </ul>"},{"location":"websocket/node_modules/ext/CHANGELOG/#103-2019-07-03","title":"1.0.3 (2019-07-03)","text":"<p>Remove obsolete files from publication</p>"},{"location":"websocket/node_modules/ext/CHANGELOG/#102-2019-07-03","title":"1.0.2 (2019-07-03)","text":"<p>(no changes)</p>"},{"location":"websocket/node_modules/ext/CHANGELOG/#101-2019-07-03","title":"1.0.1 (2019-07-03)","text":"<p>Prettify</p>"},{"location":"websocket/node_modules/ext/CHANGELOG/#100-2019-07-03","title":"1.0.0 (2019-07-03)","text":""},{"location":"websocket/node_modules/ext/CHANGELOG/#features_7","title":"Features","text":"<ul> <li><code>function/identity</code> (adapted from <code>es5-ext</code>) (f0102af)</li> <li><code>thenable/finally</code> (adapted from <code>es5-ext</code>) (a8494ac)</li> <li><code>global-this/is-implemented</code> (3a80904)</li> <li><code>globalThis</code> (mostly adapted from <code>es5-ext</code>) (6559bd3)</li> </ul>"},{"location":"websocket/node_modules/ext/docs/global-this/","title":"<code>globalThis</code> (ext/global-this)","text":"<p>Returns global object. Resolve native globalThis if implemented, otherwise fallback to internal resolution of a global object.</p> <pre><code>const globalThis = require(\"ext/global-this\");\n\nglobalThis.Array === Array; // true\n</code></pre>"},{"location":"websocket/node_modules/ext/docs/function/identity/","title":"<code>Function.identity</code> (ext/function/identity)","text":"<p>Returns input argument.</p> <pre><code>const identity = require(\"ext/function/identity\");\n\nidentity(\"foo\"); // \"foo\"\n</code></pre>"},{"location":"websocket/node_modules/ext/docs/math/ceil-10/","title":"<code>Math.ceil10</code> (ext/math/ceil-10)","text":"<p>Decimal ceil</p> <pre><code>const ceil10 = require(\"ext/math/ceil-10\");\n\nceil10(55.51, -1); // 55.6\nceil10(-59, 1); // -50;\n</code></pre>"},{"location":"websocket/node_modules/ext/docs/math/floor-10/","title":"<code>Math.floor10</code> (ext/math/floor-10)","text":"<p>Decimal floor</p> <pre><code>const floor10 = require(\"ext/math/floor-10\");\n\nfloor10(55.59, -1); // 55.5\nfloor10(59, 1); // 50\n</code></pre>"},{"location":"websocket/node_modules/ext/docs/math/round-10/","title":"<code>Math.round10</code> (ext/math/round-10)","text":"<p>Decimal round</p> <pre><code>const round10 = require(\"ext/math/round-10\");\n\nround10(55.549, -1); // 55.5\nround10(1.005, -2); // 1.01\n</code></pre>"},{"location":"websocket/node_modules/ext/docs/object/clear/","title":"<code>Object.clear</code> (ext/object/clear)","text":"<p>Deletes all own, enumerable, non-symbol properties in the object</p> <pre><code>const clear = require(\"ext/object/clear\");\n\nconst obj = { foo: \"bar\" };\n\nclear(obj);\nObject.keys(obj); // []\n</code></pre>"},{"location":"websocket/node_modules/ext/docs/object/entries/","title":"<code>Object.entries</code> (ext/object/entries)","text":"<p>Object.entries implementation.</p> <p>Returns native <code>Object.entries</code> if it's implemented, otherwise library implementation is returned</p> <pre><code>const entries = require(\"ext/object/entries\");\n\nentries({ foo: \"bar\" }); // [[\"foo\", \"bar\"]]\n</code></pre>"},{"location":"websocket/node_modules/ext/docs/promise/limit/","title":"<code>Promise.limit</code> (ext/promise/limit)","text":"<p>Helps to limit concurrency of asynchronous operations.</p> <pre><code>const limit = require(\"ext/promise/limit\").bind(Promise);\n\nconst limittedAsyncFunction = limit(2, asyncFunction);\n\nimittedAsyncFunction(); // Async operation started\nimittedAsyncFunction(); // Async operation started\nimittedAsyncFunction(); // On hold until one of previously started finalizes\n</code></pre>"},{"location":"websocket/node_modules/ext/docs/string/random/","title":"<code>String.random(options = { ... })</code> (ext/string/random)","text":"<p>Returns generated random string, contained only of ascii cars <code>a-z</code> and <code>0-1</code>. By default returns string of length <code>10</code>.</p> <pre><code>const random = require(\"ext/string/random\");\n\nrandom(); // \"upcfns0i4t\"\nrandom({ length: 3 }); // \"5tw\"\n</code></pre>"},{"location":"websocket/node_modules/ext/docs/string/random/#supported-options","title":"Supported options:","text":""},{"location":"websocket/node_modules/ext/docs/string/random/#isunique-false","title":"<code>isUnique: false</code>","text":"<p>Ensures generated string is unique among ones already returned.</p> <p>Note: When not applying this setting, accidental generation of same string is still highly unlikely. Provided option is just to provide a mean to eliminate possibility of an edge case of duplicate string being returned</p>"},{"location":"websocket/node_modules/ext/docs/string/random/#length-10","title":"<code>length: 10</code>","text":"<p>Desired length of result string</p>"},{"location":"websocket/node_modules/ext/docs/string/random/#charset-null","title":"<code>charset: null</code>","text":"<p>Fixed list of possible characters</p> <pre><code>random({ charset: \"abc\" }); // \"bacbccbbac\"\n</code></pre>"},{"location":"websocket/node_modules/ext/docs/string_/camel-to-hyphen/","title":"<code>string.camelToHyphen()</code> (ext/string_/camel-to-hyphen)","text":"<p>Convert camelCase string to hyphen separated, e.g. <code>oneTwoThree</code> into <code>one-to-three</code>. Useful when converting names from js property convention into filename convention.</p> <pre><code>const camelToHyphen = require(\"ext/string_/camelToHyphen\");\n\ncamelToHyphen.call(\"razDwaTrzy\"); // raz-dwa-trzy\n</code></pre>"},{"location":"websocket/node_modules/ext/docs/string_/capitalize/","title":"<code>string.capitalize()</code> (ext/string_/capitalize)","text":"<p>Capitalize input string, e.g. convert <code>this is a test</code> into <code>This is a test</code>.</p> <pre><code>const capitalize = require(\"ext/string_/capitalize\");\n\ncapitalize.call(\"this is a test\"); // This is a test\n</code></pre>"},{"location":"websocket/node_modules/ext/docs/string_/includes/","title":"<code>string.includes(position = 0)</code> (ext/string_/includes)","text":"<p><code>includes</code> method for strings. Resolve native includes if implemented, otherwise fallback to shim implementation.</p> <pre><code>const includes = require(\"ext/string_/includes\");\n\nincludes.call(\"razdwa\", \"raz\"); // true\nincludes.call(\"razdwa\", \"trzy\"); // false\n</code></pre>"},{"location":"websocket/node_modules/ext/docs/thenable_/finally/","title":"<code>thenable.finally</code> (ext/thenable_/finally)","text":"<p><code>finally</code> method for any thenable input</p> <pre><code>const finally = require(\"ext/thenable_/finally\");\n\nfinally.call(thenable, () =&gt; console.log(\"Thenable resolved\"));\n</code></pre>"},{"location":"websocket/node_modules/is-typedarray/","title":"is-typedarray","text":"<p>Detect whether or not an object is a Typed Array.</p>"},{"location":"websocket/node_modules/is-typedarray/#usage","title":"Usage","text":""},{"location":"websocket/node_modules/is-typedarray/#istypedarrayarray","title":"isTypedArray(array)","text":"<p>Returns <code>true</code> when array is a Typed Array, and <code>false</code> when it is not.</p>"},{"location":"websocket/node_modules/is-typedarray/#license","title":"License","text":"<p>MIT. See LICENSE.md for details.</p>"},{"location":"websocket/node_modules/is-typedarray/LICENSE/","title":"LICENSE","text":"<p>This software is released under the MIT license:</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"websocket/node_modules/ms/license/","title":"License","text":"<p>The MIT License (MIT)</p> <p>Copyright (c) 2016 Zeit, Inc.</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"websocket/node_modules/ms/readme/","title":"ms","text":"<p>Use this package to easily convert various time formats to milliseconds.</p>"},{"location":"websocket/node_modules/ms/readme/#examples","title":"Examples","text":"<pre><code>ms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\n</code></pre>"},{"location":"websocket/node_modules/ms/readme/#convert-from-milliseconds","title":"Convert from milliseconds","text":"<pre><code>ms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(ms('10 hours'))    // \"10h\"\n</code></pre>"},{"location":"websocket/node_modules/ms/readme/#time-format-written-out","title":"Time format written-out","text":"<pre><code>ms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\"\n</code></pre>"},{"location":"websocket/node_modules/ms/readme/#features","title":"Features","text":"<ul> <li>Works both in node and in the browser.</li> <li>If a number is supplied to <code>ms</code>, a string with a unit is returned.</li> <li>If a string that contains the number is supplied, it returns it as a number (e.g.: it returns <code>100</code> for <code>'100'</code>).</li> <li>If you pass a string with a number and a valid unit, the number of equivalent ms is returned.</li> </ul>"},{"location":"websocket/node_modules/ms/readme/#caught-a-bug","title":"Caught a bug?","text":"<ol> <li>Fork this repository to your own GitHub account and then clone it to your local device</li> <li>Link the package to the global module directory: <code>npm link</code></li> <li>Within the module you want to test your local development instance of ms, just link it to the dependencies: <code>npm link ms</code>. Instead of the default one from npm, node will now use your clone of ms!</li> </ol> <p>As always, you can run the tests using: <code>npm test</code></p>"},{"location":"websocket/node_modules/next-tick/","title":"next-tick","text":""},{"location":"websocket/node_modules/next-tick/#environment-agnostic-nexttick-polyfill","title":"Environment agnostic nextTick polyfill","text":"<p>To be used in environment agnostic modules that need nextTick functionality.</p> <ul> <li>When run in Node.js <code>process.nextTick</code> is used</li> <li>In modern engines, microtask resolution is guaranteed by <code>queueMicrotask</code></li> <li>In older browsers, <code>MutationObserver</code> is used as a fallback </li> <li>In other engines <code>setImmediate</code> or <code>setTimeout(fn, 0)</code> is used as fallback.</li> <li>If none of the above is supported module resolves to <code>null</code></li> </ul>"},{"location":"websocket/node_modules/next-tick/#installation","title":"Installation","text":""},{"location":"websocket/node_modules/next-tick/#npm","title":"NPM","text":"<p>In your project path:</p> <pre><code>$ npm install next-tick\n</code></pre>"},{"location":"websocket/node_modules/next-tick/#browser","title":"Browser","text":"<p>To port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: Browserify, Webmake or Webpack</p>"},{"location":"websocket/node_modules/next-tick/#tests","title":"Tests","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"websocket/node_modules/next-tick/#security-contact-information","title":"Security contact information","text":"<p>To report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure.</p> Get professional support for d with a Tidelift subscription <sub>         Tidelift helps make open source sustainable for maintainers while giving companiesassurances about security, maintenance, and licensing for their dependencies.     </sub>"},{"location":"websocket/node_modules/next-tick/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file. See standard-version for commit guidelines.</p>"},{"location":"websocket/node_modules/next-tick/CHANGELOG/#110-2020-02-11","title":"1.1.0 (2020-02-11)","text":""},{"location":"websocket/node_modules/next-tick/CHANGELOG/#features","title":"Features","text":"<ul> <li>Add support for queueMicrotask (Closes #13) (471986e)</li> </ul>"},{"location":"websocket/node_modules/next-tick/CHANGELOG/#changelog-for-previous-versions","title":"Changelog for previous versions","text":"<p>See <code>CHANGES</code> file</p>"},{"location":"websocket/node_modules/node-gyp-build/","title":"node-gyp-build","text":"<p>Build tool and bindings loader for <code>node-gyp</code> that supports prebuilds.</p> <pre><code>npm install node-gyp-build\n</code></pre> <p></p> <p>Use together with <code>prebuildify</code> to easily support prebuilds for your native modules.</p>"},{"location":"websocket/node_modules/node-gyp-build/#usage","title":"Usage","text":"<p>Note. Prebuild names have changed in <code>prebuildify@3</code> and <code>node-gyp-build@4</code>. Please see the documentation below.</p> <p><code>node-gyp-build</code> works similar to <code>node-gyp build</code> except that it will check if a build or prebuild is present before rebuilding your project.</p> <p>It's main intended use is as an npm install script and bindings loader for native modules that bundle prebuilds using <code>prebuildify</code>.</p> <p>First add <code>node-gyp-build</code> as an install script to your native project</p> <pre><code>{\n  ...\n  \"scripts\": {\n    \"install\": \"node-gyp-build\"\n  }\n}\n</code></pre> <p>Then in your <code>index.js</code>, instead of using the <code>bindings</code> module use <code>node-gyp-build</code> to load your binding.</p> <pre><code>var binding = require('node-gyp-build')(__dirname)\n</code></pre> <p>If you do these two things and bundle prebuilds with <code>prebuildify</code> your native module will work for most platforms without having to compile on install time AND will work in both node and electron without the need to recompile between usage.</p> <p>Users can override <code>node-gyp-build</code> and force compiling by doing <code>npm install --build-from-source</code>.</p> <p>Prebuilds will be attempted loaded from <code>MODULE_PATH/prebuilds/...</code> and then next <code>EXEC_PATH/prebuilds/...</code> (the latter allowing use with <code>zeit/pkg</code>)</p>"},{"location":"websocket/node_modules/node-gyp-build/#supported-prebuild-names","title":"Supported prebuild names","text":"<p>If so desired you can bundle more specific flavors, for example <code>musl</code> builds to support Alpine, or targeting a numbered ARM architecture version.</p> <p>These prebuilds can be bundled in addition to generic prebuilds; <code>node-gyp-build</code> will try to find the most specific flavor first. Prebuild filenames are composed of tags. The runtime tag takes precedence, as does an <code>abi</code> tag over <code>napi</code>. For more details on tags, please see <code>prebuildify</code>.</p> <p>Values for the <code>libc</code> and <code>armv</code> tags are auto-detected but can be overridden through the <code>LIBC</code> and <code>ARM_VERSION</code> environment variables, respectively.</p>"},{"location":"websocket/node_modules/node-gyp-build/#license","title":"License","text":"<p>MIT</p>"},{"location":"websocket/node_modules/node-gyp-build/SECURITY/","title":"SECURITY","text":""},{"location":"websocket/node_modules/node-gyp-build/SECURITY/#security-contact-information","title":"Security contact information","text":"<p>To report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure.</p>"},{"location":"websocket/node_modules/type/","title":"Index","text":""},{"location":"websocket/node_modules/type/#type","title":"type","text":""},{"location":"websocket/node_modules/type/#runtime-validation-and-processing-of-javascript-types","title":"Runtime validation and processing of JavaScript types","text":"<ul> <li>Respects language nature and acknowledges its quirks</li> <li>Allows coercion in restricted forms (rejects clearly invalid input, normalizes permissible type deviations)</li> <li>No transpilation implied, written to work in all ECMAScript 3+ engines</li> </ul>"},{"location":"websocket/node_modules/type/#use-case","title":"Use case","text":"<p>Validate arguments input in public API endpoints.</p> <p>For validation of more sophisticated input structures (as deeply nested configuration objects) it's recommended to consider more powerful schema based utlities (as AJV or @hapi/joi)</p>"},{"location":"websocket/node_modules/type/#example-usage","title":"Example usage","text":"<p>Bulletproof input arguments normalization and validation:</p> <pre><code>const ensureString        = require('type/string/ensure')\n    , ensureDate          = require('type/date/ensure')\n    , ensureNaturalNumber = require('type/natural-number/ensure')\n    , isObject            = require('type/object/is');\n\nmodule.exports = (path, options = { min: 0 }) {\n  path = ensureString(path, { errorMessage: \"%v is not a path\" });\n  if (!isObject(options)) options = {};\n  const min = ensureNaturalNumber(options.min, { default: 0 })\n      , max = ensureNaturalNumber(options.max, { isOptional: true })\n      , startTime = ensureDate(options.startTime, { isOptional: true });\n\n  // ...logic\n};\n</code></pre>"},{"location":"websocket/node_modules/type/#installation","title":"Installation","text":"<pre><code>npm install type\n</code></pre>"},{"location":"websocket/node_modules/type/#utilities","title":"Utilities","text":"<p>Aside of general <code>ensure</code> validation util, following kind of utilities for recognized JavaScript types are provided:</p>"},{"location":"websocket/node_modules/type/#coerce","title":"<code>*/coerce</code>","text":"<p>Restricted coercion into primitive type. Returns coerced value or <code>null</code> if value is not coercible per rules.</p>"},{"location":"websocket/node_modules/type/#is","title":"<code>*/is</code>","text":"<p>Object type/kind confirmation, returns either <code>true</code> or <code>false</code>.</p>"},{"location":"websocket/node_modules/type/#ensure","title":"<code>*/ensure</code>","text":"<p>Value validation. Returns input value (in primitive cases possibly coerced) or if value doesn't meet the constraints throws <code>TypeError</code> .</p> <p>Each <code>*/ensure</code> utility, accepts following options (eventually passed with second argument):</p> <ul> <li><code>isOptional</code> - Makes <code>null</code> or <code>undefined</code> accepted as valid value. In such case instead of <code>TypeError</code> being thrown, <code>null</code> is returned.</li> <li><code>default</code> - A value to be returned if <code>null</code> or <code>undefined</code> is passed as an input value.</li> <li><code>errorMessage</code> - Custom error message. Following placeholders can be used:</li> <li><code>%v</code> - To be replaced with short string representation of invalid value</li> <li><code>%n</code> - To be replaced with meaninfgul name (to be passed with <code>name</code> option) of validated value. Not effective if <code>name</code> option is not present</li> <li><code>errorCode</code> - Eventual error code to be exposed on <code>.code</code> error property</li> <li><code>name</code> - Meaningful name for validated value, to be used in error message, assuming it contains <code>%n</code> placeholder</li> <li><code>Error</code> - Alternative error constructor to be used (defaults to <code>TypeError</code>)</li> </ul>"},{"location":"websocket/node_modules/type/#index","title":"Index","text":""},{"location":"websocket/node_modules/type/#general-utils","title":"General utils:","text":"<ul> <li><code>ensure</code></li> </ul>"},{"location":"websocket/node_modules/type/#type-specific-utils","title":"Type specific utils:","text":"<ul> <li>Value</li> <li><code>value/is</code></li> <li><code>value/ensure</code></li> <li>Object</li> <li><code>object/is</code></li> <li><code>object/ensure</code></li> <li>Plain Object<ul> <li><code>plain-object/is</code></li> <li><code>plain-object/ensure</code></li> </ul> </li> <li>String</li> <li><code>string/coerce</code></li> <li><code>string/ensure</code></li> <li>Number</li> <li><code>number/coerce</code></li> <li><code>number/ensure</code></li> <li>Finite Number<ul> <li><code>finite/coerce</code></li> <li><code>finite/ensure</code></li> </ul> </li> <li>Integer Number<ul> <li><code>integer/coerce</code></li> <li><code>integer/ensure</code></li> </ul> </li> <li>Safe Integer Number<ul> <li><code>safe-integer/coerce</code></li> <li><code>safe-integer/ensure</code></li> </ul> </li> <li>Natural Number<ul> <li><code>natural-number/coerce</code></li> <li><code>natural-number/ensure</code></li> </ul> </li> <li>Array Length<ul> <li><code>array-length/coerce</code></li> <li><code>array-length/ensure</code></li> </ul> </li> <li>Time Value<ul> <li><code>time-value/coerce</code></li> <li><code>time-value/ensure</code></li> </ul> </li> <li>BigInt</li> <li><code>big-int/coerce</code></li> <li><code>big-int/ensure</code></li> <li>Array Like</li> <li><code>array-like/is</code></li> <li><code>array-like/ensure</code></li> <li>Array<ul> <li><code>array/is</code></li> <li><code>array/ensure</code></li> </ul> </li> <li>Iterable</li> <li><code>iterable/is</code></li> <li><code>iterable/ensure</code></li> <li>Set</li> <li><code>set/is</code></li> <li><code>set/ensure</code></li> <li>Map</li> <li><code>map/is</code></li> <li><code>map/ensure</code></li> <li>Date</li> <li><code>date/is</code></li> <li><code>date/ensure</code></li> <li>Function</li> <li><code>function/is</code></li> <li><code>function/ensure</code></li> <li>Constructor<ul> <li><code>constructor/is</code></li> <li><code>constructor/ensure</code></li> </ul> </li> <li>Plain Function<ul> <li><code>plain-function/is</code></li> <li><code>plain-function/ensure</code></li> </ul> </li> <li>Reg Exp</li> <li><code>reg-exp/is</code></li> <li><code>reg-exp/ensure</code></li> <li>Thenable</li> <li><code>thenable/is</code></li> <li><code>thenable/ensure</code></li> <li>Promise<ul> <li><code>promise/is</code></li> <li><code>promise/ensure</code></li> </ul> </li> <li>Error</li> <li><code>error/is</code></li> <li><code>error/ensure</code></li> <li>Prototype</li> <li><code>prototype/is</code></li> </ul>"},{"location":"websocket/node_modules/type/#tests","title":"Tests","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"websocket/node_modules/type/#security-contact-information","title":"Security contact information","text":"<p>To report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure.</p>"},{"location":"websocket/node_modules/type/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file. See standard-version for commit guidelines.</p>"},{"location":"websocket/node_modules/type/CHANGELOG/#273-2024-05-30","title":"2.7.3 (2024-05-30)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#maintenance-improvements","title":"Maintenance Improvements","text":"<ul> <li>Add security vulnerability policy (a28cc58)</li> <li>Prettify (aaa9256)</li> <li>Upgrade <code>prettier-elastic</code> to v3 (7f10b2c)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#272-2022-08-05","title":"2.7.2 (2022-08-05)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#maintenance-improvements_1","title":"Maintenance Improvements","text":"<ul> <li>TS: Improve <code>ensure</code> options handling (#8) (4a54066) (Marco)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#271-2022-08-04","title":"2.7.1 (2022-08-04)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#maintenance-improvements_2","title":"Maintenance Improvements","text":"<ul> <li>TS: Fix support for <code>isOptional</code> in <code>ensure</code> options (#7) (320f89b) (Marco)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#270-2022-08-03","title":"2.7.0 (2022-08-03)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#features","title":"Features","text":"<ul> <li><code>BigInt.coerce</code> and <code>BigInt.ensure</code> (e49ad78)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#261-2022-07-29","title":"2.6.1 (2022-07-29)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#maintenance-improvements_3","title":"Maintenance Improvements","text":"<ul> <li>Declare TS types (#6) (6378e2c) (Marco)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#260-2022-02-02","title":"2.6.0 (2022-02-02)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#features_1","title":"Features","text":"<ul> <li><code>constructor</code> validation utils (74b99bb)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#250-2021-03-08","title":"2.5.0 (2021-03-08)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#features_2","title":"Features","text":"<ul> <li><code>errorCode</code> option for <code>ensure*</code> utils (777a1f2)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#240-2021-03-08","title":"2.4.0 (2021-03-08)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#features_3","title":"Features","text":"<ul> <li><code>set/is</code> and <code>set/ensure</code> utils (083ec23)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#230-2021-02-16","title":"2.3.0 (2021-02-16)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#features_4","title":"Features","text":"<ul> <li><code>map/is</code> and <code>map/ensure</code> utils (aafd1cb)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#220-2021-02-11","title":"2.2.0 (2021-02-11)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#features_5","title":"Features","text":"<ul> <li>Support <code>ensureItem</code> option in <code>array/ensure</code> (8f74973)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#210-2020-08-21","title":"2.1.0 (2020-08-21)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#features_6","title":"Features","text":"<ul> <li><code>ensure</code> util for cumulated input validation (814c5a8)</li> <li>Provide an alternative error message with <code>options.name</code> (c7751c0)</li> <li>Support <code>%n</code> (meaningful name) token in error message resolver (b0f374e)</li> <li>Support <code>min</code> validation for natural numbers (e703512)</li> <li>Support custom Error constructors (c6ecb90)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Fix typo in error message (2735533)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#200-2019-10-10","title":"2.0.0 (2019-10-10)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#features_7","title":"Features","text":"<ul> <li><code>allowedKeys</code> option for plain-object/ensure (f81e72e)</li> <li><code>ensurePropertyValue</code> option for plain-object/ensure (c5ff8fb)</li> <li>Replace <code>coerceItem</code> with <code>ensureItem</code> option in iterable/ensure (721494f)</li> <li>Seclude lib/resolve-error-message (12636d9)</li> <li>Validate options.ensureItem in iterable/ensure (78da6c1)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#breaking-changes","title":"BREAKING CHANGES","text":"<ul> <li>iterable/ensure no longer supports <code>coerceItem</code> option. Instead <code>ensureItem</code> was introduced</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#120-2019-09-20","title":"1.2.0 (2019-09-20)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>Improve error message so it's not confusing (97cd6b9)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#features_8","title":"Features","text":"<ul> <li>'coerceItem' option for iterable/ensure (0818860)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#110-2019-09-20","title":"1.1.0 (2019-09-20)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#features_9","title":"Features","text":"<ul> <li><code>denyEmpty</code> option for iterables validation (301d071)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#103-2019-08-06","title":"1.0.3 (2019-08-06)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>Recognize custom built ES5 era errors (6462fac)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#102-2019-08-06","title":"1.0.2 (2019-08-06)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>Recognize host errors (e.g. DOMException) (96ef399)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#101-2019-04-08","title":"1.0.1 (2019-04-08)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#100-2019-04-05","title":"1.0.0 (2019-04-05)","text":""},{"location":"websocket/node_modules/type/CHANGELOG/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li>ensure 'is' functions can't crash (59ceb78)</li> </ul>"},{"location":"websocket/node_modules/type/CHANGELOG/#features_10","title":"Features","text":"<ul> <li>array-length/coerce (af8ddec)</li> <li>array-length/ensure (d313eb6)</li> <li>array-like/ensure (45f1ddd)</li> <li>array-like/is (9a026a5)</li> <li>array/ensure (9db1515)</li> <li>array/is (9672839)</li> <li>date/ensure (44e25a0)</li> <li>date/is (0316558)</li> <li>ensure to not crash (3998348)</li> <li>ensure/number (134b5cb)</li> <li>error/ensure (d5c8a30)</li> <li>error/is-error (4d6b899)</li> <li>finite/coerce (accaad1)</li> <li>finite/ensure (51e4174)</li> <li>function/ensure (b624c9a)</li> <li>function/is (dab8026)</li> <li>integer/coerce (89dea2e)</li> <li>integer/ensure (44a7071)</li> <li>iterable/ensure (3d48841)</li> <li>iterable/is (cf09513)</li> <li>lib/is-to-string-tag-supported (c8c001d)</li> <li>natural-number/coerce (d08fdd9)</li> <li>natural-number/ensure (6c24d12)</li> <li>number/coerce (86ccf08)</li> <li>object/ensure (a9e8eed)</li> <li>object/is (d2d7251)</li> <li>plain-function/ensure (5186518)</li> <li>plain-function/is (51bc791)</li> <li>plain-object/ensure (91cf5e5)</li> <li>plain-object/is (4dcf393)</li> <li>promise/ensure (8d096a4)</li> <li>promise/is (a00de02)</li> <li>prototype/is (b23bdcc)</li> <li>reg-exp/ensure (6f7bbcb)</li> <li>reg-exp/is (9728519)</li> <li>safe-integer/coerce (b8549c4)</li> <li>safe-integer/ensure (a70ef3f)</li> <li>string/coerce (b25c71f)</li> <li>string/ensure (b62577d)</li> <li>support 'default' in resolveException (e08332a)</li> <li>switch config to ES3 based (37606d9)</li> <li>thenable/ensure (6762c0d)</li> <li>thenable/is (2711d70)</li> <li>time-value/coerce (27fd109)</li> <li>time-value/ensure (1f6a8ea)</li> <li>string/coerce: restrict toString acceptance (2a87100)</li> <li>value/ensure (dd6d8cb)</li> <li>value/is (fdf4763)</li> </ul>"},{"location":"websocket/node_modules/type/docs/array-length/","title":"Array length","text":"<p>number primitive that conforms as valid array length</p>"},{"location":"websocket/node_modules/type/docs/array-length/#array-lengthcoerce","title":"<code>array-length/coerce</code>","text":"<p>Follows <code>safe-integer/coerce</code> but returns <code>null</code> in place of values which are below <code>0</code></p> <pre><code>const coerceToArrayLength = require(\"type/safe-integer/coerce\");\n\ncoerceToArrayLength(\"12.95\"); // 12\ncoerceToArrayLength(9007199254740992); // null\ncoerceToArrayLength(null); // null\n</code></pre>"},{"location":"websocket/node_modules/type/docs/array-length/#array-lengthensure","title":"<code>array-length/ensure</code>","text":"<p>If given argument is an array length coercible value (via <code>array-length/coerce</code>) returns result number. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureArrayLength = require(\"type/array-length/ensure\");\n\nensureArrayLength(12.93); // \"12\"\nensureArrayLength(9007199254740992); // Thrown TypeError: 9007199254740992 is not a valid array length\n</code></pre>"},{"location":"websocket/node_modules/type/docs/array-like/","title":"Array Like","text":"<p>Array-like value (any value with <code>length</code> property)</p>"},{"location":"websocket/node_modules/type/docs/array-like/#array-likeis","title":"<code>array-like/is</code>","text":"<p>Restricted array-like confirmation. Returns true for every value that meets following contraints</p> <ul> <li>is an object (or with <code>allowString</code> option, a string)</li> <li>is not a function</li> <li>Exposes <code>length</code> that meets <code>array-length</code> constraints</li> </ul> <pre><code>const isArrayLike = require(\"type/array-like/is\");\n\nisArrayLike([]); // true\nisArrayLike({}); // false\nisArrayLike({ length: 0 }); // true\nisArrayLike(\"foo\"); // false\nisArrayLike(\"foo\", { allowString: true }); // true\n</code></pre>"},{"location":"websocket/node_modules/type/docs/array-like/#array-likeensure","title":"<code>array-like/ensure</code>","text":"<p>If given argument is an array-like, it is returned back. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureArrayLike = require(\"type/array-like/ensure\");\n\nensureArrayLike({ length: 0 }); // { length: 0 }\nensureArrayLike(\"foo\", { allowString: true }); // \"foo\"\nensureArrayLike({}); // Thrown TypeError: null is not an iterable\n</code></pre>"},{"location":"websocket/node_modules/type/docs/array/","title":"Array","text":"<p>Array instance</p>"},{"location":"websocket/node_modules/type/docs/array/#arrayis","title":"<code>array/is</code>","text":"<p>Confirms if given object is a native array</p> <pre><code>const isArray = require(\"type/array/is\");\n\nisArray([]); // true\nisArray({}); // false\nisArray(\"foo\"); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/array/#arrayensure","title":"<code>array/ensure</code>","text":"<p>If given argument is an array, it is returned back. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureArray = require(\"type/array/ensure\");\n\nensureArray([\"foo\"]); // [\"foo\"]\nensureArray(\"foo\"); // Thrown TypeError: foo is not an array\n</code></pre>"},{"location":"websocket/node_modules/type/docs/array/#confirming-on-items","title":"Confirming on items","text":"<p>Items can be validated by passing <code>ensureItem</code> option. Note that in this case:</p> <ul> <li>A newly created instance of an array with coerced item values is returned</li> <li>Error message lists up to three items which are invalid</li> </ul> <pre><code>const ensureString = require(\"type/string/ensure\");\n\nensureArray([12], { ensureItem: ensureString }); // [\"12\"]\n\n/*\n Below invocation with crash with:\n TypeError: 23, [object Object], [object Object] is not a valid array.\n            Following items are invalid: [object Object], [object Object]\n*/\nensureArray([23, {}, {}], { ensureItem: ensureString });\n</code></pre>"},{"location":"websocket/node_modules/type/docs/big-int/","title":"BigInt","text":"<p>bigint primitive</p>"},{"location":"websocket/node_modules/type/docs/big-int/#big-intcoerce","title":"<code>big-int/coerce</code>","text":"<p>BigInt coercion. If value can be coerced by <code>BigInt</code> its result is returned. For all other values <code>null</code> is returned</p> <pre><code>const coerceToBigInt = require(\"type/big-int/coerce\");\n\ncoerceToBigInt(12); // 12n\ncoerceToBigInt(undefined); // null\n</code></pre>"},{"location":"websocket/node_modules/type/docs/big-int/#big-intensure","title":"<code>big-int/ensure</code>","text":"<p>If given argument is a bigint coercible value (via <code>big-int/coerce</code>) returns result bigint. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureBigInt = require(\"type/big-int/ensure\");\n\nensureBigInt(12); // 12n\nensureBigInt(null); // Thrown TypeError: null is not a bigint\n</code></pre>"},{"location":"websocket/node_modules/type/docs/constructor/","title":"Constructor","text":"<p>A Function instance that's a constructor (either regular function or class)</p>"},{"location":"websocket/node_modules/type/docs/constructor/#constructoris","title":"<code>constructor/is</code>","text":"<p>Confirms if given object is a constructor function_</p> <pre><code>const isConstructor = require(\"type/constructor/is\");\n\nisConstructor(function () {}); // true\nisConstructor(() =&gt; {}); // false\nisConstructor(class {}); // true\nisConstructor(\"foo\"); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/constructor/#constructorensure","title":"<code>constructor/ensure</code>","text":"<p>If given argument is a constructor function, it is returned back. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureConstructor = require(\"type/constructor/ensure\");\n\nconst fn = function () {};\nensureConstructor(fn); // fn\nensureConstructor(() =&gt; {}); // Thrown TypeError: () =&gt; {} is not a constructor function\n</code></pre>"},{"location":"websocket/node_modules/type/docs/date/","title":"Date","text":"<p>Date instance</p>"},{"location":"websocket/node_modules/type/docs/date/#dateis","title":"<code>date/is</code>","text":"<p>Confirms if given object is a native date, and is not an Invalid Date</p> <pre><code>const isDate = require(\"type/date/is\");\n\nisDate(new Date()); // true\nisDate(new Date(\"Invalid date\")); // false\nisDate(Date.now()); // false\nisDate(\"foo\"); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/date/#dateensure","title":"<code>date/ensure</code>","text":"<p>If given argument is a date object, it is returned back. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureDate = require(\"type/date/ensure\");\n\nconst date = new Date();\nensureDate(date); // date\nensureDate(123123); // Thrown TypeError: 123123 is not a date object\n</code></pre>"},{"location":"websocket/node_modules/type/docs/ensure/","title":"<code>ensure(validationDatum1[, ...validationDatumN[, options]])</code>","text":"<p>Provides a complete cumulated input validation for an API endpoint. Validates multiple input arguments and consolidates eventual errors into one.</p>"},{"location":"websocket/node_modules/type/docs/ensure/#arguments","title":"Arguments","text":""},{"location":"websocket/node_modules/type/docs/ensure/#validationdatum1-validationdatumn","title":"<code>validationDatum1[, ...validationDatumN]</code>","text":"<p>For each argument to be validated a <code>validationDatum</code> of following stucture should be defined:</p> <pre><code>[argumentName, inputValue, ensureFunction, (options = {})];\n</code></pre> <ul> <li><code>argumentName</code> - Name of validated argument (used for meaningful error messaging)</li> <li><code>inputValue</code> - An argument value as passed to function</li> <li><code>ensureFunction</code> - An <code>ensureX</code> function with which argument should be validated (e.g. if we're after string, then we need string/ensure)</li> <li><code>options</code> - Optional, extra options to be passed to <code>ensureX</code> function</li> </ul>"},{"location":"websocket/node_modules/type/docs/ensure/#options","title":"<code>[options]</code>","text":"<p>Eventual options be passed to underlying <code>ensureX</code> functions. If custom error constructor is passed with an <code>Error</code> option, then cumulated error is created with this constructor.</p>"},{"location":"websocket/node_modules/type/docs/ensure/#usage-example","title":"Usage example","text":"<pre><code>const ensure = require(\"type/ensure\");\nconst ensureString = require(\"type/string/ensure\");\nconst ensureNaturalNumber = require(\"type/natural-number/ensure\");\n\nconst resolveRepositoryIssue = (repoName, issueNumber) =&gt; {\n  // Validate input\n  [repoName, issueNumber] = ensure(\n    [\"repoName\", repoName, ensureString],\n    [\"issueNumber\", issueNumber, ensureNaturalNumber],\n    { Error: UserError }\n  );\n  // ... logic\n};\n</code></pre>"},{"location":"websocket/node_modules/type/docs/error/","title":"Error","text":"<p>Error instance</p>"},{"location":"websocket/node_modules/type/docs/error/#erroris","title":"<code>error/is</code>","text":"<p>Confirms if given object is a native error object</p> <pre><code>const isError = require(\"type/error/is\");\n\nisError(new Error()); // true\nisError({ message: \"Fake error\" }); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/error/#errorensure","title":"<code>error/ensure</code>","text":"<p>If given argument is an error object, it is returned back. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureError = require(\"type/error/ensure\");\n\nconst someError = new Error(\"Some error\");\nensureError(someError); // someError\nensureError({ message: \"Fake error\" }); // Thrown TypeError: [object Object] is not an error object\n</code></pre>"},{"location":"websocket/node_modules/type/docs/finite/","title":"Finite Number","text":"<p>Finite number primitive</p>"},{"location":"websocket/node_modules/type/docs/finite/#finitecoerce","title":"<code>finite/coerce</code>","text":"<p>Follows <code>number/coerce</code> additionally rejecting <code>Infinity</code> and <code>-Infinity</code> values (<code>null</code> is returned if given values coerces to them)</p> <pre><code>const coerceToFinite = require(\"type/finite/coerce\");\n\ncoerceToFinite(\"12\"); // 12\ncoerceToFinite(Infinity); // null\ncoerceToFinite(null); // null\n</code></pre>"},{"location":"websocket/node_modules/type/docs/finite/#finiteensure","title":"<code>finite/ensure</code>","text":"<p>If given argument is a finite number coercible value (via <code>finite/coerce</code>) returns result number. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureFinite = require(\"type/finite/ensure\");\n\nensureFinite(12); // \"12\"\nensureFinite(null); // Thrown TypeError: null is not a finite number\n</code></pre>"},{"location":"websocket/node_modules/type/docs/function/","title":"Function","text":"<p>Function instance</p>"},{"location":"websocket/node_modules/type/docs/function/#functionis","title":"<code>function/is</code>","text":"<p>Confirms if given object is a native function</p> <pre><code>const isFunction = require(\"type/function/is\");\n\nisFunction(function () {}); // true\nisFunction(() =&gt; {}); // true\nisFunction(class {}); // true\nisFunction(\"foo\"); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/function/#functionensure","title":"<code>function/ensure</code>","text":"<p>If given argument is a function object, it is returned back. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureFunction = require(\"type/function/ensure\");\n\nconst fn = function () {};\nensureFunction(fn); // fn\nensureFunction(/foo/); // Thrown TypeError: /foo/ is not a function\n</code></pre>"},{"location":"websocket/node_modules/type/docs/integer/","title":"Integer Number","text":"<p>Integer number primitive</p>"},{"location":"websocket/node_modules/type/docs/integer/#integercoerce","title":"<code>integer/coerce</code>","text":"<p>Follows <code>finite/coerce</code> additionally stripping decimal part from the number</p> <pre><code>const coerceToInteger = require(\"type/integer/coerce\");\n\ncoerceToInteger(\"12.95\"); // 12\ncoerceToInteger(Infinity); // null\ncoerceToInteger(null); // null\n</code></pre>"},{"location":"websocket/node_modules/type/docs/integer/#integerensure","title":"<code>integer/ensure</code>","text":"<p>If given argument is an integer coercible value (via <code>integer/coerce</code>) returns result number. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureInteger = require(\"type/integer/ensure\");\n\nensureInteger(12.93); // \"12\"\nensureInteger(null); // Thrown TypeError: null is not an integer\n</code></pre>"},{"location":"websocket/node_modules/type/docs/iterable/","title":"Iterable","text":"<p>Value which implements iterable protocol</p>"},{"location":"websocket/node_modules/type/docs/iterable/#iterableis","title":"<code>iterable/is</code>","text":"<p>Confirms if given object is an iterable and is not a string (unless <code>allowString</code> option is passed)</p> <pre><code>const isIterable = require(\"type/iterable/is\");\n\nisIterable([]); // true\nisIterable({}); // false\nisIterable(\"foo\"); // false\nisIterable(\"foo\", { allowString: true }); // true\n</code></pre> <p>Supports also <code>denyEmpty</code> option</p> <pre><code>isIterable([], { denyEmpty: true }); // false\nisIterable([\"foo\"], { denyEmpty: true }); // true\n</code></pre>"},{"location":"websocket/node_modules/type/docs/iterable/#iterableensure","title":"<code>iterable/ensure</code>","text":"<p>If given argument is an iterable, it is returned back. Otherwise <code>TypeError</code> is thrown. By default string primitives are rejected unless <code>allowString</code> option is passed.</p> <pre><code>const ensureIterable = require(\"type/iterable/ensure\");\n\nensureIterable([]); // []\nensureIterable(\"foo\", { allowString: true }); // \"foo\"\nensureIterable({}); // Thrown TypeError: null is not expected iterable\n</code></pre>"},{"location":"websocket/node_modules/type/docs/iterable/#denying-empty-iterables","title":"Denying empty iterables","text":"<p>Pass <code>denyEmpty</code> option to require non empty iterables</p> <pre><code>ensureIterable([], { denyEmpty: true }); // Thrown TypeError: [] is not expected iterable\n</code></pre>"},{"location":"websocket/node_modules/type/docs/iterable/#confirming-on-items","title":"Confirming on items","text":"<p>Items can be validated by passing <code>ensureItem</code> option. Note that in this case:</p> <ul> <li>A newly created instance of array with coerced values is returned</li> <li>Error message lists up to three invalid items</li> </ul> <pre><code>const ensureString = require(\"type/string/ensure\");\n\nensureIterable(new Set([\"foo\", 12]), { ensureItem: ensureString }); // [\"foo\", \"12\"]\n\n/*\n Below invocation with crash with:\n TypeError: [object Set] is not expected iterable value.\n            Following items are invalid:\n              - [object Object]\n*/\nensureIterable(new Set([\"foo\", {}]), { ensureItem: ensureString });\n</code></pre>"},{"location":"websocket/node_modules/type/docs/map/","title":"Map","text":"<p>Map instance</p>"},{"location":"websocket/node_modules/type/docs/map/#mapis","title":"<code>map/is</code>","text":"<p>Confirms if given object is a native map</p> <pre><code>const isMap = require(\"type/map/is\");\n\nisMap(new Map()); // true\nisMap(new Set()); // false\nisMap({}); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/map/#mapensure","title":"<code>map/ensure</code>","text":"<p>If given argument is a map, it is returned back. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureMap = require(\"type/map/ensure\");\n\nconst map = new Map();\nensureMap(map); // map\neensureMap({}); // Thrown TypeError: [object Object] is not a map\n</code></pre>"},{"location":"websocket/node_modules/type/docs/natural-number/","title":"Natural Number","text":"<p>Natural number primitive</p>"},{"location":"websocket/node_modules/type/docs/natural-number/#natural-numbercoerce","title":"<code>natural-number/coerce</code>","text":"<p>Follows <code>integer/coerce</code> but returns <code>null</code> for values below <code>0</code></p> <pre><code>const coerceToNaturalNumber = require(\"type/natural-number/coerce\");\n\ncoerceToNaturalNumber(\"12.95\"); // 12\ncoerceToNaturalNumber(-120); // null\ncoerceToNaturalNumber(null); // null\n</code></pre>"},{"location":"websocket/node_modules/type/docs/natural-number/#natural-numberensure","title":"<code>natural-number/ensure</code>","text":"<p>If given argument is a natural number coercible value (via <code>natural-number/coerce</code>) returns result number. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureNaturalNumber = require(\"type/natural-number/ensure\");\n\nensureNaturalNumber(12.93); // \"12\"\nensureNaturalNumber(-230); // Thrown TypeError: null is not a natural number\n</code></pre>"},{"location":"websocket/node_modules/type/docs/number/","title":"Number","text":"<p>number primitive</p>"},{"location":"websocket/node_modules/type/docs/number/#numbercoerce","title":"<code>number/coerce</code>","text":"<p>Restricted number coercion. Returns number presentation for every value that follows below constraints</p> <ul> <li>is implicitly coercible to number</li> <li>is neither <code>null</code> nor <code>undefined</code></li> <li>is not <code>NaN</code> and doesn't coerce to <code>NaN</code></li> </ul> <p>For all other values <code>null</code> is returned</p> <pre><code>const coerceToNumber = require(\"type/number/coerce\");\n\ncoerceToNumber(\"12\"); // 12\ncoerceToNumber({}); // null\ncoerceToNumber(null); // null\n</code></pre>"},{"location":"websocket/node_modules/type/docs/number/#numberensure","title":"<code>number/ensure</code>","text":"<p>If given argument is a number coercible value (via <code>number/coerce</code>) returns result number. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureNumber = require(\"type/number/ensure\");\n\nensureNumber(12); // \"12\"\nensureNumber(null); // Thrown TypeError: null is not a number\n</code></pre>"},{"location":"websocket/node_modules/type/docs/object/","title":"Object","text":"<p>Object, any non-primitive value</p>"},{"location":"websocket/node_modules/type/docs/object/#objectis","title":"<code>object/is</code>","text":"<p>Confirms if passed value is an object</p> <pre><code>const isObject = require(\"type/object/is\");\n\nisObject({}); // true\nisObject(true); // false\nisObject(null); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/object/#objectensure","title":"<code>object/ensure</code>","text":"<p>If given argument is an object, it is returned back. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureObject = require(\"type/object/ensure\");\n\nconst obj = {};\n\nensureObject(obj); // obj\nensureString(null); // Thrown TypeError: null is not an object\n</code></pre>"},{"location":"websocket/node_modules/type/docs/plain-function/","title":"Plain Function","text":"<p>A Function instance that is not a Class</p>"},{"location":"websocket/node_modules/type/docs/plain-function/#plain-functionis","title":"<code>plain-function/is</code>","text":"<p>Confirms if given object is a plain function</p> <pre><code>const isPlainFunction = require(\"type/plain-function/is\");\n\nisPlainFunction(function () {}); // true\nisPlainFunction(() =&gt; {}); // true\nisPlainFunction(class {}); // false\nisPlainFunction(\"foo\"); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/plain-function/#plain-functionensure","title":"<code>plain-function/ensure</code>","text":"<p>If given argument is a plain function object, it is returned back. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensurePlainFunction = require(\"type/function/ensure\");\n\nconst fn = function () {};\nensurePlainFunction(fn); // fn\nensurePlainFunction(class {}); // Thrown TypeError: class is not a plain function\n</code></pre>"},{"location":"websocket/node_modules/type/docs/plain-object/","title":"Plain Object","text":"<p>A plain object</p> <ul> <li>Inherits directly from <code>Object.prototype</code> or <code>null</code></li> <li>Is not a constructor's <code>prototype</code> property</li> </ul>"},{"location":"websocket/node_modules/type/docs/plain-object/#plain-objectis","title":"<code>plain-object/is</code>","text":"<p>Confirms if given object is a plain object</p> <pre><code>const isPlainObject = require(\"type/plain-object/is\");\n\nisPlainObject({}); // true\nisPlainObject(Object.create(null)); // true\nisPlainObject([]); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/plain-object/#plain-objectensure","title":"<code>plain-object/ensure</code>","text":"<p>If given argument is a plain object it is returned back. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensurePlainObject = require(\"type/plain-object/ensure\");\n\nensurePlainObject({}); // {}\nensurePlainObject(\"foo\"); // Thrown TypeError: foo is not a plain object\n</code></pre>"},{"location":"websocket/node_modules/type/docs/plain-object/#confirming-on-keys","title":"Confirming on keys","text":"<p>Keys can be validated by passing <code>allowedKeys</code> option. Note that in this case:</p> <ul> <li>Error message lists up to three invalid keys</li> </ul> <pre><code>const allowedKeys = [\"foo\"];\n\nensurePlainObject({}, { allowedKeys }); // {}\nensurePlainObject({ foo: \"bar\" }, { allowedKeys }); // { foo: 'bar' }\n\n/*\n Below invocation with crash with:\n TypeError: [object Object] is not a valid plain object.\n            Following keys are unexpected: lorem, ipsum\n*/\nensurePlainObject({ foo: \"bar\", lorem: 1, ipsum: 2 }, { allowedKeys });\n</code></pre>"},{"location":"websocket/node_modules/type/docs/plain-object/#confirming-on-property-values","title":"Confirming on property values","text":"<p>Property values can be validated by passing <code>ensurePropertyValue</code> option. Note that in this case:</p> <ul> <li>A newly created instance of plain object with coerced values is returned</li> <li>Error message lists up to three keys that contain invalid values</li> </ul> <pre><code>const ensureString = require(\"type/string/ensure\");\n\nensurePlainObject({ foo: 12 }, { ensurePropertyValue: ensureString }); // { foo: '12' }\n\n/*\n Below invocation with crash with:\n TypeError: [object Object] is not a valid plain object.\n            Valuees for following keys are invalid: lorem, ipsum\n*/\nensurePlainObject({ foo: 23, lorem: {}, ipsum: {} }, { ensurePropertyValue: ensureString });\n</code></pre>"},{"location":"websocket/node_modules/type/docs/promise/","title":"Promise","text":"<p>Promise instance</p>"},{"location":"websocket/node_modules/type/docs/promise/#promiseis","title":"<code>promise/is</code>","text":"<p>Confirms if given object is a native promise</p> <pre><code>const isPromise = require(\"type/promise/is\");\n\nisPromise(Promise.resolve()); // true\nisPromise({ then: () =&gt; {} }); // false\nisPromise({}); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/promise/#promiseensure","title":"<code>promise/ensure</code>","text":"<p>If given argument is a promise, it is returned back. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensurePromise = require(\"type/promise/ensure\");\n\nconst promise = Promise.resolve();\nensurePromise(promise); // promise\neensurePromise({}); // Thrown TypeError: [object Object] is not a promise\n</code></pre>"},{"location":"websocket/node_modules/type/docs/prototype/","title":"Prototype","text":"<p>Some constructor's <code>prototype</code> property</p>"},{"location":"websocket/node_modules/type/docs/prototype/#prototypeis","title":"<code>prototype/is</code>","text":"<p>Confirms if given object serves as a prototype property</p> <pre><code>const isPrototype = require(\"type/prototype/is\");\n\nisPrototype({}); // false\nisPrototype(Object.prototype); // true\nisPrototype(Array.prototype); // true\n</code></pre>"},{"location":"websocket/node_modules/type/docs/reg-exp/","title":"RegExp","text":"<p>RegExp instance</p>"},{"location":"websocket/node_modules/type/docs/reg-exp/#reg-expis","title":"<code>reg-exp/is</code>","text":"<p>Confirms if given object is a native regular expression object</p> <pre><code>const isRegExp = require(\"type/reg-exp/is\");\n\nisRegExp(/foo/);\nisRegExp({}); // false\nisRegExp(\"foo\"); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/reg-exp/#reg-expensure","title":"<code>reg-exp/ensure</code>","text":"<p>If given argument is a regular expression object, it is returned back. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureRegExp = require(\"type/reg-exp/ensure\");\n\nensureRegExp(/foo/); // /foo/\nensureRegExp(\"foo\"); // Thrown TypeError: null is not a regular expression object\n</code></pre>"},{"location":"websocket/node_modules/type/docs/safe-integer/","title":"Safe Integer Number","text":"<p>Safe integer number primitive</p>"},{"location":"websocket/node_modules/type/docs/safe-integer/#safe-integercoerce","title":"<code>safe-integer/coerce</code>","text":"<p>Follows <code>integer/coerce</code> but returns <code>null</code> in place of values which are beyond <code>Number.MIN_SAFE_INTEGER</code> and <code>Number.MAX_SAFE_INTEGER</code> range.</p> <pre><code>const coerceToSafeInteger = require(\"type/safe-integer/coerce\");\n\ncoerceToInteger(\"12.95\"); // 12\ncoerceToInteger(9007199254740992); // null\ncoerceToInteger(null); // null\n</code></pre>"},{"location":"websocket/node_modules/type/docs/safe-integer/#safe-integerensure","title":"<code>safe-integer/ensure</code>","text":"<p>If given argument is a safe integer coercible value (via <code>safe-integer/coerce</code>) returns result number. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureSafeInteger = require(\"type/safe-integer/ensure\");\n\nensureSafeInteger(12.93); // \"12\"\nensureSafeInteger(9007199254740992); // Thrown TypeError: null is not a safe integer\n</code></pre>"},{"location":"websocket/node_modules/type/docs/set/","title":"Set","text":"<p>Set instance</p>"},{"location":"websocket/node_modules/type/docs/set/#setis","title":"<code>set/is</code>","text":"<p>Confirms if given object is a native set_</p> <pre><code>const isSet = require(\"type/set/is\");\n\nisSet(new Set()); // true\nisSet(new Map()); // false\nisSet({}); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/set/#setensure","title":"<code>Set/ensure</code>","text":"<p>If given argument is a set, it is returned back. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureSet = require(\"type/set/ensure\");\n\nconst set = new Set();\nensureSet(set); // set\neensureSet({}); // Thrown TypeError: [object Object] is not a set\n</code></pre>"},{"location":"websocket/node_modules/type/docs/string/","title":"String","text":"<p>string primitive</p>"},{"location":"websocket/node_modules/type/docs/string/#stringcoerce","title":"<code>string/coerce</code>","text":"<p>Restricted string coercion. Returns string presentation for every value that follows below constraints</p> <ul> <li>is implicitly coercible to string</li> <li>is neither<code>null</code> nor <code>undefined</code></li> <li>its <code>toString</code> method is not <code>Object.prototype.toString</code></li> </ul> <p>For all other values <code>null</code> is returned</p> <pre><code>const coerceToString = require(\"type/string/coerce\");\n\ncoerceToString(12); // \"12\"\ncoerceToString(undefined); // null\n</code></pre>"},{"location":"websocket/node_modules/type/docs/string/#stringensure","title":"<code>string/ensure</code>","text":"<p>If given argument is a string coercible value (via <code>string/coerce</code>) returns result string. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureString = require(\"type/string/ensure\");\n\nensureString(12); // \"12\"\nensureString(null); // Thrown TypeError: null is not a string\n</code></pre>"},{"location":"websocket/node_modules/type/docs/thenable/","title":"Thenable","text":"<p>Thenable object (an object with <code>then</code> method)</p>"},{"location":"websocket/node_modules/type/docs/thenable/#thenableis","title":"<code>thenable/is</code>","text":"<p>Confirms if given object is a thenable</p> <pre><code>const isThenable = require(\"type/thenable/is\");\n\nisThenable(Promise.resolve()); // true\nisThenable({ then: () =&gt; {} }); // true\nisThenable({}); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/thenable/#thenableensure","title":"<code>thenable/ensure</code>","text":"<p>If given argument is a thenable object, it is returned back. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureThenable = require(\"type/thenable/ensure\");\n\nconst promise = Promise.resolve();\nensureThenable(promise); // promise\nensureThenable({}); // Thrown TypeError: [object Object] is not a thenable object\n</code></pre>"},{"location":"websocket/node_modules/type/docs/time-value/","title":"Time value","text":"<p>number primitive which is a valid time value (as used internally in Date instances)</p>"},{"location":"websocket/node_modules/type/docs/time-value/#time-valuecoerce","title":"<code>time-value/coerce</code>","text":"<p>Follows <code>integer/coerce</code> but returns <code>null</code> in place of values which go beyond 100 000 0000 days from unix epoch</p> <pre><code>const coerceToTimeValue = require(\"type/time-value/coerce\");\n\ncoerceToTimeValue(12312312); // true\ncoerceToTimeValue(Number.MAX_SAFE_INTEGER); // false\ncoerceToTimeValue(\"foo\"); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/time-value/#time-valueensure","title":"<code>time-value/ensure</code>","text":"<p>If given argument is a time value coercible value (via <code>time-value/coerce</code>) returns result number. Otherwise <code>TypeError</code> is thrown.</p> <pre><code>const ensureTimeValue = require(\"type/time-value/ensure\");\n\nensureTimeValue(12.93); // \"12\"\nensureTimeValue(Number.MAX_SAFE_INTEGER); // Thrown TypeError: null is not a natural number\n</code></pre>"},{"location":"websocket/node_modules/type/docs/value/","title":"Value","text":"<p>Value, any value that's neither <code>null</code> nor <code>undefined</code> .</p>"},{"location":"websocket/node_modules/type/docs/value/#valueis","title":"<code>value/is</code>","text":"<p>Confirms whether passed argument is a value</p> <pre><code>const isValue = require(\"type/value/is\");\n\nisValue({}); // true\nisValue(null); // false\n</code></pre>"},{"location":"websocket/node_modules/type/docs/value/#valueensure","title":"<code>value/ensure</code>","text":"<p>Ensures if given argument is a value. If it's a value it is returned back, if not <code>TypeError</code> is thrown</p> <pre><code>const ensureValue = require(\"type/value/ensure\");\n\nconst obj = {};\n\nensureValue(obj); // obj\nensureValue(null); // Thrown TypeError: Cannot use null\n</code></pre>"},{"location":"websocket/node_modules/typedarray-to-buffer/","title":"typedarray-to-buffer","text":""},{"location":"websocket/node_modules/typedarray-to-buffer/#convert-a-typed-array-to-a-buffer-without-a-copy","title":"Convert a typed array to a Buffer without a copy.","text":"<p>Say you're using the 'buffer' module on npm, or browserify and you're working with lots of binary data.</p> <p>Unfortunately, sometimes the browser or someone else's API gives you a typed array like <code>Uint8Array</code> to work with and you need to convert it to a <code>Buffer</code>. What do you do?</p> <p>Of course: <code>Buffer.from(uint8array)</code></p> <p>But, alas, every time you do <code>Buffer.from(uint8array)</code> the entire array gets copied. The <code>Buffer</code> constructor does a copy; this is defined by the node docs and the 'buffer' module matches the node API exactly.</p> <p>So, how can we avoid this expensive copy in performance critical applications?</p> <p>Simply use this module, of course!</p> <p>If you have an <code>ArrayBuffer</code>, you don't need this module, because <code>Buffer.from(arrayBuffer)</code> is already efficient.</p>"},{"location":"websocket/node_modules/typedarray-to-buffer/#install","title":"install","text":"<pre><code>npm install typedarray-to-buffer\n</code></pre>"},{"location":"websocket/node_modules/typedarray-to-buffer/#usage","title":"usage","text":"<p>To convert a typed array to a <code>Buffer</code> without a copy, do this:</p> <pre><code>var toBuffer = require('typedarray-to-buffer')\n\nvar arr = new Uint8Array([1, 2, 3])\narr = toBuffer(arr)\n\n// arr is a buffer now!\n\narr.toString()  // '\\u0001\\u0002\\u0003'\narr.readUInt16BE(0)  // 258\n</code></pre>"},{"location":"websocket/node_modules/typedarray-to-buffer/#how-it-works","title":"how it works","text":"<p>If the browser supports typed arrays, then <code>toBuffer</code> will augment the typed array you pass in with the <code>Buffer</code> methods and return it. See how does Buffer work? for more about how augmentation works.</p> <p>This module uses the typed array's underlying <code>ArrayBuffer</code> to back the new <code>Buffer</code>. This respects the \"view\" on the <code>ArrayBuffer</code>, i.e. <code>byteOffset</code> and <code>byteLength</code>. In other words, if you do <code>toBuffer(new Uint32Array([1, 2, 3]))</code>, then the new <code>Buffer</code> will contain <code>[1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0]</code>, not <code>[1, 2, 3]</code>. And it still doesn't require a copy.</p> <p>If the browser doesn't support typed arrays, then <code>toBuffer</code> will create a new <code>Buffer</code> object, copy the data into it, and return it. There's no simple performance optimization we can do for old browsers. Oh well.</p> <p>If this module is used in node, then it will just call <code>Buffer.from</code>. This is just for the convenience of modules that work in both node and the browser.</p>"},{"location":"websocket/node_modules/typedarray-to-buffer/#license","title":"license","text":"<p>MIT. Copyright (C) Feross Aboukhadijeh.</p>"},{"location":"websocket/node_modules/utf-8-validate/","title":"utf-8-validate","text":"<p>Check if a buffer contains valid UTF-8 encoded text.</p>"},{"location":"websocket/node_modules/utf-8-validate/#installation","title":"Installation","text":"<pre><code>npm install utf-8-validate --save-optional\n</code></pre> <p>The <code>--save-optional</code> flag tells npm to save the package in your package.json under the <code>optionalDependencies</code> key.</p>"},{"location":"websocket/node_modules/utf-8-validate/#api","title":"API","text":"<p>The module exports a single function which takes one argument.</p>"},{"location":"websocket/node_modules/utf-8-validate/#isvalidutf8buffer","title":"<code>isValidUTF8(buffer)</code>","text":"<p>Checks whether a buffer contains valid UTF-8.</p>"},{"location":"websocket/node_modules/utf-8-validate/#arguments","title":"Arguments","text":"<ul> <li><code>buffer</code> - The buffer to check.</li> </ul>"},{"location":"websocket/node_modules/utf-8-validate/#return-value","title":"Return value","text":"<p><code>true</code> if the buffer contains only correct UTF-8, else <code>false</code>.</p>"},{"location":"websocket/node_modules/utf-8-validate/#example","title":"Example","text":"<pre><code>'use strict';\n\nconst isValidUTF8 = require('utf-8-validate');\n\nconst buf = Buffer.from([0xf0, 0x90, 0x80, 0x80]);\n\nconsole.log(isValidUTF8(buf));\n// =&gt; true\n</code></pre>"},{"location":"websocket/node_modules/utf-8-validate/#license","title":"License","text":"<p>MIT</p>"},{"location":"websocket/node_modules/websocket/","title":"WebSocket Client &amp; Server Implementation for Node","text":""},{"location":"websocket/node_modules/websocket/#overview","title":"Overview","text":"<p>This is a (mostly) pure JavaScript implementation of the WebSocket protocol versions 8 and 13 for Node.  There are some example client and server applications that implement various interoperability testing protocols in the \"test/scripts\" folder.</p>"},{"location":"websocket/node_modules/websocket/#documentation","title":"Documentation","text":"<p>You can read the full API documentation in the docs folder.</p>"},{"location":"websocket/node_modules/websocket/#changelog","title":"Changelog","text":"<p>Current Version: 1.0.35 - Release 2024-05-12</p> <ul> <li>Updated from vulnerable version of es5-ext to a newer version that has been patched. Thanks, @Tringapps-Dharshan</li> </ul> <p>View the full changelog</p>"},{"location":"websocket/node_modules/websocket/#browser-support","title":"Browser Support","text":"<p>All current browsers are fully* supported.</p> <ul> <li>Firefox 7-9 (Old) (Protocol Version 8)</li> <li>Firefox 10+ (Protocol Version 13)</li> <li>Chrome 14,15 (Old) (Protocol Version 8)</li> <li>Chrome 16+ (Protocol Version 13)</li> <li>Internet Explorer 10+ (Protocol Version 13)</li> <li>Safari 6+ (Protocol Version 13)</li> </ul> <p>(Not all W3C WebSocket features are supported by browsers. More info in the Full API documentation)</p>"},{"location":"websocket/node_modules/websocket/#benchmarks","title":"Benchmarks","text":"<p>There are some basic benchmarking sections in the Autobahn test suite.  I've put up a benchmark page that shows the results from the Autobahn tests run against AutobahnServer 0.4.10, WebSocket-Node 1.0.2, WebSocket-Node 1.0.4, and ws 0.3.4.</p> <p>(These benchmarks are quite a bit outdated at this point, so take them with a grain of salt. Anyone up for running new benchmarks? I'll link to your report.)</p>"},{"location":"websocket/node_modules/websocket/#autobahn-tests","title":"Autobahn Tests","text":"<p>The very complete Autobahn Test Suite is used by most WebSocket implementations to test spec compliance and interoperability.</p> <ul> <li>View Server Test Results</li> </ul>"},{"location":"websocket/node_modules/websocket/#installation","title":"Installation","text":"<p>In your project root:</p> <pre><code>$ npm install websocket\n</code></pre> <p>Then in your code:</p> <pre><code>var WebSocketServer = require('websocket').server;\nvar WebSocketClient = require('websocket').client;\nvar WebSocketFrame  = require('websocket').frame;\nvar WebSocketRouter = require('websocket').router;\nvar W3CWebSocket = require('websocket').w3cwebsocket;\n</code></pre>"},{"location":"websocket/node_modules/websocket/#current-features","title":"Current Features:","text":"<ul> <li>Licensed under the Apache License, Version 2.0</li> <li>Protocol version \"8\" and \"13\" (Draft-08 through the final RFC) framing and handshake</li> <li>Can handle/aggregate received fragmented messages</li> <li>Can fragment outgoing messages</li> <li>Router to mount multiple applications to various path and protocol combinations</li> <li>TLS supported for outbound connections via WebSocketClient</li> <li>TLS supported for server connections (use https.createServer instead of http.createServer)</li> <li>Thanks to pors for confirming this!</li> <li>Cookie setting and parsing</li> <li>Tunable settings</li> <li>Max Receivable Frame Size</li> <li>Max Aggregate ReceivedMessage Size</li> <li>Whether to fragment outgoing messages</li> <li>Fragmentation chunk size for outgoing messages</li> <li>Whether to automatically send ping frames for the purposes of keepalive</li> <li>Keep-alive ping interval</li> <li>Whether or not to automatically assemble received fragments (allows application to handle individual fragments directly)</li> <li>How long to wait after sending a close frame for acknowledgment before closing the socket.</li> <li>W3C WebSocket API for applications running on both Node and browsers (via the <code>W3CWebSocket</code> class). </li> </ul>"},{"location":"websocket/node_modules/websocket/#known-issuesmissing-features","title":"Known Issues/Missing Features:","text":"<ul> <li>No API for user-provided protocol extensions.</li> </ul>"},{"location":"websocket/node_modules/websocket/#usage-examples","title":"Usage Examples","text":""},{"location":"websocket/node_modules/websocket/#server-example","title":"Server Example","text":"<p>Here's a short example showing a server that echos back anything sent to it, whether utf-8 or binary.</p> <pre><code>#!/usr/bin/env node\nvar WebSocketServer = require('websocket').server;\nvar http = require('http');\n\nvar server = http.createServer(function(request, response) {\n    console.log((new Date()) + ' Received request for ' + request.url);\n    response.writeHead(404);\n    response.end();\n});\nserver.listen(8080, function() {\n    console.log((new Date()) + ' Server is listening on port 8080');\n});\n\nwsServer = new WebSocketServer({\n    httpServer: server,\n    // You should not use autoAcceptConnections for production\n    // applications, as it defeats all standard cross-origin protection\n    // facilities built into the protocol and the browser.  You should\n    // *always* verify the connection's origin and decide whether or not\n    // to accept it.\n    autoAcceptConnections: false\n});\n\nfunction originIsAllowed(origin) {\n  // put logic here to detect whether the specified origin is allowed.\n  return true;\n}\n\nwsServer.on('request', function(request) {\n    if (!originIsAllowed(request.origin)) {\n      // Make sure we only accept requests from an allowed origin\n      request.reject();\n      console.log((new Date()) + ' Connection from origin ' + request.origin + ' rejected.');\n      return;\n    }\n\n    var connection = request.accept('echo-protocol', request.origin);\n    console.log((new Date()) + ' Connection accepted.');\n    connection.on('message', function(message) {\n        if (message.type === 'utf8') {\n            console.log('Received Message: ' + message.utf8Data);\n            connection.sendUTF(message.utf8Data);\n        }\n        else if (message.type === 'binary') {\n            console.log('Received Binary Message of ' + message.binaryData.length + ' bytes');\n            connection.sendBytes(message.binaryData);\n        }\n    });\n    connection.on('close', function(reasonCode, description) {\n        console.log((new Date()) + ' Peer ' + connection.remoteAddress + ' disconnected.');\n    });\n});\n</code></pre>"},{"location":"websocket/node_modules/websocket/#client-example","title":"Client Example","text":"<p>This is a simple example client that will print out any utf-8 messages it receives on the console, and periodically sends a random number.</p> <p>This code demonstrates a client in Node.js, not in the browser</p> <pre><code>#!/usr/bin/env node\nvar WebSocketClient = require('websocket').client;\n\nvar client = new WebSocketClient();\n\nclient.on('connectFailed', function(error) {\n    console.log('Connect Error: ' + error.toString());\n});\n\nclient.on('connect', function(connection) {\n    console.log('WebSocket Client Connected');\n    connection.on('error', function(error) {\n        console.log(\"Connection Error: \" + error.toString());\n    });\n    connection.on('close', function() {\n        console.log('echo-protocol Connection Closed');\n    });\n    connection.on('message', function(message) {\n        if (message.type === 'utf8') {\n            console.log(\"Received: '\" + message.utf8Data + \"'\");\n        }\n    });\n\n    function sendNumber() {\n        if (connection.connected) {\n            var number = Math.round(Math.random() * 0xFFFFFF);\n            connection.sendUTF(number.toString());\n            setTimeout(sendNumber, 1000);\n        }\n    }\n    sendNumber();\n});\n\nclient.connect('ws://localhost:8080/', 'echo-protocol');\n</code></pre>"},{"location":"websocket/node_modules/websocket/#client-example-using-the-w3c-websocket-api","title":"Client Example using the W3C WebSocket API","text":"<p>Same example as above but using the W3C WebSocket API.</p> <pre><code>var W3CWebSocket = require('websocket').w3cwebsocket;\n\nvar client = new W3CWebSocket('ws://localhost:8080/', 'echo-protocol');\n\nclient.onerror = function() {\n    console.log('Connection Error');\n};\n\nclient.onopen = function() {\n    console.log('WebSocket Client Connected');\n\n    function sendNumber() {\n        if (client.readyState === client.OPEN) {\n            var number = Math.round(Math.random() * 0xFFFFFF);\n            client.send(number.toString());\n            setTimeout(sendNumber, 1000);\n        }\n    }\n    sendNumber();\n};\n\nclient.onclose = function() {\n    console.log('echo-protocol Client Closed');\n};\n\nclient.onmessage = function(e) {\n    if (typeof e.data === 'string') {\n        console.log(\"Received: '\" + e.data + \"'\");\n    }\n};\n</code></pre>"},{"location":"websocket/node_modules/websocket/#request-router-example","title":"Request Router Example","text":"<p>For an example of using the request router, see <code>libwebsockets-test-server.js</code> in the <code>test</code> folder.</p>"},{"location":"websocket/node_modules/websocket/#resources","title":"Resources","text":"<p>A presentation on the state of the WebSockets protocol that I gave on July 23, 2011 at the LA Hacker News meetup.  WebSockets: The Real-Time Web, Delivered</p>"},{"location":"websocket/node_modules/websocket/CHANGELOG/","title":"Changelog","text":""},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1035","title":"Version 1.0.35","text":"<p>Released 2024-05-12</p> <ul> <li>Updated from vulnerable version of es5-ext to a newer version that has been patched. Thanks, @Tringapps-Dharshan</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1034","title":"Version 1.0.34","text":"<p>Released 2021-04-14</p> <ul> <li>Updated browser shim to use the native <code>globalThis</code> property when available. See this MDN page for context. Resolves #415</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1033","title":"Version 1.0.33","text":"<p>Released 2020-12-08</p> <ul> <li>Added new configuration options to WebSocketServer allowing implementors to bypass parsing WebSocket extensions and HTTP Cookies if they are not needed. (Thanks, @aetheon)</li> <li>Added new <code>upgradeError</code> event to WebSocketServer to allow for visibility into and logging of any parsing errors that might occur during the HTTP Upgrade phase. (Thanks, @aetheon)</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1032","title":"Version 1.0.32","text":"<p>Released 2020-08-28</p> <ul> <li>Refactor to use N-API modules from ws project. (Thanks, @andreek)</li> <li>Specifically:<ul> <li>utf-8-validate</li> <li>bufferutil</li> </ul> </li> <li>Removed some documentation notations about very old browsers and very old Websocket protocol drafts that are no longer relevant today in 2020.</li> <li>Removed outdated notations and instructions about building native extensions, since those functions are now delegated to dependencies.</li> <li>Add automated unit test executionn via Github Actions (Thanks, @nebojsa94)</li> <li>Accept new connection close code <code>1015</code> (\"TLS Handshake\"). (More information at the WebSocket Close Code Number Registry)</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1031","title":"Version 1.0.31","text":"<p>Released 2019-12-06</p> <ul> <li>Fix infinite loop in error handling (Thanks, @apirila)</li> <li>Fix memory leak with multiple WebSocket servers on the same HTTP server (Thanks, @nazar-pc)</li> <li>Use es5-ext/global as a more robust way to resolve browser's window object (Thanks, @michaelsbradleyjr)</li> <li>adding compatibility with V8 release greater than v7.6 (node and electron engines) (Thanks, @artynet)</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1030","title":"Version 1.0.30","text":"<p>Released 2019-09-12</p> <ul> <li>Moved gulp back to devDependencies</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1029","title":"Version 1.0.29","text":"<p>Released 2019-07-03</p> <ul> <li>Updated some dependencies and updated the .gitignore and .npmignore files</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1028","title":"Version 1.0.28","text":"<p>Released 2018-09-19</p> <ul> <li>Updated to latest version of nan</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1027","title":"Version 1.0.27","text":"<p>Released 2018-09-19</p> <ul> <li>Allowing additional request <code>headers</code> to be specified in the <code>tlsOptions</code> config parameter for WebSocketClient. See pull request #323</li> <li>Resolving deprecation warnings relating to usage of <code>new Buffer</code></li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1026","title":"Version 1.0.26","text":"<p>Released 2018-04-27</p> <ul> <li>No longer using the deprecated <code>noAssert</code> parameter for functions reading and writing binary numeric data. (Thanks, @BridgeAR)</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1025","title":"Version 1.0.25","text":"<p>Released 2017-10-18</p> <ul> <li>Bumping minimum supported node version specified in package.json to v0.10.x because some upstream libraries no longer install on v0.8.x</li> <li>Allowing use of close codes 1012, 1013, 1014</li> <li>Allowing the <code>Host</code> header to be overridden. (Thanks, @Juneil)</li> <li>Mitigating infinite loop for broken connections (Thanks, @tvkit)</li> <li>Fixed Markdown Typos (Thanks, @teramotodaiki)</li> <li>Adding old readyState constants for W3CWebSocket interface (Thanks, @thechriswalker)</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1024","title":"Version 1.0.24","text":"<p>Released 2016-12-28</p> <ul> <li>Fixed a bug when using native keepalive on Node &gt;= 6.0. (Thanks, @prossin)</li> <li>Upgrading outdated dependencies</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1023","title":"Version 1.0.23","text":"<p>Released 2016-05-18</p> <ul> <li>Official support for Node 6.x</li> <li>Updating dependencies. Specifically, updating nan to ^2.3.3</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1022","title":"Version 1.0.22","text":"<p>Released 2015-09-28</p> <ul> <li>Updating to work with nan 2.x</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1021","title":"Version 1.0.21","text":"<p>Released 2015-07-22</p> <ul> <li>Incremented and re-published to work around an aborted npm publish of v1.0.20.</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1020","title":"Version 1.0.20","text":"<p>Released 2015-07-22</p> <ul> <li>Added EventTarget to the W3CWebSocket interface (Thanks, @ibc!)</li> <li>Corrected an inaccurate error message. (Thanks, @lekoaf!)</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1019","title":"Version 1.0.19","text":"<p>Released 2015-05-28</p> <ul> <li>Updated to nan v1.8.x (tested with v1.8.4)</li> <li>Added <code>\"license\": \"Apache-2.0\"</code> to package.json via pull request #199 by @pgilad. See npm1k.org.</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1018","title":"Version 1.0.18","text":"<p>Released 2015-03-19</p> <ul> <li>Resolves issue #195 - passing number to connection.send() causes crash</li> <li>Added close code/reason arguments to W3CWebSocket#close()</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1017","title":"Version 1.0.17","text":"<p>Released 2015-01-17</p> <ul> <li>Resolves issue #179 - Allow toBuffer to work with empty data</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1016","title":"Version 1.0.16","text":"<p>Released 2015-01-16</p> <ul> <li>Resolves issue #178 - Ping Frames with no data</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1015","title":"Version 1.0.15","text":"<p>Released 2015-01-13</p> <ul> <li>Resolves issue #177 - WebSocketClient ignores options unless it has a tlsOptions property</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1014","title":"Version 1.0.14","text":"<p>Released 2014-12-03</p> <ul> <li>Resolves issue #173 - To allow the W3CWebSocket interface to accept an optional non-standard configuration object as its third parameter, which will be ignored when running in a browser context.</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1013","title":"Version 1.0.13","text":"<p>Released 2014-11-29</p> <ul> <li>Fixes issue #171 - Code to prevent calling req.accept/req.reject multiple times breaks sanity checks in req.accept</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1012","title":"Version 1.0.12","text":"<p>Released 2014-11-28</p> <ul> <li>Fixes issue #170 - Non-native XOR implementation broken after making JSHint happy</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1011","title":"Version 1.0.11","text":"<p>Released 2014-11-25</p> <ul> <li>Fixes some undefined behavior surrounding closing WebSocket connections and more reliably handles edge cases.</li> <li>Adds an implementation of the W3C WebSocket API for browsers to facilitate sharing code between client and server via browserify. (Thanks, @ibc!)</li> <li><code>WebSocketConnection.prototype.close</code> now accepts optional <code>reasonCode</code> and <code>description</code> parameters.</li> <li>Calling <code>accept</code> or <code>reject</code> more than once on a <code>WebSocketRequest</code> will now throw an error.  Issue #149</li> <li>Handling connections dropped by client before accepted by server Issue #167</li> <li>Integrating Gulp and JSHint (Thanks, @ibc!)</li> <li>Starting to add individual unit tests (using substack's tape and faucet)</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-1010","title":"Version 1.0.10","text":"<p>Released 2014-10-22</p> <ul> <li>Fixed Issue #146 that was causing WebSocketClient to throw errors when instantiated if passed <code>tlsOptions</code>.</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-109","title":"Version 1.0.9","text":"<p>Released 2014-10-20</p> <ul> <li>Fixing an insidious corner-case bug that prevented <code>WebSocketConnection</code> from firing the <code>close</code> event in certain cases when there was an error on the underlying <code>Socket</code>, leading to connections sticking around forever, stuck erroneously in the <code>connected</code> state.  These \"ghost\" connections would cause an error event when trying to write to them.</li> <li>Removed deprecated <code>websocketVersion</code> property.  Use <code>webSocketVersion</code> instead (case difference).</li> <li>Allowing user to specify all properties for <code>tlsOptions</code> in WebSocketClient, not just a few whitelisted properties.  This keeps us from having to constantly add new config properties for new versions of Node. (Thanks, jesusprubio)</li> <li>Removing support for Node 0.4.x and 0.6.x.</li> <li>Adding <code>fuzzingclient.json</code> spec file for the Autobahn Test Suite.</li> <li>Now more fairly emitting <code>message</code> events from the <code>WebSocketConnection</code>.  Previously, all buffered frames for a connection would be processed and all <code>message</code> events emitted before moving on to processing the next connection with available data.  Now We process one frame per connection (most of the time) in a more fair round-robin fashion.</li> <li>Now correctly calling the <code>EventEmitter</code> superclass constructor during class instance initialization.</li> <li><code>WebSocketClient.prototype.connect</code> now accepts the empty string (<code>''</code>) to mean \"no subprotocol requested.\"  Previously either <code>null</code> or an empty array (<code>[]</code>) was required.</li> <li>Fixing a <code>TypeError</code> bug in <code>WebSocketRouter</code> (Thanks, a0000778)</li> <li>Fixing a potential race condition when attaching event listeners to the underlying <code>Socket</code>. (Thanks RichardBsolut)</li> <li><code>WebSocketClient</code> now accepts an optional options hash to be passed to <code>(http|https).request</code>. (Thanks mildred and aus)  This enables the following new abilities, amongst others:</li> <li>Use WebSocket-Node from behind HTTP/HTTPS proxy servers using koichik/node-tunnel or similar.</li> <li>Specify the local port and local address to bind the outgoing request socket to.</li> <li>Adding option to ignore <code>X-Forwarded-For</code> headers when accepting connections from untrusted clients.</li> <li>Adding ability to mount a <code>WebSocketServer</code> instance to an arbitrary number of Node http/https servers.</li> <li>Adding browser shim so Browserify won't blow up when trying to package up code that uses WebSocket-Node.  The shim is a no-op, it does not implement a wrapper providing the WebSocket-Node API in the browser.</li> <li>Incorporating upstream enhancements for the native C++ UTF-8 validation and xor masking functions. (Thanks einaros and kkoopa)</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-108","title":"Version 1.0.8","text":"<p>Released 2012-12-26</p> <ul> <li>Fixed remaining naming inconsistency of \"websocketVersion\" as opposed to \"webSocketVersion\" throughout the code, and added deprecation warnings for use of the old casing throughout.</li> <li>Fixed an issue with our case-insensitive handling of WebSocket subprotocols.  Clients that requested a mixed-case subprotocol would end up failing the connection when the server accepted the connection, returning a lower-case version of the subprotocol name.  Now we return the subprotocol name in the exact casing that was requested by the client, while still maintaining the case-insensitive verification logic for convenience and practicality.</li> <li>Making sure that any socket-level activity timeout that may have been set on a TCP socket is removed when initializing a connection.</li> <li>Added support for native TCP Keep-Alive instead of using the WebSocket ping/pong packets to serve that function.</li> <li>Fixed cookie parsing to be compliant with RFC 2109</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-107","title":"Version 1.0.7","text":"<p>Released 2012-08-12</p> <ul> <li>Native modules are now optional! If they fail to compile, WebSocket-Node will still work but will not verify that received UTF-8 data is valid, and xor masking/unmasking of payload data for security purposes will not be as efficient as it is performed in JavaScript instead of native code.</li> <li>Reduced Node.JS version requirement back to v0.6.10</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-106","title":"Version 1.0.6","text":"<p>Released 2012-05-22</p> <ul> <li>Now requires Node v0.6.13 since that's the first version that I can manage to successfully build the native UTF-8 validator with node-gyp through npm.</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-105","title":"Version 1.0.5","text":"<p>Released 2012-05-21</p> <ul> <li>Fixes the issues that users were having building the native UTF-8 validator on Windows platforms.  Special Thanks to:</li> <li>zerodivisi0n</li> <li>andreasbotsikas</li> <li>Fixed accidental global variable usage (Thanks, hakobera!)</li> <li>Added callbacks to the send* methods that provide notification of messages being sent on the wire and any socket errors that may occur when sending a message. (Thanks, zerodivisi0n!)</li> <li>Added option to disable logging in the echo-server in the test folder (Thanks, oberstet!)</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-104","title":"Version 1.0.4","text":"<p>Released 2011-12-18</p> <ul> <li>Now validates that incoming UTF-8 messages do, in fact, contain valid UTF-8 data.  The connection is dropped with prejudice if invalid data is received.  This strict behavior conforms to the WebSocket RFC and is verified by the Autobahn Test Suite.  This is accomplished in a performant way by using a native C++ Node module created by einaros.</li> <li>Updated handling of connection closure to pass more of the Autobahn Test Suite.</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-103","title":"Version 1.0.3","text":"<p>Released 2011-12-18</p> <ul> <li>Substantial speed increase (~150% on my machine, depending on the circumstances) due to an optimization in FastBufferList.js that drastically reduces the number of memory alloctions and buffer copying. (kazuyukitanimura)</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-102","title":"Version 1.0.2","text":"<p>Released 2011-11-28</p> <ul> <li>Fixing whiteboard example to work under Node 0.6.x (theturtle32)</li> <li>Now correctly emitting a <code>close</code> event with a 1006 error code if there is a TCP error while writing to the socket during the handshake. (theturtle32)</li> <li>Catching errors when writing to the TCP socket during the handshake. (justoneplanet)</li> <li>No longer outputting console.warn messages when there is an error writing to the TCP socket (justoneplanet)</li> <li>Fixing some formatting errors, commas, semicolons, etc.  (kaisellgren)</li> </ul>"},{"location":"websocket/node_modules/websocket/CHANGELOG/#version-101","title":"Version 1.0.1","text":"<p>Released 2011-11-21</p> <ul> <li>Now works with Node 0.6.2 as well as 0.4.12</li> <li>Support TLS in WebSocketClient</li> <li>Added support for setting and reading cookies</li> <li>Added WebSocketServer.prototype.broadcast(data) convenience method</li> <li>Added <code>resourceURL</code> property to WebSocketRequest objects.  It is a Node URL object with the <code>resource</code> and any query string params already parsed.</li> <li>The WebSocket request router no longer includes the entire query string when trying to match the path name of the request.</li> <li>WebSocketRouterRequest objects now include all the properties and events of WebSocketRequest objects.</li> <li>Removed more console.log statements.  Please rely on the various events emitted to be notified of error conditions.  I decided that it is not a library's place to spew information to the console.</li> <li>Renamed the <code>websocketVersion</code> property to <code>webSocketVersion</code> throughout the code to fix inconsistent capitalization.  <code>websocketVersion</code> has been kept for compatibility but is deprecated and may be removed in the future.</li> <li>Now outputting the sanitized version of custom header names rather than the raw value.  This prevents invalid HTTP from being put onto the wire if given an illegal header name.</li> </ul> <p>I decided it's time to start maintaining a changelog now, starting with version 1.0.1.</p>"},{"location":"websocket/node_modules/yaeti/","title":"yaeti","text":"<p>Yet Another EventTarget Implementation.</p> <p>The library exposes both the EventTarget interface and the Event interface.</p>"},{"location":"websocket/node_modules/yaeti/#installation","title":"Installation","text":"<pre><code>$ npm install yaeti --save\n</code></pre>"},{"location":"websocket/node_modules/yaeti/#usage","title":"Usage","text":"<pre><code>var yaeti = require('yaeti');\n\n\n// Custom class we want to make an EventTarget.\nfunction Foo() {\n    // Make Foo an EventTarget.\n    yaeti.EventTarget.call(this);\n}\n\n// Create an instance.\nvar foo = new Foo();\n\nfunction listener1() {\n    console.log('listener1');\n}\n\nfunction listener2() {\n    console.log('listener2');\n}\n\nfoo.addEventListener('bar', listener1);\nfoo.addEventListener('bar', listener2);\nfoo.removeEventListener('bar', listener1);\n\nvar event = new yaeti.Event('bar');\n\nfoo.dispatchEvent(event);\n\n\n// Output:\n// =&gt; \"listener2\"\n</code></pre>"},{"location":"websocket/node_modules/yaeti/#api","title":"API","text":""},{"location":"websocket/node_modules/yaeti/#yaetieventtarget-interface","title":"<code>yaeti.EventTarget</code> interface","text":"<p>Implementation of the EventTarget interface.</p> <ul> <li> <p>Make a custom class inherit from <code>EventTarget</code>: <pre><code>function Foo() {\n    yaeti.EventTarget.call(this);\n}\n</code></pre></p> </li> <li> <p>Make an existing object an <code>EventTarget</code>: <pre><code>yaeti.EventTarget.call(obj);\n</code></pre></p> </li> </ul> <p>The interface implements the <code>addEventListener</code>, <code>removeEventListener</code> and <code>dispatchEvent</code> methods as defined by the W3C.</p>"},{"location":"websocket/node_modules/yaeti/#listeners-read-only-property","title":"<code>listeners</code> read-only property","text":"<p>Returns an object whose keys are configured event types (String) and whose values are an array of listeners (functions) for those event types.</p>"},{"location":"websocket/node_modules/yaeti/#yaetievent-interface","title":"<code>yaeti.Event</code> interface","text":"<p>Implementation of the Event interface.</p> <p>NOTE: Just useful in Node (the browser already exposes the native <code>Event</code> interface).</p> <pre><code>var event = new yaeti.Event('bar');\n</code></pre>"},{"location":"websocket/node_modules/yaeti/#author","title":"Author","text":"<p>I\u00f1aki Baz Castillo</p>"},{"location":"websocket/node_modules/yaeti/#license","title":"License","text":"<p>MIT</p>"}]}